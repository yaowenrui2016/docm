{"version":3,"sources":["assert/img/aaa.jpg","common/route/index.tsx","home/menu.ts","home/header/index.tsx","common/http/index.ts","home/sider/user/manage/add/index.tsx","home/sider/user/manage/edit/index.tsx","common/util/index.ts","home/sider/user/manage/list/index.tsx","home/sider/user/manage/index.tsx","home/sider/user/index.tsx","home/sider/docm/list/index.tsx","home/sider/docm/edit/index.tsx","home/sider/docm/index.tsx","home/sider/index.tsx","home/index.tsx","login/index.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","PrivateRoute","_ref","Component","component","props","Object","objectWithoutProperties","react_default","a","createElement","react_router","assign","render","sessionStorage","getItem","to","pathname","state","from","location","menu","key","title","role","Header","HomeHeader","fetchDefaultSelectedKey","menus","_this","menuPaths","map","m","selectedKeys","filter","path","indexOf","length","_this2","this","es_menu","Item","es_button","onClick","history","push","removeItem","setTimeout","UserContext","Consumer","userInfo","headerMenu","className","theme","mode","style","lineHeight","onSelect","param","_this2$props","match","dropdown","overlay","placement","avatar","margin","color","fontSize","size","withRouter","serverPath","http","axios","create","baseURL","withCredentials","timeout","interceptors","request","use","config","xAuthToken","headers","error","console","response","setItem","status","message","createHashHistory","Content","List","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","form","undefined","handleCancel","e","preventDefault","jumpBack","handleSubmit","validateFields","asyncToGenerator","regenerator_default","mark","_callee","err","fielldValues","values","wrap","_context","prev","next","objectSpread","password","md5","Http","put","stop","_x","_x2","apply","arguments","handlePermOnChange","permissions","setFieldsValue","perm","id","setState","treeData","get","then","res","data","v","index","group","value","children","name","catch","replace","_this3","_this$state","breadcrumb","display","alignItems","order","flexGrow","padding","float","block","type","WrappedNormalForm","wrappedComponentRef","row","gutter","col","span","offset","es_form","label","tree_select","width","searchPlaceholder","multiple","treeCheckable","onChange","info","React","NormalForm","getFieldDecorator","input","hidden","rules","required","pattern","validator","_validator","_callee2","rule","callback","source","options","_context2","concat","cku","_x3","_x4","_x5","_x6","_x7","validateTrigger","placeholder","max","post","params","loading","edit_Content","edit_WrappedNormalForm","_this$props$form","getFieldValue","toLine","toLowerCase","handleListChange","pageSize","current","queryRequest","handleSelectChange","conditions","handleDeleteOper","ids","modal","confirm","okText","cancelText","onOk","_onOk","queryString","forEach","delete","substring","success","selectedRowKeys","total","content","sorters","_this$state2","columns","text","record","dataIndex","frozen","moment","createTime","format","sorter","b","icon","event","operation","list_Content","flex","es_select","tokenSeparators","showArrow","suffixIcon","notFoundContent","disabled","table","rowKey","rowSelection","dataSource","onRow","target","pagination","showSizeChanger","showTotal","filters","extra","field","fetchOrderDirection","empty","description","Manage","collapsed","handleOnSelect","toggleCollapsed","background","react_router_dom","exact","ListCmpt","AddCmpt","EditCmpt","Sider","UserSider","layout","collapsedWidth","DOCM_EDIT_OPER_permission","find","DOCM_DELETE_OPER_permission","DOCM_DOWNLOAD_OPER_permission","url","aElement","document","href","click","window","URL","revokeObjectURL","DOCM_LIST_VIEW_permission","DOCM_ADD_OPER_permission","docm_list_Content","result","height","subTitle","MonthPicker","contractTime","credentialTime","fileList","attachments","attachment","uid","docName","docPath","docm_edit_Content","docm_edit_WrappedNormalForm","labelCol","wrapperCol","upload","action","listType","file","date_picker","Docm","docm_Sider","Side","routeMap","DocmModule","UserModule","log","r","createContext","Home","Provider","home_header","home_sider","Login","setFields","errors","Error","overflow","backgroundPosition","backgroundRepeat","backgroundSize","backgroundImage","img","WrappedNormalLoginForm","NormalLoginForm","prefix","App","route","PureComponent","ReactDOM","src_App","getElementById"],"mappings":"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","file":"static/js/main.2a7b486e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/aaa.c155b94e.jpg\";","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\n// 这个组件将根据登录的情况, 返回一个路由\r\nconst PrivateRoute = ({ component: Component, ...props }) => {\r\n  // 解构赋值 将 props 里面的 component 赋值给 Component\r\n  return (\r\n    <Route\r\n      {...props}\r\n      render={p => {\r\n        const userId = sessionStorage.getItem('userId')\r\n        if (userId) {\r\n          // 如果登录了, 返回正确的路由\r\n          return <Component />\r\n        } else {\r\n          // 没有登录就重定向至登录页面\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/login',\r\n                state: {\r\n                  from: p.location.pathname\r\n                }\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      }}\r\n    />\r\n  )\r\n}\r\nexport default PrivateRoute\r\n","\r\nconst menu = [\r\n  {\r\n    key: '/docm',\r\n    title: '项目合同',\r\n    role: ['normal']\r\n  },\r\n  {\r\n    key: '/user',\r\n    title: '账号管理',\r\n    role: ['admin']\r\n  },\r\n  {\r\n    key: '/log',\r\n    title: '日志审计',\r\n    role: ['admin']\r\n  },\r\n  {\r\n    key: '/account',\r\n    title: '我的账号',\r\n    role: ['normal', 'admin']\r\n  },\r\n]\r\n\r\nexport default menu","import React, { Component } from 'react'\r\nimport './index.css'\r\nimport { Layout, Menu, Avatar, Dropdown, Button } from 'antd'\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\r\nimport headerMenu from '../menu'\r\nimport { UserContext } from '../index'\r\n\r\nconst { Header } = Layout\r\n\r\ninterface IProps extends RouteComponentProps {}\r\n\r\ninterface IState {}\r\n\r\nclass HomeHeader extends Component<IProps, IState> {\r\n  fetchDefaultSelectedKey = menus => {\r\n    const { pathname } = this.props.location\r\n    const menuPaths = menus.map(m => m.key)\r\n    const selectedKeys = menuPaths.filter(path => {\r\n      return pathname.indexOf(path) >= 0\r\n    })\r\n    if (selectedKeys.length < 1) {\r\n      return [menuPaths[0]]\r\n    }\r\n    return selectedKeys\r\n  }\r\n\r\n  render() {\r\n    const menu = (\r\n      <Menu>\r\n        <Menu.Item>\r\n          <Button\r\n            onClick={() => {\r\n              this.props.history.push('/main/account')\r\n            }}\r\n          >\r\n            {'修改密码'}\r\n          </Button>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <Button\r\n            onClick={() => {\r\n              sessionStorage.removeItem('userId')\r\n              setTimeout(() => {\r\n                this.props.history.push('/login')\r\n              }, 300)\r\n            }}\r\n          >\r\n            {'退出'}\r\n          </Button>\r\n        </Menu.Item>\r\n      </Menu>\r\n    )\r\n    return (\r\n      <UserContext.Consumer>\r\n        {userInfo => {\r\n          const menus = headerMenu.filter(m => {\r\n            if (userInfo['username'] === 'admin') {\r\n              return m.role.filter(role => role === 'admin').length > 0\r\n            } else {\r\n              return m.role.filter(role => role === 'normal').length > 0\r\n            }\r\n          })\r\n          const selectedKeys = this.fetchDefaultSelectedKey(menus)\r\n          return (\r\n            <div>\r\n              <Header className=\"header\">\r\n                {/* <div key=\"logo\" className=\"logo\" /> */}\r\n                <Menu\r\n                  className=\"navbar\"\r\n                  theme=\"dark\"\r\n                  mode=\"horizontal\"\r\n                  selectedKeys={selectedKeys}\r\n                  style={{ lineHeight: '64px' }}\r\n                  onSelect={param => {\r\n                    const { history, match } = this.props\r\n                    history.push(match.path + param.key)\r\n                  }}\r\n                >\r\n                  {menus.map(m => {\r\n                    return (\r\n                      <Menu.Item className=\"navbar-item\" key={m.key}>\r\n                        {m.title}\r\n                      </Menu.Item>\r\n                    )\r\n                  })}\r\n                </Menu>\r\n                <Dropdown overlay={menu} placement=\"bottomRight\">\r\n                  <Avatar\r\n                    style={{\r\n                      margin: '0 8px 0 0',\r\n                      color: 'white',\r\n                      fontSize: '25px'\r\n                    }}\r\n                    size=\"large\"\r\n                  >\r\n                    {userInfo['username']}\r\n                  </Avatar>\r\n                </Dropdown>\r\n              </Header>\r\n            </div>\r\n          )\r\n        }}\r\n      </UserContext.Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(HomeHeader)\r\n","import axios from 'axios'\r\nimport { createHashHistory } from 'history'\r\nimport { message } from 'antd'\r\n\r\nexport interface QueryRequest {\r\n  pageSize: number | undefined\r\n  current: number | undefined\r\n  conditions?: any\r\n  sorters?: any\r\n}\r\n\r\nexport interface QueryResult<T> {\r\n  total: number | undefined\r\n  content: Array<T>\r\n}\r\n\r\nexport const serverPath = \"http://localhost:8090\"\r\n\r\nconst http = axios.create({\r\n  baseURL: serverPath,\r\n  withCredentials: false,\r\n  timeout: 60000\r\n});\r\n\r\nhttp.interceptors.request.use(config => {\r\n  const xAuthToken = sessionStorage.getItem('xAuthToken');\r\n  if (xAuthToken) {\r\n    config.headers['x-auth-token'] = xAuthToken\r\n  }\r\n  return config\r\n}, error => {\r\n  console.error('请求异常')\r\n})\r\n\r\nhttp.interceptors.response.use(response => {\r\n  const xAuthToken = response.headers['x-auth-token']\r\n  if (xAuthToken) {\r\n    sessionStorage.setItem('xAuthToken', xAuthToken)\r\n  }\r\n  return response\r\n}, error => {\r\n  if (error.response.status === 401) {\r\n    sessionStorage.removeItem('userId')\r\n    message.error('登录超时，请重新登录', 3)\r\n    setTimeout(() => {\r\n      createHashHistory().push(\"/login\")\r\n    }, 500)\r\n  }\r\n})\r\n\r\nexport default http","import React from 'react'\r\nimport {\r\n  Layout,\r\n  Breadcrumb,\r\n  Button,\r\n  Form,\r\n  Input,\r\n  message,\r\n  Col,\r\n  Row,\r\n  TreeSelect\r\n} from 'antd'\r\nimport { FormComponentProps } from 'antd/lib/form'\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\r\nimport IAccountVO from '../type'\r\nimport Http from '../../../../../common/http'\r\nimport md5 from 'js-md5'\r\n\r\nconst { Content } = Layout\r\n\r\ntype IProps = RouteComponentProps & {}\r\n\r\ninterface IState {\r\n  treeData: Array<any>\r\n  permissions: Array<any>\r\n}\r\n\r\nclass List extends React.Component<IProps, IState> {\r\n  form: React.ReactElement<FormProps> | undefined = undefined\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      treeData: [],\r\n      permissions: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    Http.get(`/perm/all`)\r\n      .then(res => {\r\n        const treeData = res.data.data.map((v, index) => {\r\n          return {\r\n            key: index,\r\n            title: v.group,\r\n            value: undefined,\r\n            children: v.permissions.map(perm => {\r\n              return {\r\n                key: perm.id,\r\n                title: perm.name,\r\n                value: perm.id\r\n              }\r\n            })\r\n          }\r\n        })\r\n        this.setState({ treeData })\r\n      })\r\n      .catch(err => {})\r\n  }\r\n\r\n  handleCancel = e => {\r\n    e.preventDefault()\r\n    this.jumpBack()\r\n  }\r\n\r\n  jumpBack() {\r\n    const { match } = this.props\r\n    const path = match.path.replace('/add', '/list')\r\n    this.props.history.push(path)\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault()\r\n    this.form &&\r\n      this.form.props.form.validateFields(async (err, fielldValues) => {\r\n        if (!err) {\r\n          const values: IAccountVO = {\r\n            ...fielldValues,\r\n            password: md5(\r\n              fielldValues.password ? fielldValues.password : '1234'\r\n            )\r\n          }\r\n          await Http.put('/user', values)\r\n          this.jumpBack()\r\n        }\r\n      })\r\n  }\r\n\r\n  handlePermOnChange = permissions => {\r\n    this.form &&\r\n      this.form.props.form.setFieldsValue({\r\n        permissions: permissions.map(perm => ({ id: perm }))\r\n      })\r\n    this.setState({ permissions })\r\n  }\r\n\r\n  render() {\r\n    const { treeData, permissions } = this.state\r\n    return (\r\n      <Content>\r\n        <Breadcrumb style={{ margin: '8px' }}>\r\n          <Breadcrumb.Item>当前位置：</Breadcrumb.Item>\r\n          <Breadcrumb.Item>账号与安全</Breadcrumb.Item>\r\n          <Breadcrumb.Item>账号管理</Breadcrumb.Item>\r\n          <Breadcrumb.Item>新建</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <div\r\n          style={{\r\n            margin: '4px 4px 10px',\r\n            display: 'flex',\r\n            alignItems: 'center'\r\n          }}\r\n        >\r\n          <div style={{ order: 2, flexGrow: 1, padding: '0 8px 0 0' }}>\r\n            <span style={{ float: 'right' }}>\r\n              <Button block type={'default'} onClick={this.handleCancel}>\r\n                返回\r\n              </Button>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div style={{ margin: '8px' }}>\r\n          <WrappedNormalForm\r\n            wrappedComponentRef={(form: React.ReactElement<FormProps>) => {\r\n              this.form = form\r\n            }}\r\n          />\r\n          <Row gutter={60}>\r\n            <Col span={16} offset={4}>\r\n              <Form.Item key={'permissions'} label=\"账号授权\">\r\n                <TreeSelect\r\n                  style={{ width: '100%' }}\r\n                  searchPlaceholder={'请选择权限'}\r\n                  multiple={true}\r\n                  treeData={treeData}\r\n                  value={permissions}\r\n                  treeCheckable={true}\r\n                  onChange={this.handlePermOnChange}\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={60}>\r\n            <Col span={3} offset={9}>\r\n              <Button block type={'primary'} onClick={this.handleSubmit}>\r\n                {'提交'}\r\n              </Button>\r\n            </Col>\r\n            <Col span={3}>\r\n              <Button\r\n                block\r\n                onClick={() => {\r\n                  // TODO\r\n                  message.info('清空表单')\r\n                }}\r\n              >\r\n                {'取消'}\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Content>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(List)\r\n\r\ninterface FormProps extends FormComponentProps {}\r\n\r\ninterface FormState {\r\n  defaultFileList: Array<any>\r\n}\r\n\r\nclass NormalForm extends React.Component<FormProps, FormState> {\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form\r\n    return (\r\n      <Form>\r\n        {getFieldDecorator('id')(<Input hidden />)}\r\n        <Row gutter={60}>\r\n          <Col span={8} offset={4}>\r\n            <Form.Item key={'username'} label=\"用户名\">\r\n              {getFieldDecorator('username', {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    type: 'string',\r\n                    pattern: /^[a-zA-Z][a-zA-Z1-9_]{2,11}$/,\r\n                    message: '用户名为3~12位字母、数字或下划线,第一位必须为字母'\r\n                  },\r\n                  {\r\n                    message: '用户名已存在',\r\n                    validator: async (\r\n                      rule,\r\n                      value,\r\n                      callback,\r\n                      source,\r\n                      options\r\n                    ) => {\r\n                      await Http.get(`/user/cku-username?username=${value}`)\r\n                        .then(res => {\r\n                          if (res.data.status === '00000000') {\r\n                            const cku =\r\n                              res.data.data === true ? true : undefined\r\n                            callback(cku)\r\n                          } else {\r\n                            message.error(res.data.message)\r\n                            callback()\r\n                          }\r\n                        })\r\n                        .catch(err => {\r\n                          message.error('服务器异常')\r\n                          callback()\r\n                        })\r\n                    }\r\n                  }\r\n                ],\r\n                validateTrigger: 'onBlur'\r\n              })(<Input />)}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Form.Item key={'password'} label=\"密码\">\r\n              {getFieldDecorator('password', {\r\n                rules: [\r\n                  {\r\n                    required: false,\r\n                    message: '密码为4~16位任意字符',\r\n                    pattern: /^.{4,16}$/\r\n                  }\r\n                ],\r\n                validateTrigger: 'onBlur'\r\n              })(<Input type={'password'} placeholder={'默认密码为1234'} />)}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row gutter={60}>\r\n          <Col span={8} offset={4}>\r\n            <Form.Item key={'phone'} label=\"手机\">\r\n              {getFieldDecorator('phone', {\r\n                rules: [\r\n                  {\r\n                    required: false,\r\n                    message: '请输入正确的手机号',\r\n                    max: 11\r\n                  }\r\n                ],\r\n                validateTrigger: 'onBlur'\r\n              })(<Input />)}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Form.Item key={'email'} label=\"邮箱\">\r\n              {getFieldDecorator('email', {\r\n                rules: [\r\n                  {\r\n                    required: false,\r\n                    message: '请输入正确的邮箱',\r\n                    type: 'email'\r\n                  }\r\n                ],\r\n                validateTrigger: 'onBlur'\r\n              })(<Input />)}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        {/** 角色授权 */}\r\n        {getFieldDecorator('permissions')}\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nconst WrappedNormalForm = Form.create({\r\n  name: 'normal_login'\r\n})(NormalForm)\r\n","import React from 'react'\r\nimport {\r\n  Layout,\r\n  Breadcrumb,\r\n  Button,\r\n  Form,\r\n  Input,\r\n  message,\r\n  Col,\r\n  Row,\r\n  TreeSelect\r\n} from 'antd'\r\nimport { FormComponentProps } from 'antd/lib/form'\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\r\nimport IAccountVO from '../type'\r\nimport Http from '../../../../../common/http'\r\n\r\nconst { Content } = Layout\r\n\r\ntype IProps = RouteComponentProps & {}\r\n\r\ninterface IState {\r\n  loading: boolean\r\n  id: string\r\n  treeData: Array<any>\r\n  permissions: Array<any>\r\n}\r\n\r\nclass List extends React.Component<IProps, IState> {\r\n  form: React.ReactElement<FormProps> | undefined = undefined\r\n  constructor(props: IProps) {\r\n    super(props)\r\n    this.state = {\r\n      id: this.props.match.params['id'],\r\n      loading: true,\r\n      treeData: [],\r\n      permissions: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.state\r\n    this.setState({ loading: true }, () => {\r\n      Http.get(`/user?id=${id}`)\r\n        .then(res => {\r\n          const data = res.data.data\r\n          this.form &&\r\n            this.form.props.form.setFieldsValue({\r\n              ...data\r\n            })\r\n          const permissions = data.permissions.map(perm => perm.id)\r\n          this.setState({ loading: false, permissions })\r\n        })\r\n        .catch(error => {\r\n          this.setState({ loading: false })\r\n        })\r\n      Http.get(`/perm/all`)\r\n        .then(res => {\r\n          const treeData = res.data.data.map((v, index) => {\r\n            return {\r\n              key: index,\r\n              title: v.group,\r\n              value: undefined,\r\n              children: v.permissions.map(perm => {\r\n                return {\r\n                  key: perm.id,\r\n                  title: perm.name,\r\n                  value: perm.id\r\n                }\r\n              })\r\n            }\r\n          })\r\n          this.setState({ treeData })\r\n        })\r\n        .catch(err => {})\r\n    })\r\n  }\r\n\r\n  handleCancel = e => {\r\n    e.preventDefault()\r\n    const { match } = this.props\r\n    const path = match.path.replace('/edit', '/list')\r\n    this.props.history.push(path)\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault()\r\n    this.form &&\r\n      this.form.props.form.validateFields(async (err, fielldValues) => {\r\n        if (!err) {\r\n          const values: IAccountVO = {\r\n            ...fielldValues\r\n          }\r\n          await Http.post('/user', values)\r\n          const { match } = this.props\r\n          const path = match.path.replace('/edit', '/list')\r\n          this.props.history.push(path)\r\n        }\r\n      })\r\n  }\r\n\r\n  handlePermOnChange = permissions => {\r\n    this.form &&\r\n      this.form.props.form.setFieldsValue({\r\n        permissions: permissions.map(perm => ({ id: perm }))\r\n      })\r\n    this.setState({ permissions })\r\n  }\r\n\r\n  render() {\r\n    const { loading, treeData, permissions } = this.state\r\n    return (\r\n      <Content>\r\n        <Breadcrumb style={{ margin: '8px' }}>\r\n          <Breadcrumb.Item>当前位置：</Breadcrumb.Item>\r\n          <Breadcrumb.Item>账号与安全</Breadcrumb.Item>\r\n          <Breadcrumb.Item>账号管理</Breadcrumb.Item>\r\n          <Breadcrumb.Item>编辑</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <div\r\n          style={{\r\n            margin: '4px 4px 10px',\r\n            display: 'flex',\r\n            alignItems: 'center'\r\n          }}\r\n        >\r\n          <div style={{ order: 2, flexGrow: 1, padding: '0 8px 0 0' }}>\r\n            <span style={{ float: 'right' }}>\r\n              <Button block type={'default'} onClick={this.handleCancel}>\r\n                返回\r\n              </Button>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div style={{ margin: '8px' }}>\r\n          <WrappedNormalForm\r\n            wrappedComponentRef={(form: React.ReactElement<FormProps>) => {\r\n              this.form = form\r\n            }}\r\n          />\r\n          <Row gutter={60}>\r\n            <Col span={16} offset={4}>\r\n              <Form.Item key={'permissions'} label=\"账号授权\">\r\n                <TreeSelect\r\n                  style={{ width: '100%' }}\r\n                  searchPlaceholder={'请选择权限'}\r\n                  multiple={true}\r\n                  treeData={treeData}\r\n                  value={permissions}\r\n                  treeCheckable={true}\r\n                  onChange={this.handlePermOnChange}\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={60}>\r\n            <Col span={3} offset={9}>\r\n              <Button\r\n                block\r\n                type={'primary'}\r\n                loading={loading}\r\n                onClick={this.handleSubmit}\r\n              >\r\n                {'保存'}\r\n              </Button>\r\n            </Col>\r\n            <Col span={3}>\r\n              <Button\r\n                block\r\n                onClick={() => {\r\n                  // TODO\r\n                  message.info('清空表单')\r\n                }}\r\n              >\r\n                {'取消'}\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Content>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(List)\r\n\r\ninterface FormProps extends FormComponentProps {}\r\n\r\ninterface FormState {\r\n  defaultFileList: Array<any>\r\n}\r\n\r\nclass NormalForm extends React.Component<FormProps, FormState> {\r\n  render() {\r\n    const { getFieldDecorator, getFieldValue } = this.props.form\r\n    return (\r\n      <Form>\r\n        {getFieldDecorator('id')(<Input hidden />)}\r\n        <Row gutter={60}>\r\n          <Col span={8} offset={4}>\r\n            <Form.Item key={'username'} label=\"用户名\">\r\n              {getFieldDecorator('username', {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    type: 'string',\r\n                    pattern: /^[a-zA-Z][a-zA-Z1-9_]{2,11}$/,\r\n                    message: '用户名为3~12位字母、数字或下划线,第一位必须为字母'\r\n                  },\r\n                  {\r\n                    message: '用户名已存在',\r\n                    validator: async (\r\n                      rule,\r\n                      value,\r\n                      callback,\r\n                      source,\r\n                      options\r\n                    ) => {\r\n                      const id = getFieldValue('id')\r\n                      await Http.get(\r\n                        `/user/cku-username?username=${value}&id=${id}`\r\n                      )\r\n                        .then(res => {\r\n                          if (res.data.status === '00000000') {\r\n                            const cku =\r\n                              res.data.data === true ? true : undefined\r\n                            callback(cku)\r\n                          } else {\r\n                            message.error(res.data.message)\r\n                            callback()\r\n                          }\r\n                        })\r\n                        .catch(err => {\r\n                          message.error('服务器异常')\r\n                          callback()\r\n                        })\r\n                    }\r\n                  }\r\n                ],\r\n                validateTrigger: 'onBlur'\r\n              })(<Input />)}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={8} />\r\n        </Row>\r\n        <Row gutter={60}>\r\n          <Col span={8} offset={4}>\r\n            <Form.Item key={'phone'} label=\"手机\">\r\n              {getFieldDecorator('phone', {\r\n                rules: [\r\n                  {\r\n                    required: false,\r\n                    message: '请输入正确的手机号',\r\n                    max: 11\r\n                  }\r\n                ],\r\n                validateTrigger: 'onBlur'\r\n              })(<Input />)}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Form.Item key={'email'} label=\"邮箱\">\r\n              {getFieldDecorator('email', {\r\n                rules: [\r\n                  {\r\n                    required: false,\r\n                    message: '请输入正确的邮箱',\r\n                    type: 'email'\r\n                  }\r\n                ],\r\n                validateTrigger: 'onBlur'\r\n              })(<Input />)}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        {/** 角色授权 */}\r\n        {getFieldDecorator('permissions')}\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nconst WrappedNormalForm = Form.create({\r\n  name: 'normal_login'\r\n})(NormalForm)\r\n","/** 下划线转换驼峰 */\r\nexport function toHump(name: string) {\r\n  return name.replace(/_(\\w)/g, function (all, letter) {\r\n    return letter.toUpperCase();\r\n  });\r\n}\r\n\r\n/** 驼峰转换下划线 */\r\nexport function toLine(name: string) {\r\n  return name.replace(/([A-Z])/g, \"_$1\").toLowerCase();\r\n} ","import React from 'react'\r\nimport {\r\n  Layout,\r\n  Breadcrumb,\r\n  Select,\r\n  Button,\r\n  Table,\r\n  Empty,\r\n  message,\r\n  Icon,\r\n  Modal\r\n} from 'antd'\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport IAccountVO from '../type'\r\nimport Http, { QueryResult, QueryRequest } from '../../../../../common/http'\r\nimport { toLine } from '../../../../../common/util'\r\n\r\nconst { Content } = Layout\r\n\r\ntype IProps = RouteComponentProps & {}\r\n\r\ninterface IState {\r\n  loading: boolean\r\n  selectedRowKeys: string[] | number[]\r\n  /**\r\n   * 查询结果\r\n   */\r\n  data: QueryResult<IAccountVO>\r\n  pageSize: number | undefined\r\n  current: number | undefined\r\n  /**\r\n   * 查询条件与排序\r\n   */\r\n  param: {\r\n    conditions: any | undefined\r\n    sorters: any | undefined\r\n  }\r\n}\r\n\r\nclass List extends React.Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props)\r\n    this.state = {\r\n      loading: true,\r\n      selectedRowKeys: [],\r\n      data: {\r\n        total: undefined,\r\n        content: []\r\n      },\r\n      pageSize: 10,\r\n      current: 1,\r\n      param: {\r\n        conditions: {},\r\n        sorters: {}\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.handleListChange()\r\n  }\r\n\r\n  handleListChange = () => {\r\n    this.setState({ loading: true }, () => {\r\n      const { pageSize, current, param } = this.state\r\n      const queryRequest: QueryRequest = {\r\n        pageSize,\r\n        current,\r\n        ...param\r\n      }\r\n      Http.post('/user/list', queryRequest)\r\n        .then(res => {\r\n          this.setState({ loading: false, data: res.data.data })\r\n        })\r\n        .catch(error => {\r\n          this.setState({ loading: false })\r\n        })\r\n    })\r\n  }\r\n\r\n  handleSelectChange = value => {\r\n    const { conditions } = this.state.param\r\n    conditions['keywords'] = value\r\n    this.setState({ current: 1 })\r\n    this.handleListChange()\r\n  }\r\n\r\n  handleDeleteOper = async (ids: Array<string> | Array<number>) => {\r\n    Modal.confirm({\r\n      title: '确定删除?',\r\n      okText: '确认',\r\n      cancelText: '取消',\r\n      onOk: async () => {\r\n        let queryString = ''\r\n        ids.forEach(id => (queryString = queryString.concat(`ids=${id}&`)))\r\n        await Http.delete(\r\n          `/user?${queryString.substring(0, queryString.length - 1)}`\r\n        )\r\n        message.success('删除成功')\r\n        this.handleListChange()\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { loading, selectedRowKeys, data, pageSize, current } = this.state\r\n    const { total, content } = data\r\n    const columns = [\r\n      {\r\n        title: '序号',\r\n        key: 'index',\r\n        render: (text, record, index) => {\r\n          return index + 1\r\n        }\r\n      },\r\n      {\r\n        title: '用户名',\r\n        dataIndex: 'username',\r\n        key: 'username'\r\n      },\r\n      {\r\n        title: '手机',\r\n        dataIndex: 'phone',\r\n        key: 'phone'\r\n      },\r\n      {\r\n        title: '邮箱',\r\n        dataIndex: 'email',\r\n        key: 'email'\r\n      },\r\n      {\r\n        title: '冻结状态',\r\n        dataIndex: 'frozen',\r\n        key: 'frozen',\r\n        render: (text, record, index) => {\r\n          return record.frozen ? '已冻结' : '正常'\r\n        }\r\n      },\r\n      {\r\n        title: '创建时间',\r\n        dataIndex: 'createTime',\r\n        key: 'createTime',\r\n        render: (text, record, index) => {\r\n          return moment(record.createTime).format('YYYY-MM-DD HH:mm:ss')\r\n        },\r\n        sorter: (a, b) => {\r\n          return a.id - b.id\r\n        }\r\n      },\r\n      {\r\n        title: '操作',\r\n        key: 'operation',\r\n        render: (text, record, index) => {\r\n          return (\r\n            <div>\r\n              <Icon\r\n                style={{ fontSize: '17px', margin: '0 9px 0 0' }}\r\n                title={'编辑'}\r\n                type=\"edit\"\r\n                onClick={event => {\r\n                  event.preventDefault()\r\n                  const { match } = this.props\r\n                  const path = match.path.replace('/list', `/edit/${record.id}`)\r\n                  this.props.history.push(path)\r\n                }}\r\n              />\r\n              <Icon\r\n                style={{ fontSize: '17px', margin: '0 9px 0 0' }}\r\n                title={record.frozen ? '解冻' : '冻结'}\r\n                type={record.frozen ? 'lock' : 'unlock'}\r\n                onClick={event => {\r\n                  event.preventDefault()\r\n                  const operation = record.frozen ? 'unfreeze' : 'freeze'\r\n                  Http.post(`/user/${operation}`, { ids: [record.id] })\r\n                    .then(res => {\r\n                      message.success(`${record.frozen ? '解冻' : '冻结'}成功`)\r\n                      this.handleListChange()\r\n                    })\r\n                    .catch(err => {\r\n                      this.handleListChange()\r\n                    })\r\n                }}\r\n              />\r\n              <div id=\"downloadDiv\" style={{ display: 'none' }} />\r\n              <Icon\r\n                style={{ fontSize: '17px', margin: '0 9px 0 0' }}\r\n                title={'删除'}\r\n                type=\"delete\"\r\n                onClick={event => {\r\n                  event.preventDefault()\r\n                  this.handleDeleteOper([record.id])\r\n                }}\r\n              />\r\n            </div>\r\n          )\r\n        }\r\n      }\r\n    ]\r\n    return (\r\n      <Content>\r\n        <Breadcrumb style={{ margin: '8px' }}>\r\n          <Breadcrumb.Item>当前位置：</Breadcrumb.Item>\r\n          <Breadcrumb.Item>账号与安全</Breadcrumb.Item>\r\n          <Breadcrumb.Item>账号管理</Breadcrumb.Item>\r\n          <Breadcrumb.Item>查询</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <div\r\n          style={{\r\n            margin: '4px',\r\n            display: 'flex',\r\n            alignItems: 'center'\r\n          }}\r\n        >\r\n          <div style={{ margin: '4px', flex: 1 }}>\r\n            <Select\r\n              mode={'tags'}\r\n              placeholder={'请输入关键字'}\r\n              style={{ width: '280px' }}\r\n              tokenSeparators={[' ']}\r\n              showArrow={true}\r\n              suffixIcon={<Icon style={{ fontSize: '16px' }} type=\"search\" />}\r\n              onChange={this.handleSelectChange}\r\n              notFoundContent={null}\r\n            />\r\n          </div>\r\n          <div style={{ margin: '4px', flex: 1 }}>\r\n            <span style={{ float: 'right' }}>\r\n              <Button\r\n                className=\"ele-operation\"\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                  const { match } = this.props\r\n                  const path = match.path.replace('/list', '/add')\r\n                  this.props.history.push(path)\r\n                }}\r\n              >\r\n                新建\r\n              </Button>\r\n              <Button\r\n                type=\"ghost\"\r\n                disabled={selectedRowKeys.length < 1}\r\n                onClick={() => {\r\n                  this.handleDeleteOper(selectedRowKeys)\r\n                }}\r\n              >\r\n                批量删除\r\n              </Button>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div style={{ margin: '8px' }}>\r\n          {loading || data.content.length > 0 ? (\r\n            <Table\r\n              rowKey={record => {\r\n                return record.id\r\n              }}\r\n              rowSelection={{\r\n                selectedRowKeys,\r\n                onChange: selectedRowKeys => {\r\n                  this.setState({ selectedRowKeys })\r\n                }\r\n              }}\r\n              columns={columns}\r\n              dataSource={content}\r\n              loading={loading}\r\n              onRow={(record, index) => {\r\n                return {\r\n                  onClick: event => {\r\n                    if (event.target['tagName'] !== 'TD') {\r\n                      return\r\n                    }\r\n                    // TODO\r\n                    // message.info('查看' + record.id)\r\n                  }\r\n                }\r\n              }}\r\n              size={'middle'}\r\n              pagination={{\r\n                total,\r\n                current,\r\n                pageSize,\r\n                showSizeChanger: true,\r\n                showTotal: total => {\r\n                  return `共${total}条`\r\n                }\r\n              }}\r\n              onChange={(pagination, filters, sorter, extra) => {\r\n                const { param } = this.state\r\n                const { current, pageSize } = pagination\r\n                const { field, order } = sorter\r\n                param.sorters = {}\r\n                if (field && order) {\r\n                  param.sorters[toLine(field)] = fetchOrderDirection(order)\r\n                }\r\n                this.setState({ current, pageSize })\r\n                this.handleListChange()\r\n              }}\r\n            />\r\n          ) : (\r\n            <Empty description={'暂无内容'} />\r\n          )}\r\n        </div>\r\n      </Content>\r\n    )\r\n  }\r\n}\r\n\r\nfunction fetchOrderDirection(order: string) {\r\n  if (order === 'descend') {\r\n    return 'desc'\r\n  } else {\r\n    return 'asc'\r\n  }\r\n}\r\n\r\nexport default withRouter(List)\r\n","import React from 'react'\r\nimport './index.css'\r\nimport {\r\n  HashRouter,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n  withRouter,\r\n  RouteComponentProps\r\n} from 'react-router-dom'\r\nimport AddCmpt from './add'\r\nimport EditCmpt from './edit'\r\nimport ListCmpt from './list'\r\n\r\ntype IProps = RouteComponentProps & {}\r\n\r\ninterface IState {\r\n  collapsed: boolean\r\n  selectedKeys: Array<string>\r\n}\r\n\r\nclass Manage extends React.Component<IProps, IState> {\r\n  state: IState = {\r\n    collapsed: false,\r\n    selectedKeys: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    const key = '/manage'\r\n    this.handleOnSelect({ key })\r\n  }\r\n\r\n  handleOnSelect = param => {\r\n    const prePath = '/main/user'\r\n    const { key } = param\r\n    this.setState({ selectedKeys: [key] })\r\n    this.props.history.push(`${prePath}${key}`)\r\n  }\r\n\r\n  toggleCollapsed = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ margin: '0px', background: 'rgb(255, 255, 255)' }}>\r\n        <HashRouter>\r\n          <Switch>\r\n            <Redirect\r\n              path={'/main/user/manage'}\r\n              exact={true}\r\n              to={'/main/user/manage/list'}\r\n            />\r\n            <Route path={'/main/user/manage/list'} component={ListCmpt} />\r\n            <Route path={'/main/user/manage/add'} component={AddCmpt} />\r\n            <Route path={'/main/user/manage/edit/:id'} component={EditCmpt} />\r\n            {/* <Route path={'/main/docm/view'} component={ViewCmpt} /> */}\r\n          </Switch>\r\n        </HashRouter>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Manage)\r\n","import React from 'react'\r\nimport './index.css'\r\nimport { Layout, Menu, Icon } from 'antd'\r\nimport {\r\n  HashRouter,\r\n  Route,\r\n  Switch,\r\n  withRouter,\r\n  RouteComponentProps\r\n} from 'react-router-dom'\r\nimport Manage from './manage'\r\n// import Authority from './authority'\r\n\r\nconst { Sider } = Layout\r\n\r\ntype IProps = RouteComponentProps & {}\r\n\r\ninterface IState {\r\n  collapsed: boolean\r\n  selectedKeys: Array<string>\r\n}\r\n\r\nclass UserSider extends React.Component<IProps, IState> {\r\n  state: IState = {\r\n    collapsed: false,\r\n    selectedKeys: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    const key = '/manage'\r\n    this.handleOnSelect({ key })\r\n  }\r\n\r\n  handleOnSelect = param => {\r\n    const prePath = '/main/user'\r\n    const { key } = param\r\n    this.setState({ selectedKeys: [key] })\r\n    this.props.history.push(`${prePath}${key}`)\r\n  }\r\n\r\n  toggleCollapsed = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { selectedKeys } = this.state\r\n    return (\r\n      <Layout>\r\n        <Sider\r\n          width={180}\r\n          theme=\"dark\"\r\n          collapsed={this.state.collapsed}\r\n          collapsedWidth={80}\r\n        >\r\n          <span className=\"aside-top\" onClick={this.toggleCollapsed}>\r\n            <Icon\r\n              style={{ margin: '0 0 0 10px' }}\r\n              type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\r\n            />\r\n          </span>\r\n          <Menu\r\n            selectedKeys={selectedKeys}\r\n            mode=\"inline\"\r\n            theme=\"dark\"\r\n            onSelect={this.handleOnSelect}\r\n          >\r\n            <Menu.Item className=\"aside-item\" key=\"/manage\">\r\n              <Icon type=\"user\" />\r\n              <span>账号管理</span>\r\n            </Menu.Item>\r\n            <Menu.Item className=\"aside-item\" key=\"/authority\">\r\n              <Icon type=\"safety-certificate\" />\r\n              <span>授权查询</span>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n        <Layout style={{ padding: '0 24px 24px' }}>\r\n          {/* <Result status=\"403\" title=\"403\" subTitle=\"对不起，拒绝访问\" /> */}\r\n          <HashRouter>\r\n            <Switch>\r\n              <Route path={'/main/user/manage'} component={Manage} />\r\n              {/* <Route path={'/main/user/authority'} component={Authority} /> */}\r\n            </Switch>\r\n          </HashRouter>\r\n        </Layout>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(UserSider)\r\n","import React from 'react'\r\nimport {\r\n  Layout,\r\n  Breadcrumb,\r\n  Select,\r\n  Button,\r\n  Table,\r\n  Empty,\r\n  message,\r\n  Icon,\r\n  Modal,\r\n  Result\r\n} from 'antd'\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport IDocmVO from '../type'\r\nimport Http, {\r\n  QueryResult,\r\n  QueryRequest,\r\n  serverPath\r\n} from '../../../../common/http'\r\nimport { toLine } from '../../../../common/util'\r\nimport { UserContext } from '../../../index'\r\n\r\nconst { Content } = Layout\r\n\r\ntype IProps = RouteComponentProps & {}\r\n\r\ninterface IState {\r\n  loading: boolean\r\n  selectedRowKeys: string[] | number[]\r\n  /**\r\n   * 查询结果\r\n   */\r\n  data: QueryResult<IDocmVO>\r\n  pageSize: number | undefined\r\n  current: number | undefined\r\n  /**\r\n   * 查询条件与排序\r\n   */\r\n  param: {\r\n    conditions: any | undefined\r\n    sorters: any | undefined\r\n  }\r\n}\r\n\r\nclass List extends React.Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props)\r\n    this.state = {\r\n      loading: true,\r\n      selectedRowKeys: [],\r\n      data: {\r\n        total: undefined,\r\n        content: []\r\n      },\r\n      pageSize: 10,\r\n      current: 1,\r\n      param: {\r\n        conditions: {},\r\n        sorters: {}\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.handleListChange()\r\n  }\r\n\r\n  handleListChange = () => {\r\n    this.setState({ loading: true }, () => {\r\n      const { pageSize, current, param } = this.state\r\n      const queryRequest: QueryRequest = {\r\n        pageSize,\r\n        current,\r\n        ...param\r\n      }\r\n      Http.post('/docm/list', queryRequest)\r\n        .then(res => {\r\n          this.setState({ loading: false, data: res.data.data })\r\n        })\r\n        .catch(error => {\r\n          this.setState({ loading: false })\r\n        })\r\n    })\r\n  }\r\n\r\n  handleSelectChange = value => {\r\n    const { conditions } = this.state.param\r\n    conditions['keywords'] = value\r\n    this.setState({ current: 1 })\r\n    this.handleListChange()\r\n  }\r\n\r\n  handleDeleteOper = async (ids: Array<string> | Array<number>) => {\r\n    Modal.confirm({\r\n      title: '确定删除?',\r\n      okText: '确认',\r\n      cancelText: '取消',\r\n      onOk: async () => {\r\n        let queryString = ''\r\n        ids.forEach(id => (queryString = queryString.concat(`ids=${id}&`)))\r\n        await Http.delete(\r\n          `/docm?${queryString.substring(0, queryString.length - 1)}`\r\n        )\r\n        message.success('删除成功')\r\n        this.handleListChange()\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { loading, selectedRowKeys, data, pageSize, current } = this.state\r\n    const { total, content } = data\r\n    const columns = [\r\n      {\r\n        title: '序号',\r\n        key: 'index',\r\n        render: (text, record, index) => {\r\n          return index + 1\r\n        }\r\n      },\r\n      {\r\n        title: '项目名称',\r\n        dataIndex: 'projectName',\r\n        key: 'projectName'\r\n      },\r\n      {\r\n        title: '项目类型',\r\n        dataIndex: 'projectType',\r\n        key: 'projectType'\r\n      },\r\n      {\r\n        title: '公司名称',\r\n        dataIndex: 'company',\r\n        key: 'company'\r\n      },\r\n      {\r\n        title: '合同号',\r\n        dataIndex: 'contractNum',\r\n        key: 'contractNum'\r\n      },\r\n      {\r\n        title: '合同签订时间',\r\n        dataIndex: 'contractTime',\r\n        key: 'contractTime',\r\n        sorter: (a, b) => {\r\n          return a.id - b.id\r\n        }\r\n      },\r\n      {\r\n        title: '凭证时间',\r\n        dataIndex: 'credentialTime',\r\n        key: 'credentialTime',\r\n        sorter: (a, b) => {\r\n          return a.id - b.id\r\n        }\r\n      },\r\n      {\r\n        title: '创建时间',\r\n        dataIndex: 'createTime',\r\n        key: 'createTime',\r\n        render: (text, record, index) => {\r\n          return moment(record.createTime).format('YYYY-MM-DD HH:mm:ss')\r\n        },\r\n        sorter: (a, b) => {\r\n          return a.id - b.id\r\n        }\r\n      },\r\n      {\r\n        title: '操作',\r\n        key: 'operation',\r\n        render: (text, record, index) => {\r\n          return (\r\n            <UserContext.Consumer>\r\n              {userInfo => {\r\n                const DOCM_EDIT_OPER_permission = userInfo['permissions'].find(\r\n                  perm => perm.id === 'DOCM_EDIT_OPER'\r\n                )\r\n                const DOCM_DELETE_OPER_permission = userInfo[\r\n                  'permissions'\r\n                ].find(perm => perm.id === 'DOCM_DELETE_OPER')\r\n                const DOCM_DOWNLOAD_OPER_permission = userInfo[\r\n                  'permissions'\r\n                ].find(perm => perm.id === 'DOCM_DOWNLOAD_OPER')\r\n                return (\r\n                  <div>\r\n                    {DOCM_EDIT_OPER_permission && (\r\n                      <Icon\r\n                        style={{ fontSize: '17px', margin: '0 9px 0 0' }}\r\n                        title={'编辑'}\r\n                        type=\"edit\"\r\n                        onClick={() => {\r\n                          const { match } = this.props\r\n                          const path = match.path.replace(\r\n                            '/list',\r\n                            `/edit/${record.id}`\r\n                          )\r\n                          this.props.history.push(path)\r\n                        }}\r\n                      />\r\n                    )}\r\n                    {DOCM_DOWNLOAD_OPER_permission && (\r\n                      <Icon\r\n                        style={{ fontSize: '17px', margin: '0 9px 0 0' }}\r\n                        title={'下载'}\r\n                        type=\"download\"\r\n                        onClick={event => {\r\n                          const url = `${serverPath}/doc?id=${record.id}`\r\n                          const aElement = document.createElement('a')\r\n                          aElement.href = url\r\n                          aElement.target = '_blank'\r\n                          aElement.click()\r\n                          window.URL.revokeObjectURL(url)\r\n                        }}\r\n                      />\r\n                    )}\r\n                    <div id=\"downloadDiv\" style={{ display: 'none' }} />\r\n                    {DOCM_DELETE_OPER_permission && (\r\n                      <Icon\r\n                        style={{ fontSize: '17px', margin: '0 9px 0 0' }}\r\n                        title={'删除'}\r\n                        type=\"delete\"\r\n                        onClick={() => this.handleDeleteOper([record.id])}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                )\r\n              }}\r\n            </UserContext.Consumer>\r\n          )\r\n        }\r\n      }\r\n    ]\r\n    return (\r\n      <UserContext.Consumer>\r\n        {userInfo => {\r\n          const DOCM_LIST_VIEW_permission = userInfo['permissions'].find(\r\n            perm => perm.id === 'DOCM_LIST_VIEW'\r\n          )\r\n          const DOCM_ADD_OPER_permission = userInfo['permissions'].find(\r\n            perm => perm.id === 'DOCM_ADD_OPER'\r\n          )\r\n          const DOCM_DELETE_OPER_permission = userInfo['permissions'].find(\r\n            perm => perm.id === 'DOCM_DELETE_OPER'\r\n          )\r\n          return DOCM_LIST_VIEW_permission ? (\r\n            <Content>\r\n              <Breadcrumb style={{ margin: '8px' }}>\r\n                <Breadcrumb.Item>当前位置：</Breadcrumb.Item>\r\n                <Breadcrumb.Item>我的项目</Breadcrumb.Item>\r\n                <Breadcrumb.Item>查询</Breadcrumb.Item>\r\n              </Breadcrumb>\r\n              <div\r\n                style={{\r\n                  margin: '4px',\r\n                  display: 'flex',\r\n                  alignItems: 'center'\r\n                }}\r\n              >\r\n                <div style={{ margin: '4px', flex: 1 }}>\r\n                  <Select\r\n                    mode={'tags'}\r\n                    placeholder={'请输入关键字'}\r\n                    style={{ width: '280px' }}\r\n                    tokenSeparators={[' ']}\r\n                    showArrow={true}\r\n                    suffixIcon={\r\n                      <Icon style={{ fontSize: '16px' }} type=\"search\" />\r\n                    }\r\n                    onChange={this.handleSelectChange}\r\n                    notFoundContent={null}\r\n                  />\r\n                </div>\r\n                <div style={{ margin: '4px', flex: 1 }}>\r\n                  <span style={{ float: 'right' }}>\r\n                    {DOCM_ADD_OPER_permission && (\r\n                      <Button\r\n                        className=\"ele-operation\"\r\n                        type=\"primary\"\r\n                        onClick={() => {\r\n                          const { match } = this.props\r\n                          const path = match.path.replace('/list', '/edit')\r\n                          this.props.history.push(path)\r\n                        }}\r\n                      >\r\n                        新建\r\n                      </Button>\r\n                    )}\r\n                    {DOCM_DELETE_OPER_permission && (\r\n                      <Button\r\n                        type=\"ghost\"\r\n                        disabled={selectedRowKeys.length < 1}\r\n                        onClick={() => {\r\n                          this.handleDeleteOper(selectedRowKeys)\r\n                        }}\r\n                      >\r\n                        批量删除\r\n                      </Button>\r\n                    )}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div style={{ margin: '8px' }}>\r\n                {loading || data.content.length > 0 ? (\r\n                  <Table\r\n                    rowKey={record => {\r\n                      return record.id\r\n                    }}\r\n                    rowSelection={{\r\n                      selectedRowKeys,\r\n                      onChange: selectedRowKeys => {\r\n                        this.setState({ selectedRowKeys })\r\n                      }\r\n                    }}\r\n                    columns={columns}\r\n                    dataSource={content}\r\n                    loading={loading}\r\n                    onRow={(record, index) => {\r\n                      return {\r\n                        onClick: event => {\r\n                          if (event.target['tagName'] !== 'TD') {\r\n                            return\r\n                          }\r\n                          // TODO\r\n                          // message.info('查看' + record.id)\r\n                        }\r\n                      }\r\n                    }}\r\n                    size={'middle'}\r\n                    pagination={{\r\n                      total,\r\n                      current,\r\n                      pageSize,\r\n                      showSizeChanger: true,\r\n                      showTotal: total => {\r\n                        return `共${total}条`\r\n                      }\r\n                    }}\r\n                    onChange={(pagination, filters, sorter, extra) => {\r\n                      const { param } = this.state\r\n                      const { current, pageSize } = pagination\r\n                      const { field, order } = sorter\r\n                      param.sorters = {}\r\n                      if (field && order) {\r\n                        param.sorters[toLine(field)] = fetchOrderDirection(\r\n                          order\r\n                        )\r\n                      }\r\n                      this.setState({ current, pageSize })\r\n                      this.handleListChange()\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <Empty description={'暂无内容'} />\r\n                )}\r\n              </div>\r\n            </Content>\r\n          ) : (\r\n            <Result\r\n              style={{ width: '100%', height: '100%' }}\r\n              status=\"403\"\r\n              title=\"403\"\r\n              subTitle=\"没有访问权限\"\r\n            />\r\n          )\r\n        }}\r\n      </UserContext.Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nfunction fetchOrderDirection(order: string) {\r\n  if (order === 'descend') {\r\n    return 'desc'\r\n  } else {\r\n    return 'asc'\r\n  }\r\n}\r\n\r\nexport default withRouter(List)\r\n","import React from 'react'\r\nimport {\r\n  Layout,\r\n  Breadcrumb,\r\n  Button,\r\n  Form,\r\n  Input,\r\n  Icon,\r\n  message,\r\n  Upload,\r\n  DatePicker\r\n} from 'antd'\r\nimport { FormComponentProps } from 'antd/lib/form'\r\nimport { UploadFile } from 'antd/lib/upload/interface'\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport IDocmVO from '../type'\r\nimport Http, { serverPath } from '../../../../common/http'\r\n\r\nconst { Content } = Layout\r\nconst { MonthPicker } = DatePicker\r\n\r\ntype IProps = RouteComponentProps & {\r\n  username: string\r\n}\r\n\r\ninterface IState {\r\n  mode: 'edit' | 'add' | undefined\r\n  loading: boolean\r\n  data: IDocmVO | undefined\r\n  fileList: Array<UploadFile>\r\n}\r\n\r\nclass List extends React.Component<IProps, IState> {\r\n  form: React.ReactElement<FormProps> | undefined = undefined\r\n  constructor(props: IProps) {\r\n    super(props)\r\n    this.state = {\r\n      mode: undefined,\r\n      loading: true,\r\n      data: undefined,\r\n      fileList: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { match } = this.props\r\n    const id = match.params['id']\r\n    const mode = id ? 'edit' : 'add'\r\n    this.setState({ mode, loading: true }, () => {\r\n      if (mode === 'edit') {\r\n        message.info('编辑')\r\n        Http.get(`/docm?id=${id}`)\r\n          .then(res => {\r\n            const data = res.data.data\r\n            this.form &&\r\n              this.form.props.form.setFieldsValue({\r\n                ...data,\r\n                contractTime: data.contractTime\r\n                  ? moment(data.contractTime, 'YYYY-MM-DD')\r\n                  : undefined,\r\n                credentialTime: data.credentialTime\r\n                  ? moment(data.credentialTime, 'YYYY-MM')\r\n                  : undefined\r\n              })\r\n            const fileList = data.attachments.map(attachment => ({\r\n              uid: attachment.id,\r\n              size: 123,\r\n              name: attachment.docName,\r\n              type: 'image',\r\n              status: 'done',\r\n              response: {\r\n                status: '00000000',\r\n                data: [\r\n                  {\r\n                    docName: attachment.docName,\r\n                    docPath: attachment.docPath\r\n                  }\r\n                ]\r\n              }\r\n            }))\r\n            this.setState({ loading: false, fileList })\r\n          })\r\n          .catch(error => {})\r\n      } else if (mode === 'add') {\r\n        message.info('新建')\r\n        this.form && this.form.props.form.setFieldsValue({ attachments: [] })\r\n      }\r\n    })\r\n  }\r\n\r\n  handleCancel = e => {\r\n    e.preventDefault()\r\n    const { match } = this.props\r\n    const path = match.path.replace('/edit', '/list')\r\n    this.props.history.push(path)\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault()\r\n    this.form &&\r\n      this.form.props.form.validateFields(async (err, fielldValues) => {\r\n        if (!err) {\r\n          const values: IDocmVO = {\r\n            ...fielldValues,\r\n            contractTime: fielldValues['contractTime']\r\n              ? fielldValues['contractTime'].format('YYYY-MM-DD')\r\n              : undefined,\r\n            credentialTime: fielldValues['credentialTime']\r\n              ? fielldValues['credentialTime'].format('YYYY-MM')\r\n              : undefined\r\n          }\r\n          const { mode } = this.state\r\n          if (mode === 'add') {\r\n            await Http.put('/docm', values)\r\n          } else if (mode === 'edit') {\r\n            await Http.post('/docm', values)\r\n          }\r\n          const { match } = this.props\r\n          const path = match.path.replace('/edit', '/list')\r\n          this.props.history.push(path)\r\n        }\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { mode, fileList } = this.state\r\n    const setFieldsValue = this.form\r\n      ? this.form.props.form.setFieldsValue\r\n      : undefined\r\n    return (\r\n      <Content>\r\n        <Breadcrumb style={{ margin: '8px' }}>\r\n          <Breadcrumb.Item>当前位置：</Breadcrumb.Item>\r\n          <Breadcrumb.Item>我的项目</Breadcrumb.Item>\r\n          <Breadcrumb.Item>{mode === 'add' ? '新建' : '编辑'}</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <div\r\n          style={{\r\n            margin: '4px 4px 10px',\r\n            display: 'flex',\r\n            alignItems: 'center'\r\n          }}\r\n        >\r\n          <div style={{ order: 2, flexGrow: 1, padding: '0 8px 0 0' }}>\r\n            <span style={{ float: 'right' }}>\r\n              <Button block type={'default'} onClick={this.handleCancel}>\r\n                返回\r\n              </Button>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div style={{ margin: '8px' }}>\r\n          <WrappedNormalForm\r\n            wrappedComponentRef={(form: React.ReactElement<FormProps>) => {\r\n              this.form = form\r\n            }}\r\n          />\r\n          <Form labelCol={{ span: 8 }} wrapperCol={{ span: 8 }}>\r\n            <Form.Item key={'files'} label=\"上传附件\">\r\n              <Upload\r\n                style={{ width: '100%' }}\r\n                name=\"files\"\r\n                action={`${serverPath}/doc`}\r\n                listType={'picture'}\r\n                multiple={false}\r\n                fileList={fileList}\r\n                onChange={info => {\r\n                  const { fileList } = info\r\n                  const attachments = fileList\r\n                    .filter(file => {\r\n                      return file.status === 'done'\r\n                    })\r\n                    .map(file => {\r\n                      return {\r\n                        docName: file.response.data[0]['docName'],\r\n                        docPath: file.response.data[0]['docPath']\r\n                      }\r\n                    })\r\n                  setFieldsValue && setFieldsValue({ attachments })\r\n                  this.setState({ fileList })\r\n                }}\r\n              >\r\n                <Button block>\r\n                  <Icon type=\"upload\" /> 请选择\r\n                </Button>\r\n              </Upload>\r\n            </Form.Item>\r\n            <Form.Item key={'submit'} wrapperCol={{ span: 8, offset: 8 }}>\r\n              <Button block type={'primary'} onClick={this.handleSubmit}>\r\n                {mode === 'add' ? '提交' : '保存'}\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </Content>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(List)\r\n\r\ninterface FormProps extends FormComponentProps {}\r\n\r\ninterface FormState {\r\n  defaultFileList: Array<any>\r\n}\r\n\r\nclass NormalForm extends React.Component<FormProps, FormState> {\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form\r\n    return (\r\n      <Form labelCol={{ span: 8 }} wrapperCol={{ span: 8 }}>\r\n        {getFieldDecorator('id')(<Input hidden />)}\r\n        <Form.Item key={'projectName'} label=\"项目名称\">\r\n          {getFieldDecorator('projectName', {\r\n            rules: [{ required: true, message: '请输入项目名称' }]\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item key={'projectType'} label=\"项目类型\">\r\n          {getFieldDecorator('projectType', {\r\n            rules: [{ required: false, message: '请输入项目类型' }]\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item key={'company'} label=\"公司名称\">\r\n          {getFieldDecorator('company', {\r\n            rules: [{ required: false, message: '请输入公司名称' }]\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item key={'contractNum'} label=\"合同号\">\r\n          {getFieldDecorator('contractNum', {\r\n            rules: [{ required: false, message: '请输入合同号' }]\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item key={'contractTime'} label=\"合同签订时间\">\r\n          {getFieldDecorator('contractTime', {\r\n            rules: [{ required: false, message: '请输入合同签订时间' }]\r\n          })(<DatePicker format={'YYYY-MM-DD'} />)}\r\n        </Form.Item>\r\n        <Form.Item key={'credentialNum'} label=\"凭证号\">\r\n          {getFieldDecorator('credentialNum', {\r\n            rules: [{ required: false, message: '请输入凭证号' }]\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item key={'credentialTime'} label=\"凭证时间\">\r\n          {getFieldDecorator('credentialTime', {\r\n            rules: [{ required: false, message: '请输入凭证时间' }]\r\n          })(<MonthPicker format={'YYYY-MM'} />)}\r\n        </Form.Item>\r\n        <Form.Item key={'money'} label=\"金额\">\r\n          {getFieldDecorator('money', {\r\n            rules: [{ required: false, message: '请输入金额' }]\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        {getFieldDecorator('attachments')}\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nconst WrappedNormalForm = Form.create({\r\n  name: 'normal_login'\r\n})(NormalForm)\r\n","import React from 'react'\r\nimport {\r\n  Layout\r\n  // Menu, Icon\r\n} from 'antd'\r\nimport {\r\n  HashRouter,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n  withRouter,\r\n  RouteComponentProps\r\n} from 'react-router-dom'\r\nimport ListCmpt from './list'\r\nimport EditCmpt from './edit'\r\n// import ViewCmpt from './view'\r\n\r\nconst { Sider } = Layout\r\n\r\ntype IProps = RouteComponentProps & {}\r\n\r\ninterface IState {}\r\n\r\nclass Docm extends React.Component<IProps, IState> {\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Sider width={0} />\r\n        <Layout style={{ padding: '0 24px 24px' }}>\r\n          <div style={{ margin: '0px', background: 'rgb(255, 255, 255)' }}>\r\n            <HashRouter>\r\n              <Switch>\r\n                <Redirect\r\n                  path={'/main/docm'}\r\n                  exact={true}\r\n                  to={'/main/docm/list'}\r\n                />\r\n                <Route path={'/main/docm/list'} component={ListCmpt} />\r\n                <Route path={'/main/docm/edit/:id'} component={EditCmpt} />\r\n                <Route path={'/main/docm/edit'} component={EditCmpt} />\r\n                {/* <Route path={'/main/docm/view'} component={ViewCmpt} /> */}\r\n              </Switch>\r\n            </HashRouter>\r\n          </div>\r\n        </Layout>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Docm)\r\n","import React from 'react'\r\nimport './index.css'\r\nimport {\r\n  HashRouter,\r\n  Switch,\r\n  withRouter,\r\n  Redirect,\r\n  Route,\r\n  RouteComponentProps\r\n} from 'react-router-dom'\r\nimport UserModule from './user/index'\r\nimport DocmModule from './docm/index'\r\nimport headerMenu from '../menu'\r\nimport { UserContext } from '../index'\r\n\r\ntype IProps = RouteComponentProps & {}\r\n\r\ntype IState = {}\r\n\r\nclass Side extends React.Component<IProps, IState> {\r\n  render() {\r\n    return (\r\n      <UserContext.Consumer>\r\n        {userInfo => {\r\n          const menus = headerMenu.filter(m => {\r\n            if (userInfo['username']) {\r\n              if (userInfo['username'] === 'admin') {\r\n                return m.role.filter(role => role === 'admin').length > 0\r\n              } else {\r\n                return m.role.filter(role => role === 'normal').length > 0\r\n              }\r\n            }\r\n            return false\r\n          })\r\n          const routeMap = [\r\n            {\r\n              key: '/docm',\r\n              value: <Route path={'/main/docm'} component={DocmModule} />\r\n            },\r\n            {\r\n              key: '/user',\r\n              value: <Route path={'/main/user'} component={UserModule} />\r\n            }\r\n          ]\r\n          menus.length > 0 && console.log(menus[0].key)\r\n          return (\r\n            menus.length > 0 && (\r\n              <HashRouter>\r\n                <Switch>\r\n                  <Redirect\r\n                    path={'/main'}\r\n                    exact={true}\r\n                    to={`/main${menus[0].key}`}\r\n                  />\r\n                  {routeMap\r\n                    .filter(r => menus.filter(m => m.key === r.key).length > 0)\r\n                    .map(r => r.value)}\r\n                </Switch>\r\n              </HashRouter>\r\n            )\r\n          )\r\n        }}\r\n      </UserContext.Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Side)\r\n","import React, { Component } from 'react'\r\nimport { Layout } from 'antd'\r\nimport HomeHeader from './header/index'\r\nimport HomeSider from './sider/index'\r\nimport Http from '../common/http'\r\nimport './index.css'\r\n\r\ninterface IProps {}\r\n\r\ninterface IState {}\r\n\r\nexport const UserContext = React.createContext({})\r\n\r\nclass Home extends Component<IProps, IState> {\r\n  state = {\r\n    collapsed: false,\r\n    userInfo: {}\r\n  }\r\n\r\n  componentDidMount() {\r\n    Http.get(`/user?id=${sessionStorage.getItem('userId')}`)\r\n      .then(res => {\r\n        const userInfo = { ...res.data.data }\r\n        this.setState({ userInfo })\r\n      })\r\n      .catch(err => {})\r\n  }\r\n\r\n  toggleCollapsed = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { userInfo } = this.state\r\n    return (\r\n      <UserContext.Provider value={userInfo}>\r\n        <Layout className=\"ant-layout-home\">\r\n          <HomeHeader />\r\n          <HomeSider />\r\n        </Layout>\r\n      </UserContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { Form, Icon, Input, Button, message } from 'antd'\r\nimport { FormComponentProps } from 'antd/lib/form'\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\r\nimport Http from '../common/http/index'\r\nimport md5 from 'js-md5'\r\nimport img from '../assert/img/aaa.jpg'\r\nimport './index.css'\r\n\r\ntype IProps = RouteComponentProps & {}\r\n\r\ninterface IState {}\r\n\r\nclass Login extends React.Component<IProps, IState> {\r\n  form: React.ReactElement<FormProps> | undefined\r\n\r\n  handleSubmit = (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n    this.form &&\r\n      this.form.props.form.validateFields(async (err, values) => {\r\n        if (!err) {\r\n          const password = md5(values.password)\r\n          await Http.post('/login', { ...values, password })\r\n            .then(res => {\r\n              if (res.data.status === '00000000') {\r\n                sessionStorage.setItem('userId', res.data.data.id)\r\n                setTimeout(() => {\r\n                  this.props.history.push('/main')\r\n                }, 300)\r\n              } else {\r\n                this.form &&\r\n                  this.form.props.form.setFields({\r\n                    password: {\r\n                      value: values.password,\r\n                      errors: [new Error(res.data.message)]\r\n                    }\r\n                  })\r\n              }\r\n            })\r\n            .catch(err => {\r\n              message.error('服务器异常')\r\n            })\r\n        }\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        id=\"hehe\"\r\n        style={{\r\n          width: '100%',\r\n          height: '100%',\r\n          // paddingBottom: '48%',\r\n          overflow: 'hidden',\r\n          backgroundPosition: '50%',\r\n          backgroundRepeat: 'no - repeat',\r\n          backgroundSize: 'cover',\r\n          backgroundImage: `url(${img})`\r\n        }}\r\n      >\r\n        <div className=\"login-form\">\r\n          <WrappedNormalLoginForm\r\n            wrappedComponentRef={(form: React.ReactElement<FormProps>) => {\r\n              this.form = form\r\n            }}\r\n          />\r\n          <Button\r\n            className=\"login-form-button\"\r\n            type=\"primary\"\r\n            onClick={this.handleSubmit}\r\n          >\r\n            登录\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Login)\r\n\r\ninterface FormProps extends FormComponentProps {\r\n  username: string\r\n  password: string\r\n  onSubmit?: () => void\r\n}\r\n\r\nclass NormalLoginForm extends React.Component<FormProps, any> {\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form\r\n    return (\r\n      <Form>\r\n        <Form.Item>\r\n          {getFieldDecorator('username', {\r\n            rules: [{ required: true, message: '请输入用户名' }]\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              placeholder=\"Username\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('password', {\r\n            rules: [{ required: true, message: '请输入密码' }]\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create({\r\n  name: 'normal_login'\r\n})(NormalLoginForm)\r\n","import React, { PureComponent } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom'\r\nimport PrivateRoute from './common/route'\r\nimport Home from './home/index'\r\nimport Login from './login/index'\r\nimport './index.css'\r\n\r\ninterface IProps {}\r\n\r\ninterface IState {}\r\n\r\nclass App extends PureComponent<IProps, IState> {\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <Switch>\r\n          <Redirect path={'/'} exact={true} to={'/main'} />\r\n          <Route path={'/login'} component={Login} />\r\n          <PrivateRoute path={'/main'} component={Home} />\r\n        </Switch>\r\n      </HashRouter>\r\n    )\r\n  }\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}