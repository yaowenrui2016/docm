{"version":3,"sources":["assert/img/login_3.jpg","assert/svg/Logo.svg","home/menu.ts","home/header/index.tsx","common/http/index.ts","home/sider/user/manage/add/index.tsx","home/sider/user/manage/edit/index.tsx","common/util/index.ts","common/simplelist/index.tsx","home/sider/user/manage/list/index.tsx","home/sider/user/manage/view/index.tsx","home/sider/user/manage/index.tsx","home/sider/user/authority/index.tsx","home/sider/user/index.tsx","common/route/index.tsx","home/sider/docm/list/index.tsx","home/sider/docm/edit/index.tsx","home/sider/docm/view/index.tsx","home/sider/docm/index.tsx","home/sider/account/info/index.tsx","home/sider/account/mod-pwd/index.tsx","home/sider/account/index.tsx","common/selector/user/index.tsx","home/sider/operlog/list/index.tsx","home/sider/operlog/view/index.tsx","home/sider/operlog/index.tsx","home/sider/index.tsx","home/index.tsx","login/index.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","menu","key","title","role","Header","HomeHeader","fetchDefaultSelectedKey","menus","pathname","_this","props","location","menuPaths","map","m","selectedKeys","filter","path","indexOf","length","_this2","this","react_default","a","createElement","es_menu","Item","es_button","onClick","history","push","sessionStorage","removeItem","setTimeout","UserContext","Consumer","userInfo","headerMenu","className","theme","mode","style","lineHeight","onSelect","param","_this2$props","match","selectable","dropdown","overlay","placement","icon","fontSize","color","type","margin","Component","withRouter","serverPath","http","axios","create","baseURL","withCredentials","timeout","interceptors","request","use","config","xAuthToken","getItem","headers","error","console","response","setItem","status","message","createHashHistory","Content","Option","Add","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","form","undefined","handleCancel","e","preventDefault","concat","manageSiderPath","handleSubmit","validateFields","err","values","params","objectSpread","password","md5","dept","id","Http","put","then","res","data","catch","handlePermOnChange","permissions","setFieldsValue","perm","setState","handleDeptOnChange","state","treeData","deptData","get","v","index","group","value","children","name","post","_this3","_this$state","display","alignItems","order","flexGrow","padding","float","block","WrappedNormalForm","wrappedComponentRef","es_form","formItemLayout","label","es_select","width","placeholder","showSearch","allowClear","optionFilterProp","filterOption","input","option","toLowerCase","onChange","tree_select","searchPlaceholder","multiple","treeCheckable","tailFormItemLayout","React","labelCol","xs","span","sm","wrapperCol","offset","NormalForm","getFieldDecorator","hidden","rules","required","pattern","validator","_validator","asyncToGenerator","regenerator_default","mark","_callee","rule","callback","source","options","wrap","_context","prev","next","cku","stop","_x","_x2","_x3","_x4","_x5","apply","arguments","validateTrigger","max","Edit","loading","edit_Content","edit_WrappedNormalForm","edit_Option","_this$props$form","getFieldValue","toLine","replace","List","handleListChange","httpPath","pageSize","current","queryRequest","handleSelectChange","conditions","handleDeleteOper","_ref","ids","modal","confirm","okText","cancelText","onOk","queryString","forEach","delete","substring","success","handleOk","modalFlag","method","msg","modalData","selectedRowKeys","total","content","sorters","modelName","tokenSeparators","showArrow","suffixIcon","notFoundContent","event","disabled","render","text","record","onHeaderCell","column","textAlign","onCell","rowIndex","dataIndex","moment","createTime","format","sorter","b","_this4","_this$state2","table","rowKey","rowSelection","columnWidth","columns","buildColumns","dataSource","pagination","pageSizeOptions","showSizeChanger","showTotal","filters","extra","field","fetchOrderDirection","empty","description","_this5","_this$state3","visible","onCancel","simplelist_WrappedNormalForm","resetFields","simplelist_Content","renderSearchBar","renderButtonBar","renderTable","renderAddModal","TabPane","loadDeptData","handleSelectChangeForKeyword","handleSelectChangeForDept","marginRight","list_Option","overflow","textOverflow","whiteSpace","cursor","tooltip","frozen","operation","onRow","target","list_Content","tabs","defaultActiveKey","tab","simplelist","renderKeywordSearchBar","renderDeptSearchBar","TreeNode","View","username","phone","email","tree","showLine","defaultExpandAll","spin","size","view_Content","flex","renderContent","Manage","curItem","breadcrumb","react_router_dom","react_router","exact","to","component","ListCmpt","AddCmpt","EditCmpt","ViewCmpt","Authority","modulePath","Sider","UserSider","collapsed","handleOnSelect","toggleCollapsed","layout","collapsedWidth","PrivateRoute","objectWithoutProperties","needPerms","userPerms","find","userPerm","Array","needPerm","assign","result","height","subTitle","from","loadProjectTypes","projectTypes","handleSelectChangeForProjectType","_callee2","_context2","_onOk","pType","docm_list_Option","DOCM_ADD_OPER_permission","DOCM_DELETE_OPER_permission","DOCM_EDIT_OPER_permission","DOCM_DOWNLOAD_OPER_permission","href","onShowSizeChange","docm_list_Content","renderProjectTypeSearchBar","MonthPicker","Dragger","contractTime","credentialTime","info","selectedDept","handleChangeForFileDrag","file","fileList","setFormDataForFileDrag","attachments","docName","docPath","docm_edit_Option","action","upload","attachment","uid","docm_edit_Content","docm_edit_WrappedNormalForm","date_picker","projectName","projectType","company","contractNum","credentialNum","money","showUploadList","showPreviewIcon","showRemoveIcon","docm_view_Content","Docm","docm_Sider","route","permission","Info","separator","info_Content","ModPwd","fielldValues","oldPassword","mod_pwd_WrappedNormalForm","mod_pwd_Content","menusKey","AccountSider","account_Sider","UserSelector","fetchUser","keywordUsername","account","handleChange","debounce","ranges","onSearch","d","user_Option","Panel","loadOperNames","operNames","handleSelectChangeForOperator","handleSelectChangeForOperName","handleCreateTimeRangeChange","createTimeRange","start","add","end","rangeOptionValue","modules","activeKey","es_radio","Group","Button","selector_user","operName","operlog_list_Option","collapse","bordered","border","header","renderPanel","colPropsfor10","operlog_list_Content","viewItemLayout","row","col","operator","ip","userAgent","url","operlog_view_Content","Operlog","operlog_Sider","Side","routeMap","DocmModule","UserModule","AccountModule","OperlogModule","r","createContext","Home","Provider","home_header","home_sider","Login","setFields","errors","Error","src","img","alt","Logo","WrappedNormalLoginForm","NormalLoginForm","prefix","App","locale_provider","locale","zhCN","PureComponent","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f1d09afd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login_3.c155b94e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Logo.b29324c4.svg\";","\r\nconst menu = [\r\n  {\r\n    key: '/docm',\r\n    title: '项目合同',\r\n    role: ['normal']\r\n  },\r\n  {\r\n    key: '/user',\r\n    title: '账号管理',\r\n    role: ['admin']\r\n  },\r\n  {\r\n    key: '/operlog',\r\n    title: '日志审计',\r\n    role: ['admin']\r\n  },\r\n  {\r\n    key: '/account',\r\n    title: '我的账号',\r\n    role: ['normal', 'admin']\r\n  },\r\n]\r\n\r\nexport default menu","import React, { Component } from 'react'\r\nimport './index.css'\r\nimport { Layout, Menu, Dropdown, Button, Icon } from 'antd'\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\r\nimport headerMenu from '../menu'\r\nimport { UserContext } from '../index'\r\n\r\nconst { Header } = Layout\r\n\r\ninterface IProps extends RouteComponentProps {}\r\n\r\ninterface IState {}\r\n\r\nclass HomeHeader extends Component<IProps, IState> {\r\n  fetchDefaultSelectedKey = menus => {\r\n    const { pathname } = this.props.location\r\n    const menuPaths = menus.map(m => m.key)\r\n    const selectedKeys = menuPaths.filter(path => {\r\n      return pathname.indexOf(path) >= 0\r\n    })\r\n    if (selectedKeys.length < 1) {\r\n      return [menuPaths[0]]\r\n    }\r\n    return selectedKeys\r\n  }\r\n\r\n  render() {\r\n    const menu = (\r\n      <Menu>\r\n        <Menu.Item>\r\n          <Button\r\n            onClick={() => {\r\n              this.props.history.push('/main/account/mod-pwd')\r\n            }}\r\n          >\r\n            {'修改密码'}\r\n          </Button>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <Button\r\n            onClick={() => {\r\n              sessionStorage.removeItem('userId')\r\n              setTimeout(() => {\r\n                this.props.history.push('/login')\r\n              }, 300)\r\n            }}\r\n          >\r\n            {'退出'}\r\n          </Button>\r\n        </Menu.Item>\r\n      </Menu>\r\n    )\r\n    return (\r\n      <UserContext.Consumer>\r\n        {userInfo => {\r\n          const menus = headerMenu.filter(m => {\r\n            if (userInfo['username'] === 'admin') {\r\n              return m.role.filter(role => role === 'admin').length > 0\r\n            } else {\r\n              return m.role.filter(role => role === 'normal').length > 0\r\n            }\r\n          })\r\n          const selectedKeys = this.fetchDefaultSelectedKey(menus)\r\n          return (\r\n            <div>\r\n              <Header className=\"header\">\r\n                {/* <span key=\"logo\" className=\"logo\">\r\n                  LOGO\r\n                </span> */}\r\n                <Menu\r\n                  className=\"navbar\"\r\n                  theme=\"dark\"\r\n                  mode=\"horizontal\"\r\n                  selectedKeys={selectedKeys}\r\n                  style={{ lineHeight: '50px' }}\r\n                  onSelect={param => {\r\n                    const { history, match } = this.props\r\n                    history.push(match.path + param.key)\r\n                  }}\r\n                >\r\n                  {menus.map(m => {\r\n                    return (\r\n                      <Menu.Item className=\"navbar-item\" key={m.key}>\r\n                        {m.title}\r\n                      </Menu.Item>\r\n                    )\r\n                  })}\r\n                </Menu>\r\n                <Menu\r\n                  className=\"userbar\"\r\n                  theme=\"dark\"\r\n                  mode=\"horizontal\"\r\n                  style={{ lineHeight: '50px' }}\r\n                  selectable={false}\r\n                >\r\n                  <Menu.Item key=\"user\">\r\n                    <Dropdown overlay={menu} placement=\"bottomRight\">\r\n                      <span>\r\n                        <Icon\r\n                          style={{ fontSize: '18px', color: '#fff' }}\r\n                          type=\"user\"\r\n                        />\r\n                        <span\r\n                          style={{\r\n                            fontSize: '18px',\r\n                            color: '#fff',\r\n                            margin: '0 8px 0 0'\r\n                          }}\r\n                        >\r\n                          {userInfo['username']}\r\n                        </span>\r\n                        <Icon style={{ color: '#fff' }} type=\"caret-down\" />\r\n                      </span>\r\n                    </Dropdown>\r\n                  </Menu.Item>\r\n                </Menu>\r\n              </Header>\r\n            </div>\r\n          )\r\n        }}\r\n      </UserContext.Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(HomeHeader)\r\n","import axios from 'axios'\r\nimport { createHashHistory } from 'history'\r\nimport { message } from 'antd'\r\n\r\nexport interface QueryRequest {\r\n  pageSize: number | undefined\r\n  current: number | undefined\r\n  conditions?: any\r\n  sorters?: any\r\n}\r\n\r\nexport interface QueryResult<T> {\r\n  total: number | undefined\r\n  content: Array<T>\r\n}\r\n\r\nexport const serverPath = \"http://aby.docm.com:8090\"\r\n\r\nconst http = axios.create({\r\n  baseURL: serverPath,\r\n  withCredentials: false,\r\n  timeout: 60000\r\n});\r\n\r\nhttp.interceptors.request.use(config => {\r\n  const xAuthToken = sessionStorage.getItem('xAuthToken');\r\n  if (xAuthToken) {\r\n    config.headers['x-auth-token'] = xAuthToken\r\n  }\r\n  return config\r\n}, error => {\r\n  console.error('请求异常')\r\n})\r\n\r\nhttp.interceptors.response.use(response => {\r\n  const xAuthToken = response.headers['x-auth-token']\r\n  if (xAuthToken) {\r\n    sessionStorage.setItem('xAuthToken', xAuthToken)\r\n  }\r\n  return response\r\n}, error => {\r\n  if (error.response.status === 401) {\r\n    sessionStorage.removeItem('userId')\r\n    message.error('登录超时，请重新登录', 3)\r\n    setTimeout(() => {\r\n      createHashHistory().push(\"/login\")\r\n    }, 500)\r\n  }\r\n  if (error.response.status === 403) {\r\n    message.error('您没有访问权限', 3)\r\n  }\r\n})\r\n\r\nexport default http","import React from 'react'\r\nimport { Layout, Button, Form, Input, message, Select, TreeSelect } from 'antd'\r\nimport { FormComponentProps } from 'antd/lib/form'\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\r\nimport IAccountVO from '../type'\r\nimport Http from '../../../../../common/http'\r\nimport md5 from 'js-md5'\r\nimport { manageSiderPath } from '../../index'\r\n\r\nconst { Content } = Layout\r\nconst { Option } = Select\r\n\r\ntype IProps = RouteComponentProps & {}\r\n\r\ninterface IState {\r\n  treeData: Array<any>\r\n  permissions: Array<any>\r\n  deptData: Array<any>\r\n}\r\n\r\nclass Add extends React.Component<IProps, IState> {\r\n  form: React.ReactElement<FormProps> | undefined = undefined\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      treeData: [],\r\n      permissions: [],\r\n      deptData: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    Http.get(`/perm/all`)\r\n      .then(res => {\r\n        const treeData = res.data.data.map((v, index) => {\r\n          return {\r\n            key: index,\r\n            title: v.group,\r\n            value: undefined,\r\n            children: v.permissions.map(perm => {\r\n              return {\r\n                key: perm.id,\r\n                title: perm.name,\r\n                value: perm.id\r\n              }\r\n            })\r\n          }\r\n        })\r\n        this.setState({ treeData })\r\n      })\r\n      .catch(err => {})\r\n    Http.post(`/dept/list-all`)\r\n      .then(res => {\r\n        this.setState({ deptData: res.data.data })\r\n      })\r\n      .catch(err => {})\r\n  }\r\n\r\n  handleCancel = e => {\r\n    e.preventDefault()\r\n    this.props.history.push(`${manageSiderPath}/list`)\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault()\r\n    this.form &&\r\n      this.form.props.form.validateFields((err, values) => {\r\n        if (!err) {\r\n          const params: IAccountVO = {\r\n            ...values,\r\n            password: md5(values.password ? values.password : '1234'),\r\n            dept: {\r\n              id: values.dept\r\n            }\r\n          }\r\n          Http.put('/user', params)\r\n            .then(res => {\r\n              if (res.data.status === '00000000') {\r\n                this.props.history.push(`${manageSiderPath}/list`)\r\n              } else {\r\n                message.error(res.data.message)\r\n              }\r\n            })\r\n            .catch(err => {\r\n              message.error(err.response.data.message)\r\n            })\r\n        }\r\n      })\r\n  }\r\n\r\n  handlePermOnChange = permissions => {\r\n    this.form &&\r\n      this.form.props.form.setFieldsValue({\r\n        permissions: permissions.map(perm => ({ id: perm }))\r\n      })\r\n    this.setState({ permissions })\r\n  }\r\n\r\n  handleDeptOnChange = dept => {\r\n    this.form &&\r\n      this.form.props.form.setFieldsValue({\r\n        dept\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { treeData, permissions, deptData } = this.state\r\n    return (\r\n      <Content>\r\n        <div\r\n          style={{\r\n            margin: '4px 4px 10px',\r\n            display: 'flex',\r\n            alignItems: 'center'\r\n          }}\r\n        >\r\n          <div style={{ order: 2, flexGrow: 1, padding: '0 8px 0 0' }}>\r\n            <span style={{ float: 'right' }}>\r\n              <Button block type={'default'} onClick={this.handleCancel}>\r\n                返回\r\n              </Button>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div style={{ margin: '8px' }}>\r\n          <WrappedNormalForm\r\n            wrappedComponentRef={(form: React.ReactElement<FormProps>) => {\r\n              this.form = form\r\n            }}\r\n          />\r\n          <Form {...formItemLayout}>\r\n            <Form.Item key={'dept'} label=\"所属科室\">\r\n              <Select\r\n                style={{ width: '100%' }}\r\n                placeholder={'请选择'}\r\n                showSearch\r\n                allowClear\r\n                optionFilterProp=\"children\"\r\n                filterOption={(input, option: any) =>\r\n                  option.props.children\r\n                    .toLowerCase()\r\n                    .indexOf(input.toLowerCase()) >= 0\r\n                }\r\n                onChange={this.handleDeptOnChange}\r\n              >\r\n                {deptData.map(dept => (\r\n                  <Option key={dept.id} value={dept.id}>{dept.name}</Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item key={'permissions'} label=\"账号授权\">\r\n              <TreeSelect\r\n                style={{ width: '100%' }}\r\n                searchPlaceholder={'请选择'}\r\n                multiple={true}\r\n                showSearch={false}\r\n                treeData={treeData}\r\n                value={permissions}\r\n                treeCheckable={true}\r\n                onChange={this.handlePermOnChange}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item {...tailFormItemLayout}>\r\n              <Button block type={'primary'} onClick={this.handleSubmit}>\r\n                {'提交'}\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </Content>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Add)\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 20 },\r\n    sm: { span: 4 }\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 20 },\r\n    sm: { span: 16 }\r\n  }\r\n}\r\n\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 2,\r\n      offset: 0\r\n    },\r\n    sm: {\r\n      span: 2,\r\n      offset: 4\r\n    }\r\n  }\r\n}\r\n\r\ninterface FormProps extends FormComponentProps {}\r\n\r\ninterface FormState {\r\n  defaultFileList: Array<any>\r\n}\r\n\r\nclass NormalForm extends React.Component<FormProps, FormState> {\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form\r\n    return (\r\n      <Form {...formItemLayout}>\r\n        {getFieldDecorator('id')(<Input hidden />)}\r\n        <Form.Item key={'username'} label=\"用户名\">\r\n          {getFieldDecorator('username', {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                type: 'string',\r\n                pattern: /^[a-zA-Z][a-zA-Z0-9_]{2,11}$/,\r\n                message: '用户名为3~12位字母、数字或下划线,第一位必须为字母'\r\n              },\r\n              {\r\n                message: '用户名已存在',\r\n                validator: async (rule, value, callback, source, options) => {\r\n                  await Http.get(\r\n                    `/user/check-unique-username?username=${value}`\r\n                  )\r\n                    .then(res => {\r\n                      if (res.data.status === '00000000') {\r\n                        const cku = res.data.data === true ? true : undefined\r\n                        callback(cku)\r\n                      } else {\r\n                        message.error(res.data.message)\r\n                        callback()\r\n                      }\r\n                    })\r\n                    .catch(err => {\r\n                      message.error('服务器异常')\r\n                      callback()\r\n                    })\r\n                }\r\n              }\r\n            ],\r\n            validateTrigger: 'onBlur'\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item key={'password'} label=\"密码\">\r\n          {getFieldDecorator('password', {\r\n            rules: [\r\n              {\r\n                required: false,\r\n                message: '密码为4~16位任意字符',\r\n                pattern: /^.{4,16}$/\r\n              }\r\n            ],\r\n            validateTrigger: 'onBlur'\r\n          })(<Input type={'password'} placeholder={'默认密码为1234'} />)}\r\n        </Form.Item>\r\n        <Form.Item key={'phone'} label=\"手机\">\r\n          {getFieldDecorator('phone', {\r\n            rules: [\r\n              {\r\n                required: false,\r\n                message: '请输入正确的手机号',\r\n                max: 11\r\n              }\r\n            ],\r\n            validateTrigger: 'onBlur'\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item key={'email'} label=\"邮箱\">\r\n          {getFieldDecorator('email', {\r\n            rules: [\r\n              {\r\n                required: false,\r\n                message: '请输入正确的邮箱',\r\n                type: 'email'\r\n              }\r\n            ],\r\n            validateTrigger: 'onBlur'\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        {/** 所属科室 */}\r\n        {getFieldDecorator('dept')}\r\n        {/** 账号授权 */}\r\n        {getFieldDecorator('permissions')}\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nconst WrappedNormalForm = Form.create({\r\n  name: 'normal_login'\r\n})(NormalForm)\r\n","import React from 'react'\r\nimport { Layout, Button, Form, Input, message, Select, TreeSelect } from 'antd'\r\nimport { FormComponentProps } from 'antd/lib/form'\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\r\nimport IAccountVO from '../type'\r\nimport Http from '../../../../../common/http'\r\nimport { manageSiderPath } from '../../index'\r\n\r\nconst { Content } = Layout\r\nconst { Option } = Select\r\n\r\ntype IProps = RouteComponentProps & {}\r\n\r\ninterface IState {\r\n  loading: boolean\r\n  /**\r\n   * 用户id\r\n   */\r\n  id: string\r\n  /**\r\n   * 权限选择器备选数据\r\n   */\r\n  treeData: Array<any>\r\n  /**\r\n   * 用户拥有权限的id，赋值给权限选择器，显示用\r\n   */\r\n  permissions: Array<any>\r\n  /**\r\n   * 科室选择器备选数据\r\n   */\r\n  deptData: Array<any>\r\n  /**\r\n   * 用户所属科室的id，赋值给科室选择器，显示用\r\n   */\r\n  dept: string\r\n}\r\n\r\nclass Edit extends React.Component<IProps, IState> {\r\n  form: React.ReactElement<FormProps> | undefined = undefined\r\n  constructor(props: IProps) {\r\n    super(props)\r\n    this.state = {\r\n      id: this.props.match.params['id'],\r\n      loading: true,\r\n      treeData: [],\r\n      permissions: [],\r\n      deptData: [],\r\n      dept: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.state\r\n    this.setState({ loading: true }, () => {\r\n      Http.get(`/user?id=${id}`)\r\n        .then(res => {\r\n          const data = res.data.data\r\n          const dept = data.dept ? data.dept.id : undefined\r\n          this.form &&\r\n            this.form.props.form.setFieldsValue({\r\n              ...data,\r\n              dept\r\n            })\r\n          const permissions = data.permissions.map(perm => perm.id)\r\n          this.setState({ loading: false, permissions, dept })\r\n        })\r\n        .catch(error => {\r\n          this.setState({ loading: false })\r\n        })\r\n      Http.get(`/perm/all`)\r\n        .then(res => {\r\n          const treeData = res.data.data.map((v, index) => {\r\n            return {\r\n              key: index,\r\n              title: v.group,\r\n              value: undefined,\r\n              children: v.permissions.map(perm => {\r\n                return {\r\n                  key: perm.id,\r\n                  title: perm.name,\r\n                  value: perm.id\r\n                }\r\n              })\r\n            }\r\n          })\r\n          this.setState({ treeData })\r\n        })\r\n        .catch(err => {})\r\n\r\n      Http.post(`/dept/list-all`)\r\n        .then(res => {\r\n          this.setState({ deptData: res.data.data })\r\n        })\r\n        .catch(err => {})\r\n    })\r\n  }\r\n\r\n  handleCancel = e => {\r\n    e.preventDefault()\r\n    this.props.history.push(`${manageSiderPath}/list`)\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault()\r\n    this.form &&\r\n      this.form.props.form.validateFields((err, values) => {\r\n        if (!err) {\r\n          const params: IAccountVO = {\r\n            ...values,\r\n            dept: {\r\n              id: values.dept\r\n            }\r\n          }\r\n          Http.post('/user', params)\r\n            .then(res => {\r\n              if (res.data.status === '00000000') {\r\n                this.props.history.push(`${manageSiderPath}/list`)\r\n              } else {\r\n                message.error(res.data.message)\r\n              }\r\n            })\r\n            .catch(err => {\r\n              message.error(err.response.data.message)\r\n            })\r\n        }\r\n      })\r\n  }\r\n\r\n  handlePermOnChange = permissions => {\r\n    this.form &&\r\n      this.form.props.form.setFieldsValue({\r\n        permissions: permissions.map(perm => ({ id: perm }))\r\n      })\r\n    this.setState({ permissions })\r\n  }\r\n\r\n  handleDeptOnChange = dept => {\r\n    this.form &&\r\n      this.form.props.form.setFieldsValue({\r\n        dept\r\n      })\r\n    this.setState({ dept })\r\n  }\r\n\r\n  render() {\r\n    const { loading, treeData, permissions, deptData, dept } = this.state\r\n    return (\r\n      <Content>\r\n        <div\r\n          style={{\r\n            margin: '4px 4px 10px',\r\n            display: 'flex',\r\n            alignItems: 'center'\r\n          }}\r\n        >\r\n          <div style={{ order: 2, flexGrow: 1, padding: '0 8px 0 0' }}>\r\n            <span style={{ float: 'right' }}>\r\n              <Button block type={'default'} onClick={this.handleCancel}>\r\n                返回\r\n              </Button>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div style={{ margin: '8px' }}>\r\n          <WrappedNormalForm\r\n            wrappedComponentRef={(form: React.ReactElement<FormProps>) => {\r\n              this.form = form\r\n            }}\r\n          />\r\n          <Form {...formItemLayout}>\r\n            <Form.Item key={'dept'} label=\"所属科室\">\r\n              <Select\r\n                style={{ width: '100%' }}\r\n                placeholder={'请选择'}\r\n                value={dept}\r\n                showSearch\r\n                allowClear\r\n                optionFilterProp=\"children\"\r\n                filterOption={(input, option: any) =>\r\n                  option.props.children\r\n                    .toLowerCase()\r\n                    .indexOf(input.toLowerCase()) >= 0\r\n                }\r\n                onChange={this.handleDeptOnChange}\r\n              >\r\n                {deptData.map(dept => (\r\n                  <Option key={dept.id} value={dept.id}>{dept.name}</Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item key={'permissions'} label=\"账号授权\">\r\n              <TreeSelect\r\n                style={{ width: '100%' }}\r\n                searchPlaceholder={'请选择'}\r\n                multiple={true}\r\n                treeData={treeData}\r\n                value={permissions}\r\n                treeCheckable={true}\r\n                onChange={this.handlePermOnChange}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item {...tailFormItemLayout}>\r\n              <Button\r\n                block\r\n                type={'primary'}\r\n                loading={loading}\r\n                onClick={this.handleSubmit}\r\n              >\r\n                {'保存'}\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </Content>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Edit)\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 20 },\r\n    sm: { span: 4 }\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 20 },\r\n    sm: { span: 16 }\r\n  }\r\n}\r\n\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 2,\r\n      offset: 0\r\n    },\r\n    sm: {\r\n      span: 2,\r\n      offset: 4\r\n    }\r\n  }\r\n}\r\n\r\ninterface FormProps extends FormComponentProps {}\r\n\r\ninterface FormState {\r\n  defaultFileList: Array<any>\r\n}\r\n\r\nclass NormalForm extends React.Component<FormProps, FormState> {\r\n  render() {\r\n    const { getFieldDecorator, getFieldValue } = this.props.form\r\n    return (\r\n      <Form {...formItemLayout}>\r\n        {getFieldDecorator('id')(<Input hidden />)}\r\n        <Form.Item key={'username'} label=\"用户名\">\r\n          {getFieldDecorator('username', {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                type: 'string',\r\n                pattern: /^[a-zA-Z][a-zA-Z0-9_]{2,11}$/,\r\n                message: '用户名为3~12位字母、数字或下划线,第一位必须为字母'\r\n              },\r\n              {\r\n                message: '用户名已存在',\r\n                validator: async (rule, value, callback, source, options) => {\r\n                  const id = getFieldValue('id')\r\n                  await Http.get(\r\n                    `/user/check-unique-username?username=${value}&id=${id}`\r\n                  )\r\n                    .then(res => {\r\n                      if (res.data.status === '00000000') {\r\n                        const cku = res.data.data === true ? true : undefined\r\n                        callback(cku)\r\n                      } else {\r\n                        message.error(res.data.message)\r\n                        callback()\r\n                      }\r\n                    })\r\n                    .catch(err => {\r\n                      message.error('服务器异常')\r\n                      callback()\r\n                    })\r\n                }\r\n              }\r\n            ],\r\n            validateTrigger: 'onBlur'\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item key={'phone'} label=\"手机\">\r\n          {getFieldDecorator('phone', {\r\n            rules: [\r\n              {\r\n                required: false,\r\n                message: '请输入正确的手机号',\r\n                max: 11\r\n              }\r\n            ],\r\n            validateTrigger: 'onBlur'\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item key={'email'} label=\"邮箱\">\r\n          {getFieldDecorator('email', {\r\n            rules: [\r\n              {\r\n                required: false,\r\n                message: '请输入正确的邮箱',\r\n                type: 'email'\r\n              }\r\n            ],\r\n            validateTrigger: 'onBlur'\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        {/** 所属科室 */}\r\n        {getFieldDecorator('dept')}\r\n        {/** 角色授权 */}\r\n        {getFieldDecorator('permissions')}\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nconst WrappedNormalForm = Form.create({\r\n  name: 'normal_login'\r\n})(NormalForm)\r\n","/** 下划线转换驼峰 */\r\nexport function toHump(name: string) {\r\n  return name.replace(/_(\\w)/g, function (all, letter) {\r\n    return letter.toUpperCase();\r\n  });\r\n}\r\n\r\n/** 驼峰转换下划线 */\r\nexport function toLine(name: string) {\r\n  return name.replace(/([A-Z])/g, \"_$1\").toLowerCase();\r\n} ","import React from 'react'\r\nimport {\r\n  Layout,\r\n  Select,\r\n  Button,\r\n  Table,\r\n  Empty,\r\n  message,\r\n  Icon,\r\n  Modal,\r\n  Input,\r\n  Form\r\n} from 'antd'\r\nimport { FormComponentProps } from 'antd/lib/form'\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport Http, { QueryResult, QueryRequest } from '../http'\r\nimport BaseVO from '../types'\r\nimport { toLine } from '../util'\r\n\r\nconst { Content } = Layout\r\n\r\ntype IProps = RouteComponentProps & {\r\n  /**\r\n   * 数据请求的路径\r\n   */\r\n  httpPath: string\r\n  /**\r\n   * 模型名称\r\n   */\r\n  modelName: string\r\n}\r\n\r\ninterface IState {\r\n  loading: boolean\r\n  selectedRowKeys: string[] | number[]\r\n  /**\r\n   * 查询结果\r\n   */\r\n  data: QueryResult<BaseVO>\r\n  pageSize: number | undefined\r\n  current: number | undefined\r\n  /**\r\n   * 查询条件与排序\r\n   */\r\n  param: {\r\n    conditions: any | undefined\r\n    sorters: any | undefined\r\n  }\r\n  /**\r\n   * 展现模态框形态：0-不展示 1-新建 2-编辑\r\n   */\r\n  modalFlag: number\r\n  modalData: BaseVO | undefined\r\n}\r\n\r\nclass List extends React.Component<IProps, IState> {\r\n  form: React.ReactElement<FormProps> | undefined = undefined\r\n  constructor(props: IProps) {\r\n    super(props)\r\n    this.state = {\r\n      loading: true,\r\n      selectedRowKeys: [],\r\n      data: {\r\n        total: undefined,\r\n        content: []\r\n      },\r\n      pageSize: 10,\r\n      current: 1,\r\n      param: {\r\n        conditions: {},\r\n        sorters: {}\r\n      },\r\n      modalFlag: 0,\r\n      modalData: undefined\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.handleListChange()\r\n  }\r\n\r\n  handleListChange = () => {\r\n    const { httpPath } = this.props\r\n    this.setState({ loading: true }, () => {\r\n      const { pageSize, current, param } = this.state\r\n      const queryRequest: QueryRequest = {\r\n        pageSize,\r\n        current,\r\n        ...param\r\n      }\r\n      Http.post(`${httpPath}/list`, queryRequest)\r\n        .then(res => {\r\n          this.setState({ loading: false, data: res.data.data })\r\n        })\r\n        .catch(error => {\r\n          this.setState({ loading: false })\r\n        })\r\n    })\r\n  }\r\n\r\n  handleSelectChange = value => {\r\n    const { conditions } = this.state.param\r\n    conditions['keywords'] = value\r\n    this.setState({ current: 1 })\r\n    this.handleListChange()\r\n  }\r\n\r\n  handleDeleteOper = async (ids: Array<string> | Array<number>) => {\r\n    const { httpPath } = this.props\r\n    Modal.confirm({\r\n      title: '确定删除?',\r\n      okText: '确认',\r\n      cancelText: '取消',\r\n      onOk: () => {\r\n        let queryString = ''\r\n        ids.forEach(id => (queryString = queryString.concat(`ids=${id}&`)))\r\n        Http.delete(\r\n          `${httpPath}?${queryString.substring(0, queryString.length - 1)}`\r\n        ).then(res => {\r\n          if (res.data.status === '00000000') {\r\n            message.success('删除成功')\r\n            this.handleListChange()\r\n          } else {\r\n            message.error(res.data.message)\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  renderSearchBar() {\r\n    const { modelName } = this.props\r\n    return (\r\n      <Select\r\n        mode={'tags'}\r\n        placeholder={`请输入${modelName}`}\r\n        style={{ width: '280px' }}\r\n        tokenSeparators={[' ']}\r\n        showArrow={true}\r\n        suffixIcon={<Icon style={{ fontSize: '16px' }} type=\"search\" />}\r\n        onChange={this.handleSelectChange}\r\n        notFoundContent={null}\r\n      />\r\n    )\r\n  }\r\n\r\n  renderButtonBar() {\r\n    const { selectedRowKeys } = this.state\r\n    return (\r\n      <div>\r\n        <Button\r\n          className=\"ele-operation\"\r\n          type=\"primary\"\r\n          onClick={event => {\r\n            event.preventDefault()\r\n            this.setState({ modalFlag: 1 })\r\n          }}\r\n        >\r\n          新建\r\n        </Button>\r\n        <Button\r\n          type=\"ghost\"\r\n          disabled={selectedRowKeys.length < 1}\r\n          onClick={() => {\r\n            this.handleDeleteOper(selectedRowKeys)\r\n          }}\r\n        >\r\n          批量删除\r\n        </Button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  buildColumns() {\r\n    const columns = [\r\n      {\r\n        title: '序号',\r\n        key: 'index',\r\n        render: (text, record, index) => {\r\n          return index + 1\r\n        },\r\n        onHeaderCell: column => ({\r\n          style: { textAlign: 'center', width: '5%' }\r\n        }),\r\n        onCell: (record, rowIndex) => ({ style: { textAlign: 'center' } })\r\n      },\r\n      {\r\n        title: '名称',\r\n        key: 'name',\r\n        dataIndex: 'name',\r\n        onHeaderCell: column => ({\r\n          style: { textAlign: 'center' }\r\n        }),\r\n        onCell: (record, rowIndex) => ({ style: { textAlign: 'center' } })\r\n      },\r\n      {\r\n        title: '创建时间',\r\n        key: 'createTime',\r\n        dataIndex: 'createTime',\r\n        render: (text, record, index) => {\r\n          return moment(record.createTime).format('YYYY-MM-DD HH:mm:ss')\r\n        },\r\n        sorter: (a, b) => {\r\n          return a.id - b.id\r\n        },\r\n        onHeaderCell: column => ({\r\n          style: { textAlign: 'center', width: '15%' }\r\n        }),\r\n        onCell: (record, rowIndex) => ({ style: { textAlign: 'center' } })\r\n      },\r\n      {\r\n        title: '操作',\r\n        key: 'operation',\r\n        render: (text, record, index) => {\r\n          return (\r\n            <div>\r\n              <Button\r\n                type={'link'}\r\n                onClick={event => {\r\n                  event.preventDefault()\r\n                  this.setState({ modalFlag: 2, modalData: record })\r\n                }}\r\n              >\r\n                编辑\r\n              </Button>\r\n              <Button\r\n                type={'link'}\r\n                onClick={event => {\r\n                  event.preventDefault()\r\n                  this.handleDeleteOper([record.id])\r\n                }}\r\n              >\r\n                删除\r\n              </Button>\r\n            </div>\r\n          )\r\n        },\r\n        onHeaderCell: column => ({\r\n          style: { textAlign: 'center', width: '16%' }\r\n        }),\r\n        onCell: (record, rowIndex) => ({ style: { textAlign: 'center' } })\r\n      }\r\n    ]\r\n    return columns\r\n  }\r\n\r\n  renderTable() {\r\n    const { loading, selectedRowKeys, data, pageSize, current } = this.state\r\n    const { total, content } = data\r\n    return loading || data.content.length > 0 ? (\r\n      <Table\r\n        rowKey={record => {\r\n          return record.id\r\n        }}\r\n        rowSelection={{\r\n          columnWidth: '30px',\r\n          selectedRowKeys,\r\n          onChange: selectedRowKeys => {\r\n            this.setState({ selectedRowKeys })\r\n          }\r\n        }}\r\n        columns={this.buildColumns()}\r\n        dataSource={content}\r\n        loading={loading}\r\n        pagination={{\r\n          total,\r\n          current,\r\n          pageSize,\r\n          pageSizeOptions: ['10', '20', '50'],\r\n          showSizeChanger: true,\r\n          showTotal: total => {\r\n            return `共 ${total} 条`\r\n          }\r\n        }}\r\n        onChange={(pagination, filters, sorter, extra) => {\r\n          const { param } = this.state\r\n          const { current, pageSize } = pagination\r\n          const { field, order } = sorter\r\n          param.sorters = {}\r\n          if (field && order) {\r\n            param.sorters[toLine(field)] = fetchOrderDirection(order)\r\n          }\r\n          this.setState({ current, pageSize })\r\n          this.handleListChange()\r\n        }}\r\n      />\r\n    ) : (\r\n      <Empty description={'暂无内容'} />\r\n    )\r\n  }\r\n\r\n  handleOk = e => {\r\n    e.preventDefault()\r\n    const { httpPath } = this.props\r\n    const { modalFlag } = this.state\r\n    this.form &&\r\n      this.form.props.form.validateFields((err, values) => {\r\n        if (!err) {\r\n          // 如果是新建则调用Http.put()方法,如果是编辑则调用Http.post()方法\r\n          const method =\r\n            modalFlag === 1 ? Http.put : modalFlag === 2 ? Http.post : undefined\r\n          method &&\r\n            method(`${httpPath}`, values)\r\n              .then(res => {\r\n                if (res.data.status === '00000000') {\r\n                  message.success(`操作成功`)\r\n                  this.handleListChange()\r\n                } else {\r\n                  message.error(res.data.message)\r\n                }\r\n              })\r\n              .catch(err => {\r\n                debugger\r\n                message.error(err.response.data.msg)\r\n              })\r\n          this.setState({\r\n            modalFlag: 0\r\n          })\r\n        }\r\n      })\r\n  }\r\n\r\n  handleCancel = e => {\r\n    this.setState({\r\n      modalFlag: 0,\r\n      modalData: undefined\r\n    })\r\n  }\r\n\r\n  renderAddModal() {\r\n    const { modalFlag, modalData } = this.state\r\n    const title = `${\r\n      modalFlag === 1 ? '新建' : modalFlag === 2 ? '编辑' : undefined\r\n    }科室`\r\n    return (\r\n      <Modal\r\n        title={title}\r\n        visible={modalFlag > 0}\r\n        okText={'提交'}\r\n        cancelText={'取消'}\r\n        onOk={this.handleOk}\r\n        onCancel={this.handleCancel}\r\n      >\r\n        <WrappedNormalForm\r\n          wrappedComponentRef={(form: React.ReactElement<FormProps>) => {\r\n            this.form = form\r\n            if (this.form) {\r\n              if (modalFlag === 2 && modalData) {\r\n                // 编辑，设置值\r\n                this.form.props.form.setFieldsValue({ ...modalData })\r\n              } else if (modalFlag === 1) {\r\n                // 新建，清除旧值\r\n                this.form.props.form.resetFields(['id', 'name'])\r\n              }\r\n            }\r\n          }}\r\n        />\r\n      </Modal>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Content>\r\n        <div className=\"list-page\">\r\n          <div className=\"list-page-content\">\r\n            <div className=\"list-page-content-toolbar\">\r\n              <div className=\"list-page-content-toolbar-search\">\r\n                {this.renderSearchBar()}\r\n              </div>\r\n              <div className=\"list-page-content-toolbar-button\">\r\n                {this.renderButtonBar()}\r\n              </div>\r\n            </div>\r\n            <div className=\"list-page-content-table\">{this.renderTable()}</div>\r\n          </div>\r\n        </div>\r\n        <div>{this.renderAddModal()}</div>\r\n      </Content>\r\n    )\r\n  }\r\n}\r\n\r\nfunction fetchOrderDirection(order: string) {\r\n  if (order === 'descend') {\r\n    return 'desc'\r\n  } else {\r\n    return 'asc'\r\n  }\r\n}\r\n\r\nexport default withRouter(List)\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 20 },\r\n    sm: { span: 4 }\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 20 },\r\n    sm: { span: 16 }\r\n  }\r\n}\r\n\r\n// const tailFormItemLayout = {\r\n//   wrapperCol: {\r\n//     xs: {\r\n//       span: 2,\r\n//       offset: 0\r\n//     },\r\n//     sm: {\r\n//       span: 2,\r\n//       offset: 4\r\n//     }\r\n//   }\r\n// }\r\n\r\ninterface FormProps extends FormComponentProps {}\r\n\r\ninterface FormState {}\r\n\r\nclass NormalForm extends React.Component<FormProps, FormState> {\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form\r\n    return (\r\n      <Form {...formItemLayout}>\r\n        {getFieldDecorator('id')(<Input hidden />)}\r\n        <Form.Item key={'name'} label=\"名称\">\r\n          {getFieldDecorator('name', {\r\n            rules: [{ required: true, message: `请输入名称` }]\r\n          })(<Input />)}\r\n        </Form.Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nconst WrappedNormalForm = Form.create({\r\n  name: 'normal_login'\r\n})(NormalForm)\r\n","import React from 'react'\r\nimport {\r\n  Layout,\r\n  Select,\r\n  Button,\r\n  Table,\r\n  Empty,\r\n  message,\r\n  Icon,\r\n  Modal,\r\n  Tabs,\r\n  Tooltip\r\n} from 'antd'\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport IAccountVO, { IDeptVO } from '../type'\r\nimport DeptList from '../../../../../common/simplelist/index'\r\nimport Http, { QueryResult, QueryRequest } from '../../../../../common/http'\r\nimport { toLine } from '../../../../../common/util'\r\nimport { manageSiderPath } from '../../index'\r\nimport './index.css'\r\n\r\nconst { Content } = Layout\r\nconst { Option } = Select\r\nconst { TabPane } = Tabs\r\n\r\ntype IProps = RouteComponentProps & {}\r\n\r\ninterface IState {\r\n  loading: boolean\r\n  deptData: Array<IDeptVO>\r\n  selectedRowKeys: string[] | number[]\r\n  /**\r\n   * 查询结果\r\n   */\r\n  data: QueryResult<IAccountVO>\r\n  pageSize: number | undefined\r\n  current: number | undefined\r\n  /**\r\n   * 查询条件与排序\r\n   */\r\n  param: {\r\n    conditions: any | undefined\r\n    sorters: any | undefined\r\n  }\r\n}\r\n\r\nclass List extends React.Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props)\r\n    this.state = {\r\n      loading: true,\r\n      deptData: [],\r\n      selectedRowKeys: [],\r\n      data: {\r\n        total: undefined,\r\n        content: []\r\n      },\r\n      pageSize: 10,\r\n      current: 1,\r\n      param: {\r\n        conditions: {},\r\n        sorters: {}\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadDeptData()\r\n    this.handleListChange()\r\n  }\r\n\r\n  handleListChange = () => {\r\n    this.setState({ loading: true }, () => {\r\n      const { pageSize, current, param } = this.state\r\n      const queryRequest: QueryRequest = {\r\n        pageSize,\r\n        current,\r\n        ...param\r\n      }\r\n      Http.post(`/user/list`, queryRequest)\r\n        .then(res => {\r\n          this.setState({ loading: false, data: res.data.data })\r\n        })\r\n        .catch(error => {\r\n          this.setState({ loading: false })\r\n        })\r\n    })\r\n  }\r\n\r\n  loadDeptData = () => {\r\n    this.setState({ loading: true }, () => {\r\n      Http.post(`/dept/list-all`)\r\n        .then(res => {\r\n          this.setState({ loading: false, deptData: res.data.data })\r\n        })\r\n        .catch(error => {\r\n          this.setState({ loading: false })\r\n        })\r\n    })\r\n  }\r\n\r\n  handleSelectChangeForKeyword = value => {\r\n    const { conditions } = this.state.param\r\n    conditions['keywords'] = value\r\n    this.setState({ current: 1 })\r\n    this.handleListChange()\r\n  }\r\n\r\n  handleSelectChangeForDept = value => {\r\n    const { conditions } = this.state.param\r\n    conditions['dept'] = { id: value }\r\n    this.setState({ current: 1 })\r\n    this.handleListChange()\r\n  }\r\n\r\n  handleDeleteOper = async (ids: Array<string> | Array<number>) => {\r\n    Modal.confirm({\r\n      title: '确定删除?',\r\n      okText: '确认',\r\n      cancelText: '取消',\r\n      onOk: () => {\r\n        let queryString = ''\r\n        ids.forEach(id => (queryString = queryString.concat(`ids=${id}&`)))\r\n        Http.delete(\r\n          `/user?${queryString.substring(0, queryString.length - 1)}`\r\n        ).then(res => {\r\n          if (res.data.status === '00000000') {\r\n            message.success('删除成功')\r\n            this.handleListChange()\r\n          } else {\r\n            message.error(res.data.message)\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  renderKeywordSearchBar() {\r\n    return (\r\n      <Select\r\n        mode={'tags'}\r\n        placeholder={'请输入用户名、手机号或邮箱'}\r\n        style={{ width: '280px', marginRight: '24px' }}\r\n        tokenSeparators={[' ']}\r\n        showArrow={true}\r\n        suffixIcon={<Icon style={{ fontSize: '16px' }} type=\"search\" />}\r\n        onChange={this.handleSelectChangeForKeyword}\r\n        notFoundContent={null}\r\n      />\r\n    )\r\n  }\r\n\r\n  renderDeptSearchBar() {\r\n    const { deptData } = this.state\r\n    return (\r\n      <span>\r\n        <label>所属科室：</label>\r\n        <Select\r\n          placeholder={'请选择'}\r\n          style={{ width: '280px' }}\r\n          allowClear\r\n          showArrow={true}\r\n          onChange={this.handleSelectChangeForDept}\r\n        >\r\n          {deptData.map(dept => (\r\n            <Option key={dept.id} value={dept.id}>\r\n              {dept.name}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      </span>\r\n    )\r\n  }\r\n\r\n  renderButtonBar() {\r\n    const { selectedRowKeys } = this.state\r\n    return (\r\n      <div>\r\n        <Button\r\n          className=\"ele-operation\"\r\n          type=\"primary\"\r\n          onClick={event => {\r\n            event.preventDefault()\r\n            this.props.history.push(`${manageSiderPath}/add`)\r\n          }}\r\n        >\r\n          新建\r\n        </Button>\r\n        <Button\r\n          type=\"ghost\"\r\n          disabled={selectedRowKeys.length < 1}\r\n          onClick={() => {\r\n            this.handleDeleteOper(selectedRowKeys)\r\n          }}\r\n        >\r\n          批量删除\r\n        </Button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  buildColumns() {\r\n    const columns = [\r\n      {\r\n        title: '序号',\r\n        key: 'index',\r\n        render: (text, record, index) => {\r\n          return index + 1\r\n        },\r\n        onHeaderCell: column => ({\r\n          style: { textAlign: 'center', width: '5%' }\r\n        }),\r\n        onCell: (record, rowIndex) => ({ style: { textAlign: 'center' } })\r\n      },\r\n      {\r\n        title: '用户名',\r\n        dataIndex: 'username',\r\n        key: 'username',\r\n        onHeaderCell: column => ({\r\n          style: { textAlign: 'center' }\r\n        }),\r\n        onCell: (record, rowIndex) => ({ style: { textAlign: 'center' } })\r\n      },\r\n      {\r\n        title: '手机',\r\n        dataIndex: 'phone',\r\n        key: 'phone',\r\n        onHeaderCell: column => ({\r\n          style: { textAlign: 'center', width: '12%' }\r\n        }),\r\n        onCell: (record, rowIndex) => ({ style: { textAlign: 'center' } })\r\n      },\r\n      {\r\n        title: '邮箱',\r\n        dataIndex: 'email',\r\n        key: 'email',\r\n        onHeaderCell: column => ({\r\n          style: { textAlign: 'center', width: '16%' }\r\n        }),\r\n        onCell: (record, rowIndex) => ({ style: { textAlign: 'center' } })\r\n      },\r\n      {\r\n        title: '科室',\r\n        dataIndex: 'dept',\r\n        key: 'dept',\r\n        onHeaderCell: column => ({\r\n          style: { textAlign: 'center', width: '10%' }\r\n        }),\r\n        onCell: (record, rowIndex) => ({\r\n          style: {\r\n            textAlign: 'center',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            whiteSpace: 'nowrap',\r\n            cursor: 'pointer'\r\n          }\r\n        }),\r\n        render: text => (\r\n          <Tooltip placement=\"topLeft\" title={text ? text.name : ''}>\r\n            {text ? text.name : ''}\r\n          </Tooltip>\r\n        )\r\n      },\r\n      {\r\n        title: '冻结状态',\r\n        dataIndex: 'frozen',\r\n        key: 'frozen',\r\n        render: (text, record, index) => {\r\n          return record.frozen ? (\r\n            <span className=\"warn-text\">已冻结</span>\r\n          ) : (\r\n            <span className=\"success-text\">正常</span>\r\n          )\r\n        },\r\n        onHeaderCell: column => ({\r\n          style: { textAlign: 'center', width: '8%' }\r\n        }),\r\n        onCell: (record, rowIndex) => ({ style: { textAlign: 'center' } })\r\n      },\r\n      {\r\n        title: '创建时间',\r\n        dataIndex: 'createTime',\r\n        key: 'createTime',\r\n        render: (text, record, index) => {\r\n          return moment(record.createTime).format('YYYY-MM-DD HH:mm:ss')\r\n        },\r\n        sorter: (a, b) => {\r\n          return a.id - b.id\r\n        },\r\n        onHeaderCell: column => ({\r\n          style: { textAlign: 'center', width: '15%' }\r\n        }),\r\n        onCell: (record, rowIndex) => ({ style: { textAlign: 'center' } })\r\n      },\r\n      {\r\n        title: '操作',\r\n        key: 'operation',\r\n        render: (text, record, index) => {\r\n          return (\r\n            <div>\r\n              <Button\r\n                type={'link'}\r\n                onClick={event => {\r\n                  event.preventDefault()\r\n                  this.props.history.push(\r\n                    `${manageSiderPath}/edit/${record.id}`\r\n                  )\r\n                }}\r\n              >\r\n                编辑\r\n              </Button>\r\n              <Button\r\n                type={'link'}\r\n                onClick={event => {\r\n                  event.preventDefault()\r\n                  const operation = record.frozen ? 'unfreeze' : 'freeze'\r\n                  Http.post(`/user/${operation}`, { ids: [record.id] })\r\n                    .then(res => {\r\n                      message.success(`${record.frozen ? '解冻' : '冻结'}成功`)\r\n                      this.handleListChange()\r\n                    })\r\n                    .catch(err => {\r\n                      this.handleListChange()\r\n                    })\r\n                }}\r\n              >\r\n                {record.frozen ? '解冻' : '冻结'}\r\n              </Button>\r\n              <Button\r\n                type={'link'}\r\n                onClick={event => {\r\n                  event.preventDefault()\r\n                  this.handleDeleteOper([record.id])\r\n                }}\r\n              >\r\n                删除\r\n              </Button>\r\n            </div>\r\n          )\r\n        },\r\n        onHeaderCell: column => ({\r\n          style: { textAlign: 'center', width: '18%' }\r\n        }),\r\n        onCell: (record, rowIndex) => ({ style: { textAlign: 'center' } })\r\n      }\r\n    ]\r\n    return columns\r\n  }\r\n\r\n  renderTable() {\r\n    const { loading, selectedRowKeys, data, pageSize, current } = this.state\r\n    const { total, content } = data\r\n    return loading || data.content.length > 0 ? (\r\n      <Table\r\n        rowKey={record => {\r\n          return record.id\r\n        }}\r\n        rowSelection={{\r\n          columnWidth: '30px',\r\n          selectedRowKeys,\r\n          onChange: selectedRowKeys => {\r\n            this.setState({ selectedRowKeys })\r\n          }\r\n        }}\r\n        columns={this.buildColumns()}\r\n        dataSource={content}\r\n        loading={loading}\r\n        onRow={(record, index) => {\r\n          return {\r\n            onClick: event => {\r\n              event.preventDefault()\r\n              if (event.target['tagName'] !== 'TD') {\r\n                return\r\n              }\r\n              this.props.history.push(`${manageSiderPath}/view/${record.id}`)\r\n            }\r\n          }\r\n        }}\r\n        // size={'middle'}\r\n        pagination={{\r\n          total,\r\n          current,\r\n          pageSize,\r\n          pageSizeOptions: ['10', '20', '50'],\r\n          showSizeChanger: true,\r\n          showTotal: total => {\r\n            return `共 ${total} 条`\r\n          }\r\n        }}\r\n        onChange={(pagination, filters, sorter, extra) => {\r\n          const { param } = this.state\r\n          const { current, pageSize } = pagination\r\n          const { field, order } = sorter\r\n          param.sorters = {}\r\n          if (field && order) {\r\n            param.sorters[toLine(field)] = fetchOrderDirection(order)\r\n          }\r\n          this.setState({ current, pageSize })\r\n          this.handleListChange()\r\n        }}\r\n      />\r\n    ) : (\r\n      <Empty description={'暂无内容'} />\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Content>\r\n        <div className=\"list-page\">\r\n          <div className=\"list-page-content\">\r\n            <Tabs defaultActiveKey=\"account\" onChange={() => {}}>\r\n              <TabPane tab=\"科室\" key=\"dept\">\r\n                <DeptList httpPath={`/dept`} modelName={'科室'} />\r\n              </TabPane>\r\n              <TabPane tab=\"账号\" key=\"account\">\r\n                <div className=\"list-page-content-toolbar\">\r\n                  <div className=\"list-page-content-toolbar-search\">\r\n                    {this.renderKeywordSearchBar()}\r\n                    {this.renderDeptSearchBar()}\r\n                  </div>\r\n                  <div className=\"list-page-content-toolbar-button\">\r\n                    {this.renderButtonBar()}\r\n                  </div>\r\n                </div>\r\n                <div className=\"list-page-content-table\">\r\n                  {this.renderTable()}\r\n                </div>\r\n              </TabPane>\r\n            </Tabs>\r\n          </div>\r\n        </div>\r\n      </Content>\r\n    )\r\n  }\r\n}\r\n\r\nfunction fetchOrderDirection(order: string) {\r\n  if (order === 'descend') {\r\n    return 'desc'\r\n  } else {\r\n    return 'asc'\r\n  }\r\n}\r\n\r\nexport default withRouter(List)\r\n","import React from 'react'\r\nimport { Layout, Button, Form, Spin, Tree } from 'antd'\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\r\nimport IAccountVO from '../../../user/manage/type'\r\nimport Http from '../../../../../common/http'\r\nimport { manageSiderPath } from '../../index'\r\n\r\nconst { Content } = Layout\r\nconst { TreeNode } = Tree\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 20 },\r\n    sm: { span: 4 }\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 20 },\r\n    sm: { span: 16 }\r\n  }\r\n}\r\n\r\n// const tailFormItemLayout = {\r\n//   wrapperCol: {\r\n//     xs: {\r\n//       span: 2,\r\n//       offset: 0\r\n//     },\r\n//     sm: {\r\n//       span: 2,\r\n//       offset: 4\r\n//     }\r\n//   }\r\n// }\r\n\r\ntype IProps = RouteComponentProps & {}\r\n\r\ninterface IState {\r\n  loading: boolean\r\n  data: IAccountVO | undefined\r\n}\r\n\r\nclass View extends React.Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props)\r\n    this.state = {\r\n      loading: true,\r\n      data: undefined\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { match } = this.props\r\n    const id = match.params['id']\r\n    this.setState({ loading: true }, () => {\r\n      Http.get(`/user?id=${id}`)\r\n        .then(res => {\r\n          const data = res.data.data\r\n          this.setState({ loading: false, data })\r\n        })\r\n        .catch(error => {})\r\n    })\r\n  }\r\n\r\n  handleCancel = e => {\r\n    e.preventDefault()\r\n    this.props.history.push(`${manageSiderPath}/list`)\r\n  }\r\n\r\n  renderContent() {\r\n    const { loading, data } = this.state\r\n    return !loading && data ? (\r\n      <Form {...formItemLayout}>\r\n        <Form.Item key={'username'} label=\"用户名\">\r\n          {data.username}\r\n        </Form.Item>\r\n        <Form.Item key={'phone'} label=\"手机\">\r\n          {data.phone}\r\n        </Form.Item>\r\n        <Form.Item key={'email'} label=\"邮箱\">\r\n          {data.email}\r\n        </Form.Item>\r\n        <Form.Item key={'dept'} label=\"科室\">\r\n          {data.dept && data.dept.name}\r\n        </Form.Item>\r\n        <Form.Item key={'permissions'} label=\"账号授权\">\r\n          <Tree showLine defaultExpandAll>\r\n            {data.permissions.map(perm => (\r\n              <TreeNode title={perm.name} />\r\n            ))}\r\n          </Tree>\r\n        </Form.Item>\r\n      </Form>\r\n    ) : (\r\n      <Spin size={'large'} />\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { match } = this.props\r\n    const id = match.params['id']\r\n    return (\r\n      <Content>\r\n        <div\r\n          style={{\r\n            margin: '4px 4px 10px',\r\n            display: 'flex',\r\n            alignItems: 'center'\r\n          }}\r\n        >\r\n          <div style={{ margin: '4px', flex: 1 }}>\r\n            <span style={{ float: 'right' }}>\r\n              <Button\r\n                className={'ele-operation'}\r\n                type={'primary'}\r\n                onClick={event => {\r\n                  event.preventDefault()\r\n                  this.props.history.push(`${manageSiderPath}/edit/${id}`)\r\n                }}\r\n              >\r\n                编辑\r\n              </Button>\r\n              <Button type={'default'} onClick={this.handleCancel}>\r\n                返回\r\n              </Button>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div style={{ margin: '8px' }}>{this.renderContent()}</div>\r\n      </Content>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(View)\r\n","import React from 'react'\r\nimport './index.css'\r\nimport { Breadcrumb } from 'antd'\r\nimport {\r\n  HashRouter,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n  withRouter,\r\n  RouteComponentProps\r\n} from 'react-router-dom'\r\nimport { manageSiderPath } from '../index'\r\nimport AddCmpt from './add'\r\nimport EditCmpt from './edit'\r\nimport ListCmpt from './list'\r\nimport ViewCmpt from './view'\r\n\r\ntype IProps = RouteComponentProps & {}\r\n\r\ninterface IState {}\r\n\r\nclass Manage extends React.Component<IProps, IState> {\r\n  render() {\r\n    const path = this.props.location.pathname\r\n    let curItem\r\n    if (path.indexOf(`${manageSiderPath}/add`) >= 0) {\r\n      curItem = '新增'\r\n    } else if (path.indexOf(`${manageSiderPath}/edit`) >= 0) {\r\n      curItem = '编辑'\r\n    } else if (path.indexOf(`${manageSiderPath}/view`) >= 0) {\r\n      curItem = '详情'\r\n    } else if (path.indexOf(`${manageSiderPath}/list`) >= 0) {\r\n      curItem = '查询'\r\n    }\r\n\r\n    return (\r\n      <div className=\"layout-content\">\r\n        <div className=\"layout-content-inner\">\r\n          <Breadcrumb>\r\n            <Breadcrumb.Item>当前位置：</Breadcrumb.Item>\r\n            <Breadcrumb.Item>账号与安全</Breadcrumb.Item>\r\n            <Breadcrumb.Item\r\n              onClick={() => this.props.history.push(`${manageSiderPath}`)}\r\n            >\r\n              账号管理\r\n            </Breadcrumb.Item>\r\n            <Breadcrumb.Item>{curItem}</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n          <HashRouter>\r\n            <Switch>\r\n              <Redirect\r\n                path={`${manageSiderPath}`}\r\n                exact={true}\r\n                to={`${manageSiderPath}/list`}\r\n              />\r\n              <Route path={`${manageSiderPath}/list`} component={ListCmpt} />\r\n              <Route path={`${manageSiderPath}/add`} component={AddCmpt} />\r\n              <Route\r\n                path={`${manageSiderPath}/edit/:id`}\r\n                component={EditCmpt}\r\n              />\r\n              <Route\r\n                path={`${manageSiderPath}/view/:id`}\r\n                component={ViewCmpt}\r\n              />\r\n            </Switch>\r\n          </HashRouter>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Manage)\r\n","import React from 'react'\r\n\r\nclass Authority extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"layout-content\">\r\n        <div className=\"layout-content-aside\"></div>\r\n        <div className=\"layout-content-inner\"></div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Authority\r\n","import React from 'react'\r\nimport './index.css'\r\nimport { Layout, Menu, Icon } from 'antd'\r\nimport {\r\n  HashRouter,\r\n  Route,\r\n  Switch,\r\n  withRouter,\r\n  RouteComponentProps\r\n} from 'react-router-dom'\r\nimport Manage from './manage'\r\nimport Authority from './authority'\r\n\r\nexport const modulePath = `/main/user`\r\nexport const manageSiderPath = `${modulePath}/manage`\r\nexport const authoritySiderPath = `${modulePath}/authority`\r\n\r\nconst { Sider } = Layout\r\n\r\ntype IProps = RouteComponentProps & {}\r\n\r\ninterface IState {\r\n  collapsed: boolean\r\n  selectedKeys: Array<string>\r\n}\r\n\r\nclass UserSider extends React.Component<IProps, IState> {\r\n  state: IState = {\r\n    collapsed: false,\r\n    selectedKeys: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    const defaultSelectedKey = '/manage'\r\n    this.handleOnSelect({ key: defaultSelectedKey })\r\n  }\r\n\r\n  handleOnSelect = param => {\r\n    const { key } = param\r\n    this.setState({ selectedKeys: [key] })\r\n    this.props.history.push(`${modulePath}${key}`)\r\n  }\r\n\r\n  toggleCollapsed = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { selectedKeys } = this.state\r\n    return (\r\n      <Layout>\r\n        <Sider\r\n          width={180}\r\n          theme=\"dark\"\r\n          collapsed={this.state.collapsed}\r\n          collapsedWidth={80}\r\n        >\r\n          <span className=\"aside-top\" onClick={this.toggleCollapsed}>\r\n            <Icon\r\n              style={{ margin: '0 0 0 10px' }}\r\n              type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\r\n            />\r\n          </span>\r\n          <Menu\r\n            selectedKeys={selectedKeys}\r\n            mode=\"inline\"\r\n            theme=\"dark\"\r\n            onSelect={this.handleOnSelect}\r\n          >\r\n            <Menu.Item className=\"aside-item\" key=\"/manage\">\r\n              <Icon type=\"solution\" />\r\n              <span>账号管理</span>\r\n            </Menu.Item>\r\n            <Menu.Item className=\"aside-item\" key=\"/authority\">\r\n              <Icon type=\"safety-certificate\" />\r\n              <span>授权查询</span>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n        <Layout>\r\n          <HashRouter>\r\n            <Switch>\r\n              <Route path={`${modulePath}/manage`} component={Manage} />\r\n              <Route path={`${modulePath}/authority`} component={Authority} />\r\n            </Switch>\r\n          </HashRouter>\r\n        </Layout>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(UserSider)\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { Result } from 'antd'\r\nimport { UserContext } from '../../home/index'\r\n// import Http from '../http/index'\r\n\r\n// 这个组件将根据登录的情况, 返回一个路由\r\nconst PrivateRoute = ({ component: Component, ...props }) => {\r\n  // 解构赋值 将 props 里面的 component 赋值给 Component\r\n  return (\r\n    <UserContext.Consumer>\r\n      {userInfo => {\r\n        const needPerms = props['permission']\r\n        const userPerms = userInfo['permissions']\r\n        const perm = needPerms\r\n          ? userPerms.find(userPerm => {\r\n              if (needPerms instanceof Array) {\r\n                return needPerms.find(needPerm => userPerm.id === needPerm)\r\n              } else {\r\n                return userPerm.id === needPerms\r\n              }\r\n            })\r\n          : 'true'\r\n        return (\r\n          <Route\r\n            {...props}\r\n            render={p => {\r\n              let userId = sessionStorage.getItem('userId')\r\n              // if (!userId) {\r\n              //   debugger\r\n              //   Http.get(`/account?id=`).then(res => {\r\n              //     userId = res.data.data.id\r\n              //     sessionStorage.setItem('userId', res.data.data.id)\r\n              //   })\r\n              // }\r\n              if (userId) {\r\n                // 如果登录了, 返回正确的路由\r\n                return perm ? (\r\n                  <Component />\r\n                ) : (\r\n                  <Result\r\n                    style={{ width: '100%', height: '100%' }}\r\n                    status=\"403\"\r\n                    title=\"403\"\r\n                    subTitle=\"没有访问权限\"\r\n                  />\r\n                )\r\n              } else {\r\n                // 没有登录就重定向至登录页面\r\n                return (\r\n                  <Redirect\r\n                    to={{\r\n                      pathname: '/login',\r\n                      state: {\r\n                        from: p.location.pathname\r\n                      }\r\n                    }}\r\n                  />\r\n                )\r\n              }\r\n            }}\r\n          />\r\n        )\r\n      }}\r\n    </UserContext.Consumer>\r\n  )\r\n}\r\nexport default PrivateRoute\r\n","import React from 'react'\r\nimport {\r\n  Layout,\r\n  Select,\r\n  Button,\r\n  Table,\r\n  Empty,\r\n  message,\r\n  Icon,\r\n  Modal,\r\n  Tooltip\r\n} from 'antd'\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport IDocmVO from '../type'\r\nimport { IDeptVO } from '../../user/manage/type'\r\nimport Http, {\r\n  QueryResult,\r\n  QueryRequest,\r\n  serverPath\r\n} from '../../../../common/http'\r\nimport { modulePath } from '../index'\r\nimport { toLine } from '../../../../common/util'\r\nimport { UserContext } from '../../../index'\r\nimport './index.css'\r\n\r\nconst { Content } = Layout\r\nconst { Option } = Select\r\n\r\ntype IProps = RouteComponentProps & {}\r\n\r\ninterface IState {\r\n  loading: boolean\r\n  selectedRowKeys: string[] | number[]\r\n  /**\r\n   * 项目类型下拉选数据\r\n   */\r\n  projectTypes: Array<string>\r\n  /**\r\n   * 查询结果\r\n   */\r\n  data: QueryResult<IDocmVO>\r\n  pageSize: number | undefined\r\n  current: number | undefined\r\n  /**\r\n   * 查询条件与排序\r\n   */\r\n  param: {\r\n    conditions: any | undefined\r\n    sorters: any | undefined\r\n  }\r\n  deptData: Array<IDeptVO>\r\n}\r\n\r\nclass List extends React.Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props)\r\n    this.state = {\r\n      loading: true,\r\n      selectedRowKeys: [],\r\n      projectTypes: [],\r\n      data: {\r\n        total: undefined,\r\n        content: []\r\n      },\r\n      pageSize: 10,\r\n      current: 1,\r\n      param: {\r\n        conditions: {},\r\n        sorters: {}\r\n      },\r\n      deptData: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadProjectTypes()\r\n    this.loadDeptData()\r\n    this.handleListChange()\r\n  }\r\n\r\n  handleListChange = () => {\r\n    this.setState({ loading: true }, () => {\r\n      const { pageSize, current, param } = this.state\r\n      const queryRequest: QueryRequest = {\r\n        pageSize,\r\n        current,\r\n        ...param\r\n      }\r\n      Http.post('/docm/list', queryRequest)\r\n        .then(res => {\r\n          this.setState({ loading: false, data: res.data.data })\r\n        })\r\n        .catch(error => {\r\n          this.setState({ loading: false })\r\n        })\r\n    })\r\n  }\r\n\r\n  loadProjectTypes = () => {\r\n    Http.get(`/docm/type/list`)\r\n      .then(res => {\r\n        this.setState({ projectTypes: res.data.data })\r\n      })\r\n      .catch(err => {\r\n        message.error('加载项目类型数据失败')\r\n      })\r\n  }\r\n\r\n  loadDeptData = () => {\r\n    this.setState({ loading: true }, () => {\r\n      Http.post(`/dept/list-all`)\r\n        .then(res => {\r\n          this.setState({ loading: false, deptData: res.data.data })\r\n        })\r\n        .catch(error => {\r\n          this.setState({ loading: false })\r\n        })\r\n    })\r\n  }\r\n\r\n  handleSelectChangeForKeyword = value => {\r\n    const { conditions } = this.state.param\r\n    conditions['keywords'] = value\r\n    this.setState({ current: 1 })\r\n    this.handleListChange()\r\n  }\r\n\r\n  handleSelectChangeForProjectType = value => {\r\n    const { conditions } = this.state.param\r\n    conditions['projectType'] = value\r\n    this.setState({ current: 1 })\r\n    this.handleListChange()\r\n  }\r\n\r\n  handleSelectChangeForDept = value => {\r\n    const { conditions } = this.state.param\r\n    conditions['dept'] = { id: value }\r\n    this.setState({ current: 1 })\r\n    this.handleListChange()\r\n  }\r\n\r\n  handleDeleteOper = async (ids: Array<string> | Array<number>) => {\r\n    Modal.confirm({\r\n      title: '确定删除?',\r\n      okText: '确认',\r\n      cancelText: '取消',\r\n      onOk: async () => {\r\n        let queryString = ''\r\n        ids.forEach(id => (queryString = queryString.concat(`ids=${id}&`)))\r\n        await Http.delete(\r\n          `/docm?${queryString.substring(0, queryString.length - 1)}`\r\n        )\r\n        message.success('删除成功')\r\n        this.handleListChange()\r\n      }\r\n    })\r\n  }\r\n\r\n  renderKeywordSearchBar() {\r\n    return (\r\n      <Select\r\n        mode={'tags'}\r\n        placeholder={'搜索合同名称或公司名称关键字'}\r\n        style={{ width: '280px', marginRight: '24px' }}\r\n        tokenSeparators={[' ']}\r\n        showArrow={true}\r\n        suffixIcon={<Icon style={{ fontSize: '16px' }} type=\"search\" />}\r\n        onChange={this.handleSelectChangeForKeyword}\r\n        notFoundContent={null}\r\n      />\r\n    )\r\n  }\r\n\r\n  renderProjectTypeSearchBar() {\r\n    const { projectTypes } = this.state\r\n    return (\r\n      <span>\r\n        <label>合同类型：</label>\r\n        <Select\r\n          placeholder={'请选择合同类型'}\r\n          style={{ width: '280px', marginRight: '24px' }}\r\n          allowClear\r\n          showArrow={true}\r\n          onChange={this.handleSelectChangeForProjectType}\r\n          notFoundContent={'暂无数据'}\r\n        >\r\n          {projectTypes.map(pType => (\r\n            <Option key={pType} value={pType}>\r\n              {pType}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      </span>\r\n    )\r\n  }\r\n\r\n  renderDeptSearchBar() {\r\n    const { deptData } = this.state\r\n    return (\r\n      <span>\r\n        <label>所属科室：</label>\r\n        <Select\r\n          placeholder={'请选择'}\r\n          style={{ width: '280px', marginRight: '24px' }}\r\n          allowClear\r\n          showArrow={true}\r\n          onChange={this.handleSelectChangeForDept}\r\n        >\r\n          {deptData.map(dept => (\r\n            <Option key={dept.id} value={dept.id}>\r\n              {dept.name}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      </span>\r\n    )\r\n  }\r\n\r\n  renderButtonBar() {\r\n    const { selectedRowKeys } = this.state\r\n    return (\r\n      <UserContext.Consumer>\r\n        {userInfo => {\r\n          const DOCM_ADD_OPER_permission = userInfo['permissions'].find(\r\n            perm => perm.id === 'DOCM_ADD_OPER'\r\n          )\r\n          const DOCM_DELETE_OPER_permission = userInfo['permissions'].find(\r\n            perm => perm.id === 'DOCM_DELETE_OPER'\r\n          )\r\n          return (\r\n            <div style={{ margin: '4px', flex: 1 }}>\r\n              <span style={{ float: 'right' }}>\r\n                {DOCM_ADD_OPER_permission && (\r\n                  <Button\r\n                    className=\"ele-operation\"\r\n                    type=\"primary\"\r\n                    onClick={() => {\r\n                      this.props.history.push(`${modulePath}/add`)\r\n                    }}\r\n                  >\r\n                    新建\r\n                  </Button>\r\n                )}\r\n                {DOCM_DELETE_OPER_permission && (\r\n                  <Button\r\n                    type=\"ghost\"\r\n                    disabled={selectedRowKeys.length < 1}\r\n                    onClick={() => {\r\n                      this.handleDeleteOper(selectedRowKeys)\r\n                    }}\r\n                  >\r\n                    批量删除\r\n                  </Button>\r\n                )}\r\n              </span>\r\n            </div>\r\n          )\r\n        }}\r\n      </UserContext.Consumer>\r\n    )\r\n  }\r\n\r\n  buildColumns() {\r\n    const columns = [\r\n      {\r\n        title: '序号',\r\n        key: 'index',\r\n        render: (text, record, index) => {\r\n          return index + 1\r\n        },\r\n        onHeaderCell: column => ({\r\n          style: { textAlign: 'center', width: '5%' }\r\n        }),\r\n        onCell: (record, rowIndex) => ({ style: { textAlign: 'center' } })\r\n      },\r\n      {\r\n        title: '合同名称',\r\n        dataIndex: 'projectName',\r\n        key: 'projectName',\r\n        sorter: (a, b) => {\r\n          return a.id - b.id\r\n        },\r\n        onHeaderCell: column => ({\r\n          style: { textAlign: 'center' }\r\n        }),\r\n        onCell: (record, rowIndex) => ({\r\n          style: {\r\n            textAlign: 'center',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            whiteSpace: 'nowrap',\r\n            cursor: 'pointer'\r\n          }\r\n        }),\r\n        render: text => (\r\n          <Tooltip placement=\"topLeft\" title={text}>\r\n            {text}\r\n          </Tooltip>\r\n        )\r\n      },\r\n      {\r\n        title: '合同类型',\r\n        dataIndex: 'projectType',\r\n        key: 'projectType',\r\n        sorter: (a, b) => {\r\n          return a.id - b.id\r\n        },\r\n        onHeaderCell: column => ({\r\n          style: { textAlign: 'center', width: '10%' }\r\n        }),\r\n        onCell: (record, rowIndex) => ({\r\n          style: {\r\n            textAlign: 'center',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            whiteSpace: 'nowrap',\r\n            cursor: 'pointer'\r\n          }\r\n        }),\r\n        render: text => (\r\n          <Tooltip placement=\"topLeft\" title={text}>\r\n            {text}\r\n          </Tooltip>\r\n        )\r\n      },\r\n      {\r\n        title: '公司名称',\r\n        dataIndex: 'company',\r\n        key: 'company',\r\n        sorter: (a, b) => {\r\n          return a.id - b.id\r\n        },\r\n        onHeaderCell: column => ({\r\n          style: { textAlign: 'center', width: '10%' }\r\n        }),\r\n        onCell: (record, rowIndex) => ({\r\n          style: {\r\n            textAlign: 'center',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            whiteSpace: 'nowrap',\r\n            cursor: 'pointer'\r\n          }\r\n        }),\r\n        render: text => (\r\n          <Tooltip placement=\"topLeft\" title={text}>\r\n            {text}\r\n          </Tooltip>\r\n        )\r\n      },\r\n      {\r\n        title: '合同号',\r\n        dataIndex: 'contractNum',\r\n        key: 'contractNum',\r\n        sorter: (a, b) => {\r\n          return a.id - b.id\r\n        },\r\n        onHeaderCell: column => ({\r\n          style: { textAlign: 'center', width: '10%' }\r\n        }),\r\n        onCell: (record, rowIndex) => ({\r\n          style: {\r\n            textAlign: 'center',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            whiteSpace: 'nowrap',\r\n            cursor: 'pointer'\r\n          }\r\n        }),\r\n        render: text => (\r\n          <Tooltip placement=\"topLeft\" title={text}>\r\n            {text}\r\n          </Tooltip>\r\n        )\r\n      },\r\n      {\r\n        title: '科室',\r\n        dataIndex: 'dept',\r\n        key: 'dept',\r\n        onHeaderCell: column => ({\r\n          style: { textAlign: 'center', width: '6%' }\r\n        }),\r\n        onCell: (record, rowIndex) => ({\r\n          style: {\r\n            textAlign: 'center',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            whiteSpace: 'nowrap',\r\n            cursor: 'pointer'\r\n          }\r\n        }),\r\n        render: text => (\r\n          <Tooltip placement=\"topLeft\" title={text ? text.name : ''}>\r\n            {text ? text.name : ''}\r\n          </Tooltip>\r\n        )\r\n      },\r\n      {\r\n        title: '合同签订时间',\r\n        dataIndex: 'contractTime',\r\n        key: 'contractTime',\r\n        sorter: (a, b) => {\r\n          return a.id - b.id\r\n        },\r\n        onHeaderCell: column => ({\r\n          style: { textAlign: 'center', width: '10%' }\r\n        }),\r\n        onCell: (record, rowIndex) => ({ style: { textAlign: 'center' } })\r\n      },\r\n      {\r\n        title: '凭证时间',\r\n        dataIndex: 'credentialTime',\r\n        key: 'credentialTime',\r\n        sorter: (a, b) => {\r\n          return a.id - b.id\r\n        },\r\n        onHeaderCell: column => ({\r\n          style: { textAlign: 'center', width: '8%' }\r\n        }),\r\n        onCell: (record, rowIndex) => ({ style: { textAlign: 'center' } })\r\n      },\r\n      {\r\n        title: '创建时间',\r\n        dataIndex: 'createTime',\r\n        key: 'createTime',\r\n        render: (text, record, index) => {\r\n          return moment(record.createTime).format('YYYY-MM-DD HH:mm:ss')\r\n        },\r\n        sorter: (a, b) => {\r\n          return a.id - b.id\r\n        },\r\n        onHeaderCell: column => ({\r\n          style: { textAlign: 'center', width: '12%' }\r\n        }),\r\n        onCell: (record, rowIndex) => ({ style: { textAlign: 'center' } })\r\n      },\r\n      {\r\n        title: '操作',\r\n        key: 'operation',\r\n        render: (text, record, index) => {\r\n          return (\r\n            <UserContext.Consumer>\r\n              {userInfo => {\r\n                const DOCM_EDIT_OPER_permission = userInfo['permissions'].find(\r\n                  perm => perm.id === 'DOCM_EDIT_OPER'\r\n                )\r\n                const DOCM_DELETE_OPER_permission = userInfo[\r\n                  'permissions'\r\n                ].find(perm => perm.id === 'DOCM_DELETE_OPER')\r\n                const DOCM_DOWNLOAD_OPER_permission = userInfo[\r\n                  'permissions'\r\n                ].find(perm => perm.id === 'DOCM_DOWNLOAD_OPER')\r\n                return (\r\n                  <div>\r\n                    {DOCM_EDIT_OPER_permission && (\r\n                      <Button\r\n                        type={'link'}\r\n                        onClick={event => {\r\n                          event.preventDefault()\r\n                          this.props.history.push(\r\n                            `${modulePath}/edit/${record.id}`\r\n                          )\r\n                        }}\r\n                      >\r\n                        编辑\r\n                      </Button>\r\n                    )}\r\n                    {DOCM_DOWNLOAD_OPER_permission && (\r\n                      <Button\r\n                        type={'link'}\r\n                        href={`${serverPath}/doc?id=${\r\n                          record.id\r\n                        }&xAuthToken=${sessionStorage.getItem('xAuthToken')}`}\r\n                        target=\"_blank\"\r\n                      >\r\n                        下载\r\n                      </Button>\r\n                    )}\r\n                    {DOCM_DELETE_OPER_permission && (\r\n                      <Button\r\n                        type={'link'}\r\n                        onClick={() => this.handleDeleteOper([record.id])}\r\n                      >\r\n                        删除\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                )\r\n              }}\r\n            </UserContext.Consumer>\r\n          )\r\n        },\r\n        onHeaderCell: column => ({\r\n          style: { textAlign: 'center', width: '16%' }\r\n        }),\r\n        onCell: (record, rowIndex) => ({ style: { textAlign: 'center' } })\r\n      }\r\n    ]\r\n    return columns\r\n  }\r\n\r\n  renderTable() {\r\n    const { loading, data, pageSize, current, selectedRowKeys } = this.state\r\n    const { total, content } = data\r\n    return (\r\n      <UserContext.Consumer>\r\n        {userInfo => {\r\n          const DOCM_DELETE_OPER_permission = userInfo['permissions'].find(\r\n            perm => perm.id === 'DOCM_DELETE_OPER'\r\n          )\r\n          const rowSelection = DOCM_DELETE_OPER_permission\r\n            ? {\r\n                columnWidth: '30px',\r\n                selectedRowKeys,\r\n                onChange: selectedRowKeys => {\r\n                  this.setState({ selectedRowKeys })\r\n                }\r\n              }\r\n            : undefined\r\n          return loading || data.content.length > 0 ? (\r\n            <Table\r\n              rowKey={record => {\r\n                return record.id\r\n              }}\r\n              rowSelection={rowSelection}\r\n              columns={this.buildColumns()}\r\n              dataSource={content}\r\n              loading={loading}\r\n              onRow={(record, index) => {\r\n                return {\r\n                  onClick: event => {\r\n                    if (event.target['tagName'] !== 'TD') {\r\n                      return\r\n                    }\r\n                    this.props.history.push(`${modulePath}/view/${record.id}`)\r\n                  }\r\n                }\r\n              }}\r\n              // size={'middle'}\r\n              pagination={{\r\n                total,\r\n                current,\r\n                pageSize,\r\n                pageSizeOptions: ['10', '20', '50'],\r\n                showSizeChanger: true,\r\n                onShowSizeChange: (current, pageSize) => {\r\n                  this.setState({ current: 1, pageSize })\r\n                },\r\n                showTotal: total => {\r\n                  return `共 ${total} 条`\r\n                }\r\n              }}\r\n              onChange={(pagination, filters, sorter, extra) => {\r\n                const { param } = this.state\r\n                const { current, pageSize } = pagination\r\n                const { field, order } = sorter\r\n                param.sorters = {}\r\n                if (field && order) {\r\n                  param.sorters[toLine(field)] = fetchOrderDirection(order)\r\n                }\r\n                this.setState({ current, pageSize })\r\n                this.handleListChange()\r\n              }}\r\n            />\r\n          ) : (\r\n            <Empty description={'暂无内容'} />\r\n          )\r\n        }}\r\n      </UserContext.Consumer>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Content>\r\n        <div className=\"list-page\">\r\n          <div className=\"list-page-content\">\r\n            <div className=\"list-page-content-toolbar\">\r\n              <div className=\"list-page-content-toolbar-search\">\r\n                {this.renderKeywordSearchBar()}\r\n                {this.renderProjectTypeSearchBar()}\r\n                {this.renderDeptSearchBar()}\r\n              </div>\r\n              <div className=\"list-page-content-toolbar-button\">\r\n                {this.renderButtonBar()}\r\n              </div>\r\n            </div>\r\n            <div className=\"list-page-content-table\">{this.renderTable()}</div>\r\n          </div>\r\n        </div>\r\n      </Content>\r\n    )\r\n  }\r\n}\r\n\r\nfunction fetchOrderDirection(order: string) {\r\n  if (order === 'descend') {\r\n    return 'desc'\r\n  } else {\r\n    return 'asc'\r\n  }\r\n}\r\n\r\nexport default withRouter(List)\r\n","import React from 'react'\r\nimport {\r\n  Layout,\r\n  Button,\r\n  Form,\r\n  Input,\r\n  Icon,\r\n  Upload,\r\n  DatePicker,\r\n  message,\r\n  Select\r\n} from 'antd'\r\nimport { FormComponentProps } from 'antd/lib/form'\r\nimport { UploadFile } from 'antd/lib/upload/interface'\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport IDocmVO from '../type'\r\nimport Http, { serverPath } from '../../../../common/http'\r\nimport { modulePath } from '../index'\r\nimport './index.css'\r\n\r\nconst { Content } = Layout\r\nconst { MonthPicker } = DatePicker\r\nconst { Option } = Select\r\nconst { Dragger } = Upload\r\n\r\ntype IProps = RouteComponentProps & {\r\n  username: string\r\n}\r\n\r\ninterface IState {\r\n  mode: 'edit' | 'add' | undefined\r\n  loading: boolean\r\n  data: IDocmVO | undefined\r\n  fileList: Array<UploadFile>\r\n  deptData: Array<any>\r\n  selectedDept: any\r\n}\r\n\r\nclass Edit extends React.Component<IProps, IState> {\r\n  form: React.ReactElement<FormProps> | undefined = undefined\r\n  constructor(props: IProps) {\r\n    super(props)\r\n    this.state = {\r\n      mode: undefined,\r\n      loading: true,\r\n      data: undefined,\r\n      fileList: [],\r\n      deptData: [],\r\n      selectedDept: undefined\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { match } = this.props\r\n    const id = match.params['id']\r\n    const mode = id ? 'edit' : 'add'\r\n    this.setState({ mode, loading: true }, () => {\r\n      if (mode === 'edit') {\r\n        Http.get(`/docm?id=${id}`)\r\n          .then(res => {\r\n            const data = res.data.data\r\n            this.form &&\r\n              this.form.props.form.setFieldsValue({\r\n                ...data,\r\n                contractTime: data.contractTime\r\n                  ? moment(data.contractTime, 'YYYY-MM-DD')\r\n                  : undefined,\r\n                credentialTime: data.credentialTime\r\n                  ? moment(data.credentialTime, 'YYYY-MM')\r\n                  : undefined\r\n              })\r\n            // 附件\r\n            const fileList = data.attachments.map(attachment => ({\r\n              uid: attachment.id,\r\n              size: 123,\r\n              name: attachment.docName,\r\n              type: 'image',\r\n              status: 'done',\r\n              response: {\r\n                status: '00000000',\r\n                data: [\r\n                  {\r\n                    docName: attachment.docName,\r\n                    docPath: attachment.docPath\r\n                  }\r\n                ]\r\n              }\r\n            }))\r\n            this.setState({\r\n              loading: false,\r\n              data,\r\n              fileList,\r\n              selectedDept: data.dept\r\n            })\r\n          })\r\n          .catch(error => {})\r\n      } else if (mode === 'add') {\r\n        this.form && this.form.props.form.setFieldsValue({ attachments: [] })\r\n        this.setState({ loading: false })\r\n      }\r\n      // 加载科室下拉选择器数据\r\n      Http.post(`/dept/list-all`)\r\n        .then(res => {\r\n          this.setState({ deptData: res.data.data })\r\n        })\r\n        .catch(err => {})\r\n    })\r\n  }\r\n\r\n  handleCancel = e => {\r\n    e.preventDefault()\r\n    this.props.history.push(`${modulePath}/list`)\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault()\r\n    this.form &&\r\n      this.form.props.form.validateFields((err, values) => {\r\n        if (!err) {\r\n          const params: IDocmVO = {\r\n            ...values,\r\n            contractTime: values['contractTime']\r\n              ? values['contractTime'].format('YYYY-MM-DD')\r\n              : undefined,\r\n            credentialTime: values['credentialTime']\r\n              ? values['credentialTime'].format('YYYY-MM')\r\n              : undefined\r\n          }\r\n          const { mode } = this.state\r\n          const method =\r\n            mode === 'add' ? Http.put : mode === 'edit' ? Http.post : undefined\r\n          method &&\r\n            method(`/docm`, params)\r\n              .then(res => {\r\n                if (res.data.status === '00000000') {\r\n                  this.props.history.push(`${modulePath}/list`)\r\n                } else {\r\n                  message.error(res.data.message)\r\n                }\r\n              })\r\n              .catch(err => {\r\n                message.info(err.response.data.msg)\r\n              })\r\n        }\r\n      })\r\n  }\r\n\r\n  handleDeptOnChange = id => {\r\n    const dept = { id }\r\n    this.form &&\r\n      this.form.props.form.setFieldsValue({\r\n        dept\r\n      })\r\n    this.setState({ selectedDept: dept })\r\n  }\r\n\r\n  handleChangeForFileDrag = info => {\r\n    const { status } = info.file\r\n    const { fileList } = info\r\n    if (status === 'uploading') {\r\n      // did nothing\r\n    }\r\n    if (status === 'done' || status === 'removed' || status === 'error') {\r\n      this.setState({ fileList: info.fileList })\r\n      this.setFormDataForFileDrag(fileList)\r\n    }\r\n    if (status === 'error') {\r\n      if (info.file.error.status === 403) {\r\n        message.error(`您没有上传权限`)\r\n      } else {\r\n        message.error(`${info.file.name} 上传失败`)\r\n      }\r\n    }\r\n  }\r\n\r\n  setFormDataForFileDrag = fileList => {\r\n    const setFieldsValue = this.form\r\n      ? this.form.props.form.setFieldsValue\r\n      : undefined\r\n    const attachments = fileList\r\n      .filter(file => {\r\n        return file.status === 'done'\r\n      })\r\n      .map(file => {\r\n        return {\r\n          docName: file.response.data[0]['docName'],\r\n          docPath: file.response.data[0]['docPath']\r\n        }\r\n      })\r\n    setFieldsValue && setFieldsValue({ attachments })\r\n  }\r\n\r\n  renderContent = () => {\r\n    const { mode, fileList, deptData, selectedDept } = this.state\r\n    return (\r\n      <Form {...formItemLayout}>\r\n        <Form.Item key={'dept'} label=\"所属科室\">\r\n          <Select\r\n            style={{ width: '100%' }}\r\n            placeholder={'请选择'}\r\n            value={selectedDept ? selectedDept.id : undefined}\r\n            showSearch\r\n            allowClear\r\n            optionFilterProp=\"children\"\r\n            filterOption={(input, option: any) =>\r\n              option.props.children\r\n                .toLowerCase()\r\n                .indexOf(input.toLowerCase()) >= 0\r\n            }\r\n            onChange={this.handleDeptOnChange}\r\n          >\r\n            {deptData.map(dept => (\r\n              <Option key={dept.id} value={dept.id}>\r\n                {dept.name}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item key={'upload'} label={'附件'}>\r\n          {fileList.length > 0 ? null : (\r\n            <Dragger\r\n              name={'files'}\r\n              multiple={false}\r\n              action={`${serverPath}/doc?xAuthToken=${sessionStorage.getItem(\r\n                'xAuthToken'\r\n              )}`}\r\n              onChange={this.handleChangeForFileDrag}\r\n            >\r\n              <p className=\"ant-upload-drag-icon\">\r\n                <Icon type=\"inbox\" />\r\n              </p>\r\n              <p className=\"ant-upload-text\">点击或拖拽文件到此区域上传</p>\r\n              <p className=\"ant-upload-hint\">\r\n                仅支持一次性单个文件，且文件类型为pdf\r\n              </p>\r\n            </Dragger>\r\n          )}\r\n          <Upload\r\n            fileList={fileList}\r\n            onChange={this.handleChangeForFileDrag}\r\n          ></Upload>\r\n        </Form.Item>\r\n        <Form.Item key={'submit'} {...tailFormItemLayout}>\r\n          <Button block type={'primary'} onClick={this.handleSubmit}>\r\n            {mode === 'add' ? '提交' : '保存'}\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Content>\r\n        <div\r\n          style={{\r\n            margin: '4px 4px 10px',\r\n            display: 'flex',\r\n            alignItems: 'center'\r\n          }}\r\n        >\r\n          <div style={{ margin: '4px', flex: 1 }}>\r\n            <span style={{ float: 'right' }}>\r\n              <Button type={'default'} onClick={this.handleCancel}>\r\n                返回\r\n              </Button>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div style={{ margin: '8px' }}>\r\n          <WrappedNormalForm\r\n            wrappedComponentRef={(form: React.ReactElement<FormProps>) => {\r\n              this.form = form\r\n            }}\r\n          />\r\n          {this.renderContent()}\r\n        </div>\r\n      </Content>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Edit)\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 20 },\r\n    sm: { span: 4 }\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 20 },\r\n    sm: { span: 16 }\r\n  }\r\n}\r\n\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 2,\r\n      offset: 0\r\n    },\r\n    sm: {\r\n      span: 2,\r\n      offset: 4\r\n    }\r\n  }\r\n}\r\n\r\ninterface FormProps extends FormComponentProps {}\r\n\r\ninterface FormState {}\r\n\r\nclass NormalForm extends React.Component<FormProps, FormState> {\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form\r\n    return (\r\n      <Form {...formItemLayout}>\r\n        {getFieldDecorator('id')(<Input hidden />)}\r\n        <Form.Item key={'projectName'} label=\"合同名称\">\r\n          {getFieldDecorator('projectName', {\r\n            rules: [{ required: true, message: '请输入合同名称' }]\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item key={'projectType'} label=\"合同类型\">\r\n          {getFieldDecorator('projectType', {\r\n            rules: [{ required: false, message: '请输入合同类型' }]\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item key={'company'} label=\"公司名称\">\r\n          {getFieldDecorator('company', {\r\n            rules: [{ required: false, message: '请输入公司名称' }]\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item key={'contractNum'} label=\"合同号\">\r\n          {getFieldDecorator('contractNum', {\r\n            rules: [{ required: false, message: '请输入合同号' }]\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item key={'contractTime'} label=\"合同签订时间\">\r\n          {getFieldDecorator('contractTime', {\r\n            rules: [{ required: false, message: '请输入合同签订时间' }]\r\n          })(<DatePicker format={'YYYY-MM-DD'} />)}\r\n        </Form.Item>\r\n        <Form.Item key={'credentialNum'} label=\"凭证号\">\r\n          {getFieldDecorator('credentialNum', {\r\n            rules: [{ required: false, message: '请输入凭证号' }]\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item key={'credentialTime'} label=\"凭证时间\">\r\n          {getFieldDecorator('credentialTime', {\r\n            rules: [{ required: false, message: '请输入凭证时间' }]\r\n          })(<MonthPicker format={'YYYY-MM'} />)}\r\n        </Form.Item>\r\n        <Form.Item key={'money'} label=\"金额\">\r\n          {getFieldDecorator('money', {\r\n            rules: [{ required: false, message: '请输入金额' }]\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        {/** 所属科室 */}\r\n        {getFieldDecorator('dept')}\r\n        {/* 上传附件 */}\r\n        {getFieldDecorator('attachments')}\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nconst WrappedNormalForm = Form.create({\r\n  name: 'normal_login'\r\n})(NormalForm)\r\n","import React from 'react'\r\nimport { Layout, Button, Form, Spin, Upload } from 'antd'\r\nimport { UploadFile } from 'antd/lib/upload/interface'\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\r\nimport IDocmVO from '../type'\r\nimport Http from '../../../../common/http'\r\nimport { modulePath } from '../index'\r\n\r\nconst { Content } = Layout\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 20 },\r\n    sm: { span: 4 }\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 20 },\r\n    sm: { span: 16 }\r\n  }\r\n}\r\n\r\n// const tailFormItemLayout = {\r\n//   wrapperCol: {\r\n//     xs: {\r\n//       span: 2,\r\n//       offset: 0\r\n//     },\r\n//     sm: {\r\n//       span: 2,\r\n//       offset: 4\r\n//     }\r\n//   }\r\n// }\r\n\r\ntype IProps = RouteComponentProps & {}\r\n\r\ninterface IState {\r\n  loading: boolean\r\n  data: IDocmVO | undefined\r\n  fileList: Array<UploadFile>\r\n}\r\n\r\nclass View extends React.Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props)\r\n    this.state = {\r\n      loading: true,\r\n      data: undefined,\r\n      fileList: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { match } = this.props\r\n    const id = match.params['id']\r\n    this.setState({ loading: true }, () => {\r\n      Http.get(`/docm?id=${id}`)\r\n        .then(res => {\r\n          const data = res.data.data\r\n          const fileList = data.attachments.map(attachment => ({\r\n            uid: attachment.id,\r\n            size: 123,\r\n            name: attachment.docName,\r\n            type: 'image',\r\n            status: 'done',\r\n            response: {\r\n              status: '00000000',\r\n              data: [\r\n                {\r\n                  docName: attachment.docName,\r\n                  docPath: attachment.docPath\r\n                }\r\n              ]\r\n            }\r\n          }))\r\n          this.setState({ loading: false, data, fileList })\r\n        })\r\n        .catch(error => {})\r\n    })\r\n  }\r\n\r\n  handleCancel = e => {\r\n    e.preventDefault()\r\n    this.props.history.push(`${modulePath}/list`)\r\n  }\r\n\r\n  renderContent() {\r\n    const { loading, data, fileList } = this.state\r\n    return !loading && data ? (\r\n      <Form {...formItemLayout}>\r\n        <Form.Item key={'projectName'} label=\"项目名称\">\r\n          {data.projectName}\r\n        </Form.Item>\r\n        <Form.Item key={'projectType'} label=\"项目类型\">\r\n          {data.projectType}\r\n        </Form.Item>\r\n        <Form.Item key={'company'} label=\"公司名称\">\r\n          {data.company}\r\n        </Form.Item>\r\n        <Form.Item key={'contractNum'} label=\"合同号\">\r\n          {data.contractNum}\r\n        </Form.Item>\r\n        <Form.Item key={'contractTime'} label=\"合同签订时间\">\r\n          {data.contractTime}\r\n        </Form.Item>\r\n        <Form.Item key={'credentialNum'} label=\"凭证号\">\r\n          {data.credentialNum}\r\n        </Form.Item>\r\n        <Form.Item key={'credentialTime'} label=\"凭证时间\">\r\n          {data.credentialTime}\r\n        </Form.Item>\r\n        <Form.Item key={'money'} label=\"金额\">\r\n          {data.money}\r\n        </Form.Item>\r\n        <Form.Item key={'dept'} label=\"科室\">\r\n          {data.dept ? data.dept.name : ''}\r\n        </Form.Item>\r\n        <Form.Item key={'files'} label=\"附件\">\r\n          <Upload\r\n            fileList={fileList}\r\n            showUploadList={{ showPreviewIcon: true, showRemoveIcon: false }}\r\n          />\r\n        </Form.Item>\r\n      </Form>\r\n    ) : (\r\n      <Spin size={'large'} />\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Content>\r\n        <div\r\n          style={{\r\n            margin: '4px 4px 10px',\r\n            display: 'flex',\r\n            alignItems: 'center'\r\n          }}\r\n        >\r\n          <div style={{ margin: '4px', flex: 1 }}>\r\n            <span style={{ float: 'right' }}>\r\n              <Button\r\n                className={'ele-operation'}\r\n                type={'primary'}\r\n                onClick={event => {\r\n                  event.preventDefault()\r\n                  const { match } = this.props\r\n                  const id = match.params['id']\r\n                  this.props.history.push(`${modulePath}/edit/${id}`)\r\n                }}\r\n              >\r\n                编辑\r\n              </Button>\r\n              <Button type={'default'} onClick={this.handleCancel}>\r\n                返回\r\n              </Button>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div style={{ margin: '8px' }}>{this.renderContent()}</div>\r\n      </Content>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(View)\r\n","import React from 'react'\r\nimport { Layout, Breadcrumb } from 'antd'\r\nimport {\r\n  HashRouter,\r\n  Redirect,\r\n  Switch,\r\n  withRouter,\r\n  RouteComponentProps\r\n} from 'react-router-dom'\r\nimport PrivateRoute from '../../../common/route'\r\nimport ListCmpt from './list'\r\nimport EditCmpt from './edit'\r\nimport ViewCmpt from './view'\r\n\r\nexport const modulePath = `/main/docm`\r\n\r\nconst { Sider } = Layout\r\n\r\ntype IProps = RouteComponentProps & {}\r\n\r\ninterface IState {}\r\n\r\nclass Docm extends React.Component<IProps, IState> {\r\n  render() {\r\n    const path = this.props.location.pathname\r\n    let curItem\r\n    if (path.indexOf(`${modulePath}/add`) >= 0) {\r\n      curItem = '新增'\r\n    } else if (path.indexOf(`${modulePath}/edit`) >= 0) {\r\n      curItem = '编辑'\r\n    } else if (path.indexOf(`${modulePath}/view`) >= 0) {\r\n      curItem = '详情'\r\n    } else if (path.indexOf(`${modulePath}/list`) >= 0) {\r\n      curItem = '查询'\r\n    }\r\n    return (\r\n      <Layout>\r\n        {/* 包裹内容的灰色边框，需要Sider的协助 */}\r\n        <Sider width={0}></Sider>\r\n        <Layout>\r\n          <div className=\"layout-content\">\r\n            <div className=\"layout-content-inner\">\r\n              <Breadcrumb>\r\n                <Breadcrumb.Item>当前位置：</Breadcrumb.Item>\r\n                <Breadcrumb.Item\r\n                  onClick={() => this.props.history.push(`${modulePath}`)}\r\n                >\r\n                  我的项目\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>{curItem}</Breadcrumb.Item>\r\n              </Breadcrumb>\r\n              <HashRouter>\r\n                <Switch>\r\n                  <Redirect\r\n                    path={modulePath}\r\n                    exact={true}\r\n                    to={`${modulePath}/list`}\r\n                  />\r\n                  <PrivateRoute\r\n                    path={`${modulePath}/list`}\r\n                    permission={['DOCM_LIST_VIEW', 'DOCM_LIST_DEPT_VIEW']}\r\n                    component={ListCmpt}\r\n                  />\r\n                  <PrivateRoute\r\n                    path={`${modulePath}/edit/:id`}\r\n                    permission={'DOCM_EDIT_OPER'}\r\n                    component={EditCmpt}\r\n                  />\r\n                  <PrivateRoute\r\n                    path={`${modulePath}/add`}\r\n                    permission={'DOCM_ADD_OPER'}\r\n                    component={EditCmpt}\r\n                  />\r\n                  <PrivateRoute\r\n                    path={`${modulePath}/view/:id`}\r\n                    permission={'DOCM_DETAIL_VIEW'}\r\n                    component={ViewCmpt}\r\n                  />\r\n                  <Redirect\r\n                    path={`${modulePath}/**`}\r\n                    to={`${modulePath}/list`}\r\n                  />\r\n                </Switch>\r\n              </HashRouter>\r\n            </div>\r\n          </div>\r\n        </Layout>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Docm)\r\n","import React from 'react'\r\nimport { Layout, Form, Breadcrumb } from 'antd'\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\r\nimport { UserContext } from '../../../index'\r\nimport './index.css'\r\n\r\nconst { Content } = Layout\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 20 },\r\n    sm: { span: 4 }\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 20 },\r\n    sm: { span: 16 }\r\n  }\r\n}\r\n\r\n// const tailFormItemLayout = {\r\n//   wrapperCol: {\r\n//     xs: {\r\n//       span: 2,\r\n//       offset: 0\r\n//     },\r\n//     sm: {\r\n//       span: 2,\r\n//       offset: 4\r\n//     }\r\n//   }\r\n// }\r\n\r\ntype IProps = RouteComponentProps & {}\r\n\r\ninterface IState {}\r\n\r\nclass Info extends React.Component<IProps, IState> {\r\n  renderContent() {\r\n    return (\r\n      <UserContext.Consumer>\r\n        {userInfo => {\r\n          return (\r\n            <Form {...formItemLayout}>\r\n              <Form.Item key={'username'} label=\"用户名\">\r\n                {userInfo.username}\r\n              </Form.Item>\r\n              <Form.Item key={'phone'} label=\"手机\">\r\n                {userInfo.phone}\r\n              </Form.Item>\r\n              <Form.Item key={'email'} label=\"邮箱\">\r\n                {userInfo.email}\r\n              </Form.Item>\r\n              <Form.Item key={'dept'} label=\"科室\">\r\n                {userInfo.dept ? userInfo.dept.name : ''}\r\n              </Form.Item>\r\n            </Form>\r\n          )\r\n        }}\r\n      </UserContext.Consumer>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"layout-content\">\r\n        <div className=\"layout-content-inner\">\r\n          <Breadcrumb separator={'>'}>\r\n            <Breadcrumb.Item>当前位置：</Breadcrumb.Item>\r\n            <Breadcrumb.Item>我的账号</Breadcrumb.Item>\r\n            <Breadcrumb.Item>账号信息</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n          <Content>\r\n            <div className=\"view-page-content\">{this.renderContent()}</div>\r\n          </Content>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Info)\r\n","import React from 'react'\r\nimport { Layout, Button, message, Form, Input, Breadcrumb } from 'antd'\r\nimport { FormComponentProps } from 'antd/lib/form'\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\r\nimport { UserContext } from '../../../index'\r\nimport Http from '../../../../common/http'\r\nimport md5 from 'js-md5'\r\nimport { modulePath } from '../index'\r\n\r\nconst { Content } = Layout\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 20 },\r\n    sm: { span: 4 }\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 20 },\r\n    sm: { span: 16 }\r\n  }\r\n}\r\n\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 2,\r\n      offset: 0\r\n    },\r\n    sm: {\r\n      span: 2,\r\n      offset: 4\r\n    }\r\n  }\r\n}\r\n\r\ntype IProps = RouteComponentProps & {}\r\n\r\ninterface IState {\r\n  id: string | undefined // 为了设置form表单的id字段\r\n}\r\n\r\nclass ModPwd extends React.Component<IProps, IState> {\r\n  form: React.ReactElement<FormProps> | undefined = undefined\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      id: undefined\r\n    }\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault()\r\n    this.form &&\r\n      this.form.props.form.validateFields((err, fielldValues) => {\r\n        if (!err) {\r\n          const { id, oldPassword, password } = fielldValues\r\n          const values = {\r\n            id,\r\n            oldPassword: md5(oldPassword),\r\n            password: md5(password)\r\n          }\r\n          Http.post('/account/mod-pwd', values)\r\n            .then(res => {\r\n              if (res.data.status === '00000000') {\r\n                message.success('修改成功，请重新登录')\r\n                sessionStorage.removeItem('userId')\r\n                this.props.history.push(`${modulePath}/mod-pwd`)\r\n              } else {\r\n                message.error(res.data.message)\r\n              }\r\n            })\r\n            .catch(err => {\r\n              message.error(err.response.data.message)\r\n            })\r\n        }\r\n      })\r\n  }\r\n\r\n  renderContent() {\r\n    return (\r\n      <UserContext.Consumer>\r\n        {userInfo => {\r\n          const { id } = userInfo\r\n          if (!this.state.id) {\r\n            this.setState({ id })\r\n          } else {\r\n            this.form && this.form.props.form.setFieldsValue({ id })\r\n          }\r\n          return (\r\n            <div>\r\n              <WrappedNormalForm\r\n                wrappedComponentRef={(form: React.ReactElement<FormProps>) => {\r\n                  this.form = form\r\n                }}\r\n              />\r\n              <Form {...tailFormItemLayout}>\r\n                <Form.Item>\r\n                  <Button block type={'primary'} onClick={this.handleSubmit}>\r\n                    {'提交'}\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n          )\r\n        }}\r\n      </UserContext.Consumer>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"layout-content\">\r\n        <div className=\"layout-content-inner\">\r\n          <Breadcrumb separator={'>'}>\r\n            <Breadcrumb.Item>当前位置：</Breadcrumb.Item>\r\n            <Breadcrumb.Item>我的账号</Breadcrumb.Item>\r\n            <Breadcrumb.Item>修改密码</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n          <Content>\r\n            <div className=\"view-page-content\">{this.renderContent()}</div>\r\n          </Content>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(ModPwd)\r\n\r\ninterface FormProps extends FormComponentProps {}\r\n\r\ninterface FormState {}\r\n\r\nclass NormalForm extends React.Component<FormProps, FormState> {\r\n  render() {\r\n    const { getFieldDecorator, getFieldValue } = this.props.form\r\n    return (\r\n      <Form {...formItemLayout}>\r\n        {getFieldDecorator('id')(<Input hidden />)}\r\n        <Form.Item key={'oldPassword'} label=\"原密码\">\r\n          {getFieldDecorator('oldPassword', {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: '请输入旧密码',\r\n                pattern: /^.{4,16}$/\r\n              }\r\n            ],\r\n            validateTrigger: 'onBlur'\r\n          })(<Input type={'password'} />)}\r\n        </Form.Item>\r\n        <Form.Item key={'password'} label=\"新密码\">\r\n          {getFieldDecorator('password', {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: '密码为4~16位任意字符',\r\n                pattern: /^.{4,16}$/\r\n              }\r\n            ],\r\n            validateTrigger: 'onBlur'\r\n          })(<Input type={'password'} placeholder={'请输入密码'} />)}\r\n        </Form.Item>\r\n        <Form.Item key={'confirmPassword'} label=\"确认密码\">\r\n          {getFieldDecorator('confirmPassword', {\r\n            rules: [\r\n              {\r\n                message: '两次输入密码不一致',\r\n                validator: async (rule, value, callback, source, options) => {\r\n                  const password = getFieldValue('password')\r\n                  if (password !== value) {\r\n                    callback('error')\r\n                  } else {\r\n                    callback()\r\n                  }\r\n                }\r\n              }\r\n            ],\r\n            validateTrigger: 'onBlur'\r\n          })(<Input type={'password'} placeholder={'请再次输入密码'} />)}\r\n        </Form.Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nconst WrappedNormalForm = Form.create({\r\n  name: 'mod_pwd'\r\n})(NormalForm)\r\n","import React from 'react'\r\nimport './index.css'\r\nimport { Layout, Menu, Icon } from 'antd'\r\nimport {\r\n  HashRouter,\r\n  Switch,\r\n  withRouter,\r\n  RouteComponentProps\r\n} from 'react-router-dom'\r\nimport PrivateRoute from '../../../common/route'\r\nimport Info from './info'\r\nimport ModPwd from './mod-pwd'\r\n\r\nexport const modulePath = `/main/account`\r\n\r\nconst { Sider } = Layout\r\n\r\nconst menusKey = ['/info', '/mod-pwd']\r\n\r\ntype IProps = RouteComponentProps & {}\r\n\r\ninterface IState {\r\n  collapsed: boolean\r\n  selectedKeys: Array<string>\r\n}\r\n\r\nclass AccountSider extends React.Component<IProps, IState> {\r\n  state: IState = {\r\n    collapsed: false,\r\n    selectedKeys: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    const key = this.fetchDefaultSelectedKey()\r\n    this.handleOnSelect({ key })\r\n  }\r\n\r\n  fetchDefaultSelectedKey() {\r\n    const { pathname } = this.props.location\r\n    const selectedKeys = menusKey.filter(key => {\r\n      return pathname.indexOf(key) >= 0\r\n    })\r\n    if (selectedKeys.length < 1) {\r\n      return menusKey[0]\r\n    }\r\n    return selectedKeys[0]\r\n  }\r\n\r\n  handleOnSelect = param => {\r\n    const { key } = param\r\n    this.setState({ selectedKeys: [key] })\r\n    this.props.history.push(`${modulePath}${key}`)\r\n  }\r\n\r\n  toggleCollapsed = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { selectedKeys } = this.state\r\n    return (\r\n      <Layout>\r\n        <Sider\r\n          width={180}\r\n          theme=\"dark\"\r\n          collapsed={this.state.collapsed}\r\n          collapsedWidth={80}\r\n        >\r\n          <span className=\"aside-top\" onClick={this.toggleCollapsed}>\r\n            <Icon\r\n              style={{ margin: '0 0 0 10px' }}\r\n              type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\r\n            />\r\n          </span>\r\n          <Menu\r\n            selectedKeys={selectedKeys}\r\n            mode=\"inline\"\r\n            theme=\"dark\"\r\n            onSelect={this.handleOnSelect}\r\n          >\r\n            <Menu.Item className=\"aside-item\" key=\"/info\">\r\n              <Icon type=\"user\" />\r\n              <span>账号信息</span>\r\n            </Menu.Item>\r\n            <Menu.Item className=\"aside-item\" key=\"/mod-pwd\">\r\n              <Icon type=\"safety\" />\r\n              <span>修改密码</span>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n        <Layout>\r\n          <HashRouter>\r\n            <Switch>\r\n              <PrivateRoute path={`${modulePath}/info`} component={Info} />\r\n              <PrivateRoute path={`${modulePath}/mod-pwd`} component={ModPwd} />\r\n            </Switch>\r\n          </HashRouter>\r\n        </Layout>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(AccountSider)\r\n","import React from 'react'\r\nimport { Select, Spin } from 'antd'\r\nimport debounce from 'lodash/debounce'\r\nimport Http from '../../http'\r\n\r\nconst { Option } = Select\r\n\r\ninterface IProps {\r\n  onChange?: (value: string) => void\r\n}\r\n\r\ninterface IState {\r\n  /**\r\n   * 查询条件与排序\r\n   */\r\n  param: {\r\n    conditions: any\r\n    sorters: any\r\n  }\r\n  data: Array<{ text: string; value: string }>\r\n  value: Array<any>\r\n  loading: boolean\r\n}\r\n\r\nclass UserSelector extends React.Component<IProps, IState> {\r\n  constructor(props) {\r\n    super(props)\r\n    this.fetchUser = debounce(this.fetchUser, 800)\r\n    this.state = {\r\n      param: {\r\n        conditions: { ranges: {} },\r\n        sorters: {}\r\n      },\r\n      data: [],\r\n      value: [],\r\n      loading: false\r\n    }\r\n  }\r\n\r\n  fetchUser = value => {\r\n    const queryRequest = {\r\n      pageSize: 100,\r\n      current: 1,\r\n      conditions: { keywordUsername: value },\r\n      sorters: { username: 'asc' }\r\n    }\r\n    this.setState({ data: [], loading: true })\r\n    setTimeout(() => {\r\n      Http.post(`/user/search`, queryRequest).then(res => {\r\n        let data = []\r\n        if (\r\n          res.data.status === '00000000' &&\r\n          res.data.data.content.length > 0\r\n        ) {\r\n          data = res.data.data.content.map(account => ({\r\n            text: account.username,\r\n            value: account.username\r\n          }))\r\n        }\r\n        this.setState({ data, loading: false })\r\n      })\r\n    }, 300)\r\n  }\r\n\r\n  handleChange = value => {\r\n    const { onChange } = this.props\r\n    this.setState({\r\n      value,\r\n      data: [],\r\n      loading: false\r\n    })\r\n    onChange && onChange(value)\r\n  }\r\n\r\n  render() {\r\n    const { loading, data, value } = this.state\r\n    return (\r\n      <Select\r\n        value={value}\r\n        placeholder=\"搜索用户\"\r\n        notFoundContent={loading ? <Spin size=\"small\" /> : null}\r\n        filterOption={false}\r\n        showSearch\r\n        onSearch={this.fetchUser}\r\n        onChange={this.handleChange}\r\n        showArrow={false}\r\n        allowClear\r\n        style={{ width: '280px' }}\r\n        // suffixIcon={<Icon style={{ fontSize: '16px' }} type=\"search\" />}\r\n      >\r\n        {data.map(d => (\r\n          <Option key={d.value}>{d.text}</Option>\r\n        ))}\r\n      </Select>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UserSelector\r\n","import React from 'react'\r\nimport {\r\n  Layout,\r\n  Select,\r\n  Button,\r\n  Table,\r\n  Empty,\r\n  message,\r\n  Modal,\r\n  Tooltip,\r\n  Radio,\r\n  Collapse,\r\n  Form\r\n} from 'antd'\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport IOperLogVO from '../type'\r\n// import DateRange from './daterange'\r\nimport Http, { QueryResult, QueryRequest } from '../../../../common/http'\r\nimport UserSelector from '../../../../common/selector/user'\r\nimport { modulePath } from '../index'\r\nimport { toLine } from '../../../../common/util'\r\nimport { UserContext } from '../../../index'\r\nimport './index.css'\r\n\r\nconst { Content } = Layout\r\nconst { Option } = Select\r\nconst { Panel } = Collapse\r\n\r\ntype IProps = RouteComponentProps & {}\r\n\r\ninterface IState {\r\n  loading: boolean\r\n  selectedRowKeys: string[] | number[]\r\n  /**\r\n   * 模块名称下拉选数据\r\n   */\r\n  modules: Array<string>\r\n  /**\r\n   * 查询结果\r\n   */\r\n  data: QueryResult<IOperLogVO>\r\n  pageSize: number | undefined\r\n  current: number | undefined\r\n  /**\r\n   * 查询条件与排序\r\n   */\r\n  param: {\r\n    conditions: any\r\n    sorters: any\r\n  }\r\n  /**\r\n   * 展开筛选折叠面板key\r\n   */\r\n  activeKey: string | undefined\r\n  /**\r\n   * 创建时间范围的选项值\r\n   */\r\n  rangeOptionValue: string | undefined\r\n  /**\r\n   * 操作名称下拉选数据\r\n   */\r\n  operNames: Array<string>\r\n}\r\n\r\nclass List extends React.Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props)\r\n    this.state = {\r\n      loading: true,\r\n      selectedRowKeys: [],\r\n      modules: [],\r\n      data: {\r\n        total: undefined,\r\n        content: []\r\n      },\r\n      pageSize: 10,\r\n      current: 1,\r\n      param: {\r\n        conditions: { ranges: {} },\r\n        sorters: {}\r\n      },\r\n      activeKey: 'searchPanel',\r\n      rangeOptionValue: 'none',\r\n      operNames: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.handleListChange()\r\n    this.loadOperNames()\r\n  }\r\n\r\n  handleListChange = () => {\r\n    this.setState({ loading: true }, () => {\r\n      const { pageSize, current, param } = this.state\r\n      const queryRequest: QueryRequest = {\r\n        pageSize,\r\n        current,\r\n        ...param\r\n      }\r\n      Http.post(`/operlog/list`, queryRequest)\r\n        .then(res => {\r\n          this.setState({ loading: false, data: res.data.data })\r\n        })\r\n        .catch(error => {\r\n          this.setState({ loading: false })\r\n        })\r\n    })\r\n  }\r\n\r\n  loadOperNames = () => {\r\n    Http.get(`/operlog/name/list-all`)\r\n      .then(res => {\r\n        this.setState({ operNames: res.data.data })\r\n      })\r\n      .catch(err => {\r\n        message.error('加载操作名称数据失败')\r\n      })\r\n  }\r\n\r\n  handleSelectChangeForOperator = value => {\r\n    const { conditions } = this.state.param\r\n    conditions['operator'] = value\r\n    this.setState({ current: 1 })\r\n    this.handleListChange()\r\n  }\r\n\r\n  handleSelectChangeForOperName = value => {\r\n    const { conditions } = this.state.param\r\n    conditions['name'] = value\r\n    this.setState({ current: 1 })\r\n    this.handleListChange()\r\n  }\r\n\r\n  handleDeleteOper = async (ids: Array<string> | Array<number>) => {\r\n    Modal.confirm({\r\n      title: '确定删除?',\r\n      okText: '确认',\r\n      cancelText: '取消',\r\n      onOk: async () => {\r\n        let queryString = ''\r\n        ids.forEach(id => (queryString = queryString.concat(`ids=${id}&`)))\r\n        await Http.delete(\r\n          `/operlog?${queryString.substring(0, queryString.length - 1)}`\r\n        )\r\n        message.success('删除成功')\r\n        this.handleListChange()\r\n      }\r\n    })\r\n  }\r\n\r\n  handleCreateTimeRangeChange = e => {\r\n    let value = e.target.value\r\n    let createTimeRange\r\n    if (value !== 'none') {\r\n      let start\r\n      switch (value) {\r\n        case 'a':\r\n          start = moment()\r\n            .add('day', -3)\r\n            .format('YYYY-MM-DD HH:mm:ss')\r\n          break\r\n        case 'b':\r\n          start = moment()\r\n            .add('day', -7)\r\n            .format('YYYY-MM-DD HH:mm:ss')\r\n          break\r\n        case 'c':\r\n          start = moment()\r\n            .add('month', -1)\r\n            .format('YYYY-MM-DD HH:mm:ss')\r\n          break\r\n        case 'd':\r\n          start = moment()\r\n            .add('month', -6)\r\n            .format('YYYY-MM-DD HH:mm:ss')\r\n          break\r\n      }\r\n      createTimeRange = {\r\n        start,\r\n        end: moment().format('YYYY-MM-DD HH:mm:ss')\r\n      }\r\n    } else {\r\n      createTimeRange = undefined\r\n    }\r\n    const { ranges } = this.state.param.conditions\r\n    ranges['createTime'] = createTimeRange\r\n    this.setState({ rangeOptionValue: value, current: 1 })\r\n    this.handleListChange()\r\n  }\r\n\r\n  renderPanel() {\r\n    const { rangeOptionValue } = this.state\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        span: 2,\r\n        offset: 0\r\n      },\r\n      wrapperCol: {\r\n        span: 16,\r\n        offset: 0\r\n      }\r\n    }\r\n    return (\r\n      <div>\r\n        <Form {...formItemLayout}>\r\n          <Form.Item label={'操作时间'}>\r\n            <div style={{ display: 'flex', alignItems: 'center' }}>\r\n              <div>\r\n                <Radio.Group\r\n                  value={rangeOptionValue}\r\n                  onChange={this.handleCreateTimeRangeChange}\r\n                >\r\n                  <Radio.Button\r\n                    className=\"radio-option\"\r\n                    key=\"none\"\r\n                    value=\"none\"\r\n                  >\r\n                    不限\r\n                  </Radio.Button>\r\n                  <Radio.Button className=\"radio-option\" key=\"a\" value=\"a\">\r\n                    近三天\r\n                  </Radio.Button>\r\n                  <Radio.Button className=\"radio-option\" key=\"b\" value=\"b\">\r\n                    近一周\r\n                  </Radio.Button>\r\n                  <Radio.Button className=\"radio-option\" key=\"c\" value=\"c\">\r\n                    近一月\r\n                  </Radio.Button>\r\n                  <Radio.Button className=\"radio-option\" key=\"d\" value=\"d\">\r\n                    近半年\r\n                  </Radio.Button>\r\n                </Radio.Group>\r\n              </div>\r\n              {/* <div><DateRange /></div> */}\r\n            </div>\r\n          </Form.Item>\r\n          <Form.Item label=\"操作者\">\r\n            <UserSelector onChange={this.handleSelectChangeForOperator} />\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderSearchBar() {\r\n    const { activeKey, operNames } = this.state\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        span: 4,\r\n        offset: 0\r\n      },\r\n      wrapperCol: {\r\n        span: 8,\r\n        offset: 0\r\n      }\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ display: 'flex', alignItems: 'flex-start' }}>\r\n          <div style={{ flex: '1' }}>\r\n            <Form {...formItemLayout}>\r\n              <Form.Item label={'操作名称'}>\r\n                <Select\r\n                  placeholder={'请选择'}\r\n                  style={{ width: '280px' }}\r\n                  allowClear\r\n                  showArrow={true}\r\n                  onChange={this.handleSelectChangeForOperName}\r\n                >\r\n                  {operNames.map(operName => (\r\n                    <Option key={operName} value={operName}>{operName}</Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n          <div style={{ flex: '1' }}>\r\n            <div style={{ float: 'right' }}>\r\n              <Button\r\n                type={'link'}\r\n                onClick={() =>\r\n                  this.setState({\r\n                    activeKey: activeKey ? undefined : 'searchPanel'\r\n                  })\r\n                }\r\n              >\r\n                {activeKey ? '收起筛选' : '展开筛选'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Collapse bordered={false} activeKey={activeKey}>\r\n          <Panel\r\n            key=\"searchPanel\"\r\n            style={{ border: 0 }}\r\n            showArrow={false}\r\n            header=\"\"\r\n          >\r\n            {this.renderPanel()}\r\n          </Panel>\r\n        </Collapse>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderButtonBar() {\r\n    const { selectedRowKeys } = this.state\r\n    return (\r\n      <UserContext.Consumer>\r\n        {userInfo => {\r\n          const DOCM_ADD_OPER_permission = userInfo['permissions'].find(\r\n            perm => perm.id === 'DOCM_ADD_OPER'\r\n          )\r\n          const DOCM_DELETE_OPER_permission = userInfo['permissions'].find(\r\n            perm => perm.id === 'DOCM_DELETE_OPER'\r\n          )\r\n          return (\r\n            <div style={{ margin: '4px', flex: 1 }}>\r\n              <span style={{ float: 'right' }}>\r\n                {DOCM_ADD_OPER_permission && (\r\n                  <Button\r\n                    className=\"ele-operation\"\r\n                    type=\"primary\"\r\n                    onClick={() => {\r\n                      this.props.history.push(`${modulePath}/add`)\r\n                    }}\r\n                  >\r\n                    新建\r\n                  </Button>\r\n                )}\r\n                {DOCM_DELETE_OPER_permission && (\r\n                  <Button\r\n                    type=\"ghost\"\r\n                    disabled={selectedRowKeys.length < 1}\r\n                    onClick={() => {\r\n                      this.handleDeleteOper(selectedRowKeys)\r\n                    }}\r\n                  >\r\n                    批量删除\r\n                  </Button>\r\n                )}\r\n              </span>\r\n            </div>\r\n          )\r\n        }}\r\n      </UserContext.Consumer>\r\n    )\r\n  }\r\n\r\n  buildColumns() {\r\n    const colPropsfor10 = {\r\n      onHeaderCell: column => ({\r\n        style: { textAlign: 'center', width: '10%' }\r\n      }),\r\n      onCell: (record, rowIndex) => ({\r\n        style: {\r\n          textAlign: 'center',\r\n          overflow: 'hidden',\r\n          textOverflow: 'ellipsis',\r\n          whiteSpace: 'nowrap',\r\n          cursor: 'pointer'\r\n        }\r\n      }),\r\n      render: text => (\r\n        <Tooltip placement=\"topLeft\" title={text}>\r\n          {text}\r\n        </Tooltip>\r\n      )\r\n    }\r\n    const columns = [\r\n      {\r\n        title: '序号',\r\n        key: 'index',\r\n        render: (text, record, index) => {\r\n          return index + 1\r\n        },\r\n        onHeaderCell: column => ({\r\n          style: { textAlign: 'center', width: '5%' }\r\n        }),\r\n        onCell: (record, rowIndex) => ({ style: { textAlign: 'center' } })\r\n      },\r\n      {\r\n        ...colPropsfor10,\r\n        title: '操作名称',\r\n        dataIndex: 'name',\r\n        key: 'name'\r\n      },\r\n      {\r\n        ...colPropsfor10,\r\n        title: '模块名称',\r\n        dataIndex: 'module',\r\n        key: 'module'\r\n      },\r\n      {\r\n        ...colPropsfor10,\r\n        title: '操作者',\r\n        dataIndex: 'operator',\r\n        key: 'operator'\r\n      },\r\n      {\r\n        ...colPropsfor10,\r\n        title: '操作结果',\r\n        dataIndex: 'result',\r\n        key: 'result',\r\n        onHeaderCell: column => ({\r\n          style: { textAlign: 'center', width: '5%' }\r\n        })\r\n      },\r\n      {\r\n        ...colPropsfor10,\r\n        title: '操作时间',\r\n        dataIndex: 'createTime',\r\n        key: 'createTime',\r\n        render: (text, record, index) => {\r\n          return moment(record.createTime).format('YYYY-MM-DD HH:mm:ss')\r\n        },\r\n        sorter: (a, b) => {\r\n          return a.id - b.id\r\n        }\r\n      }\r\n    ]\r\n    return columns\r\n  }\r\n\r\n  renderTable() {\r\n    const { loading, data, pageSize, current, selectedRowKeys } = this.state\r\n    const { total, content } = data\r\n    return (\r\n      <UserContext.Consumer>\r\n        {userInfo => {\r\n          const DOCM_DELETE_OPER_permission = userInfo['permissions'].find(\r\n            perm => perm.id === 'DOCM_DELETE_OPER'\r\n          )\r\n          const rowSelection = DOCM_DELETE_OPER_permission\r\n            ? {\r\n                columnWidth: '30px',\r\n                selectedRowKeys,\r\n                onChange: selectedRowKeys => {\r\n                  this.setState({ selectedRowKeys })\r\n                }\r\n              }\r\n            : undefined\r\n          return loading || data.content.length > 0 ? (\r\n            <Table\r\n              rowKey={record => {\r\n                return record.id\r\n              }}\r\n              rowSelection={rowSelection}\r\n              columns={this.buildColumns()}\r\n              dataSource={content}\r\n              loading={loading}\r\n              onRow={(record, index) => {\r\n                return {\r\n                  onClick: event => {\r\n                    if (event.target['tagName'] !== 'TD') {\r\n                      return\r\n                    }\r\n                    this.props.history.push(`${modulePath}/view/${record.id}`)\r\n                  }\r\n                }\r\n              }}\r\n              size={'small'}\r\n              pagination={{\r\n                total,\r\n                current,\r\n                pageSize,\r\n                pageSizeOptions: ['10', '20', '50'],\r\n                showSizeChanger: true,\r\n                onShowSizeChange: (current, pageSize) => {\r\n                  this.setState({ current: 1, pageSize })\r\n                },\r\n                showTotal: total => {\r\n                  return `共 ${total} 条`\r\n                }\r\n              }}\r\n              onChange={(pagination, filters, sorter, extra) => {\r\n                const { param } = this.state\r\n                const { current, pageSize } = pagination\r\n                const { field, order } = sorter\r\n                param.sorters = {}\r\n                if (field && order) {\r\n                  param.sorters[toLine(field)] = fetchOrderDirection(order)\r\n                }\r\n                this.setState({ current, pageSize })\r\n                this.handleListChange()\r\n              }}\r\n            />\r\n          ) : (\r\n            <Empty description={'暂无内容'} />\r\n          )\r\n        }}\r\n      </UserContext.Consumer>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Content>\r\n        <div className=\"list-page\">\r\n          <div className=\"list-page-content\">\r\n            <div className=\"list-page-content-toolbar\">\r\n              <div className=\"list-page-content-toolbar-search\">\r\n                {this.renderSearchBar()}\r\n              </div>\r\n              <div className=\"list-page-content-toolbar-button\">\r\n                {this.renderButtonBar()}\r\n              </div>\r\n            </div>\r\n            <div className=\"list-page-content-table\">{this.renderTable()}</div>\r\n          </div>\r\n        </div>\r\n      </Content>\r\n    )\r\n  }\r\n}\r\n\r\nfunction fetchOrderDirection(order: string) {\r\n  if (order === 'descend') {\r\n    return 'desc'\r\n  } else {\r\n    return 'asc'\r\n  }\r\n}\r\n\r\nexport default withRouter(List)\r\n","import React from 'react'\r\nimport { Layout, Form, Spin, Button, Row, Col } from 'antd'\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\r\nimport IDocmVO from '../type'\r\nimport Http from '../../../../common/http'\r\nimport { modulePath } from '../index'\r\n\r\nconst { Content } = Layout\r\n\r\nconst viewItemLayout = {\r\n  span: 12,\r\n  offset: 0\r\n}\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    span: 4,\r\n    offset: 2\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n    offset: 0\r\n  }\r\n}\r\n\r\n// const tailFormItemLayout = {\r\n//   wrapperCol: {\r\n//     xs: {\r\n//       span: 2,\r\n//       offset: 0\r\n//     },\r\n//     sm: {\r\n//       span: 2,\r\n//       offset: 4\r\n//     }\r\n//   }\r\n// }\r\n\r\ntype IProps = RouteComponentProps & {}\r\n\r\ninterface IState {\r\n  loading: boolean\r\n  data: IDocmVO | undefined\r\n}\r\n\r\nclass View extends React.Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props)\r\n    this.state = {\r\n      loading: true,\r\n      data: undefined\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { match } = this.props\r\n    const id = match.params['id']\r\n    this.setState({ loading: true }, () => {\r\n      Http.get(`/operlog?id=${id}`)\r\n        .then(res => {\r\n          this.setState({ loading: false, data: res.data.data })\r\n        })\r\n        .catch(error => {})\r\n    })\r\n  }\r\n\r\n  handleCancel = e => {\r\n    e.preventDefault()\r\n    this.props.history.push(`${modulePath}/list`)\r\n  }\r\n\r\n  renderContent() {\r\n    const { loading, data } = this.state\r\n    return !loading && data ? (\r\n      <Form {...formItemLayout}>\r\n        <Row>\r\n          <Col {...viewItemLayout}>\r\n            <Form.Item key={'name'} label=\"操作名称\">\r\n              {data.name}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col {...viewItemLayout}>\r\n            <Form.Item key={'module'} label=\"模块名称\">\r\n              {data.module}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col {...viewItemLayout}>\r\n            <Form.Item key={'operator'} label=\"操作者\">\r\n              {data.operator}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col {...viewItemLayout}>\r\n            <Form.Item key={'createTime'} label=\"操作时间\">\r\n              {data.createTime}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col {...viewItemLayout}>\r\n            <Form.Item key={'result'} label=\"操作结果\">\r\n              {data.result}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col {...viewItemLayout}>\r\n            <Form.Item key={'ip'} label=\"远程IP\">\r\n              {data.ip}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col {...viewItemLayout}>\r\n            <Form.Item key={'userAgent'} label=\"UserAgent\">\r\n              {data.userAgent}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col {...viewItemLayout}>\r\n            <Form.Item key={'method'} label=\"HTTP方法\">\r\n              {data.method}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col {...viewItemLayout}>\r\n            <Form.Item key={'url'} label=\"URL\">\r\n              {data.url}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col {...viewItemLayout}>\r\n            <Form.Item key={'contractNum'} label=\"操作内容\">\r\n              {data.content}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col {...viewItemLayout}></Col>\r\n        </Row>\r\n      </Form>\r\n    ) : (\r\n      <Spin size={'large'} />\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Content>\r\n        <div\r\n          style={{\r\n            margin: '4px 4px 10px',\r\n            display: 'flex',\r\n            alignItems: 'center'\r\n          }}\r\n        >\r\n          <div style={{ margin: '4px', flex: 1 }}>\r\n            <span style={{ float: 'right' }}>\r\n              <Button type={'default'} onClick={this.handleCancel}>\r\n                返回\r\n              </Button>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div style={{ margin: '8px' }}>{this.renderContent()}</div>\r\n      </Content>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(View)\r\n","import React from 'react'\r\nimport { Layout, Breadcrumb } from 'antd'\r\nimport {\r\n  HashRouter,\r\n  Redirect,\r\n  Switch,\r\n  withRouter,\r\n  RouteComponentProps\r\n} from 'react-router-dom'\r\nimport PrivateRoute from '../../../common/route'\r\nimport ListCmpt from './list'\r\nimport ViewCmpt from './view'\r\n\r\nexport const modulePath = `/main/operlog`\r\n\r\nconst { Sider } = Layout\r\n\r\ntype IProps = RouteComponentProps & {}\r\n\r\ninterface IState {}\r\n\r\nclass Operlog extends React.Component<IProps, IState> {\r\n  render() {\r\n    const path = this.props.location.pathname\r\n    let curItem\r\n    if (path.indexOf(`${modulePath}/view`) >= 0) {\r\n      curItem = '详情'\r\n    } else if (path.indexOf(`${modulePath}/list`) >= 0) {\r\n      curItem = '查询'\r\n    }\r\n    return (\r\n      <Layout>\r\n        {/* 包裹内容的灰色边框，需要Sider的协助 */}\r\n        <Sider width={0}></Sider>\r\n        <Layout>\r\n          <div className=\"layout-content\">\r\n            <div className=\"layout-content-inner\">\r\n              <Breadcrumb>\r\n                <Breadcrumb.Item>当前位置：</Breadcrumb.Item>\r\n                <Breadcrumb.Item\r\n                  onClick={() => this.props.history.push(`${modulePath}`)}\r\n                >\r\n                  日志审计\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>{curItem}</Breadcrumb.Item>\r\n              </Breadcrumb>\r\n              <HashRouter>\r\n                <Switch>\r\n                  <Redirect\r\n                    path={modulePath}\r\n                    exact={true}\r\n                    to={`${modulePath}/list`}\r\n                  />\r\n                  <PrivateRoute\r\n                    path={`${modulePath}/list`}\r\n                    component={ListCmpt}\r\n                  />\r\n                  <PrivateRoute\r\n                    path={`${modulePath}/view/:id`}\r\n                    component={ViewCmpt}\r\n                  />\r\n                  <Redirect\r\n                    path={`${modulePath}/**`}\r\n                    to={`${modulePath}/list`}\r\n                  />\r\n                </Switch>\r\n              </HashRouter>\r\n            </div>\r\n          </div>\r\n        </Layout>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Operlog)\r\n","import React from 'react'\r\nimport './index.css'\r\nimport {\r\n  HashRouter,\r\n  Switch,\r\n  withRouter,\r\n  Redirect,\r\n  Route,\r\n  RouteComponentProps\r\n} from 'react-router-dom'\r\nimport headerMenu from '../menu'\r\nimport { UserContext } from '../index'\r\nimport UserModule from './user/index'\r\nimport DocmModule from './docm/index'\r\nimport AccountModule from './account/index'\r\nimport OperlogModule from './operlog/index'\r\n\r\ntype IProps = RouteComponentProps & {}\r\n\r\ntype IState = {}\r\n\r\nclass Side extends React.Component<IProps, IState> {\r\n  render() {\r\n    return (\r\n      <UserContext.Consumer>\r\n        {userInfo => {\r\n          const menus = headerMenu.filter(m => {\r\n            if (userInfo['username']) {\r\n              if (userInfo['username'] === 'admin') {\r\n                return m.role.filter(role => role === 'admin').length > 0\r\n              } else {\r\n                return m.role.filter(role => role === 'normal').length > 0\r\n              }\r\n            }\r\n            return false\r\n          })\r\n          const routeMap = [\r\n            {\r\n              key: '/docm',\r\n              value: <Route key=\"docm\" path={'/main/docm'} component={DocmModule} />\r\n            },\r\n            {\r\n              key: '/user',\r\n              value: <Route key=\"user\" path={'/main/user'} component={UserModule} />\r\n            },\r\n            {\r\n              key: '/account',\r\n              value: <Route key=\"account\" path={'/main/account'} component={AccountModule} />\r\n            },\r\n            {\r\n              key: '/operlog',\r\n              value: <Route key=\"operlog\" path={'/main/operlog'} component={OperlogModule} />\r\n            }\r\n          ]\r\n          return (\r\n            menus.length > 0 && (\r\n              <HashRouter>\r\n                <Switch>\r\n                  <Redirect\r\n                    path={'/main'}\r\n                    exact={true}\r\n                    to={`/main${menus[0].key}`}\r\n                  />\r\n                  {routeMap\r\n                    .filter(r => menus.filter(m => m.key === r.key).length > 0)\r\n                    .map(r => r.value)}\r\n                </Switch>\r\n              </HashRouter>\r\n            )\r\n          )\r\n        }}\r\n      </UserContext.Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Side)\r\n","import React, { Component } from 'react'\r\nimport { Layout } from 'antd'\r\nimport HomeHeader from './header/index'\r\nimport HomeSider from './sider/index'\r\nimport Http from '../common/http'\r\nimport './index.css'\r\nimport IAccountVO from './sider/user/manage/type'\r\n\r\ninterface IProps {}\r\n\r\ninterface IState {}\r\n\r\nexport const UserContext = React.createContext<IAccountVO>({} as IAccountVO)\r\n\r\nclass Home extends Component<IProps, IState> {\r\n  state = {\r\n    collapsed: false,\r\n    userInfo: {} as IAccountVO\r\n  }\r\n\r\n  componentDidMount() {\r\n    Http.get(`/account?id=${sessionStorage.getItem('userId')}`)\r\n      .then(res => {\r\n        const userInfo = { ...res.data.data }\r\n        this.setState({ userInfo })\r\n      })\r\n      .catch(err => {})\r\n  }\r\n\r\n  toggleCollapsed = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { userInfo } = this.state\r\n    return userInfo['id'] ? (\r\n      <UserContext.Provider value={userInfo}>\r\n        <Layout className=\"ant-layout-home\">\r\n          <HomeHeader />\r\n          <HomeSider />\r\n        </Layout>\r\n      </UserContext.Provider>\r\n    ) : (\r\n      <div />\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { Form, Icon, Input, Button, message } from 'antd'\r\nimport { FormComponentProps } from 'antd/lib/form'\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\r\nimport Http from '../common/http/index'\r\nimport md5 from 'js-md5'\r\nimport img from '../assert/img/login_3.jpg'\r\nimport Logo from '../assert/svg/Logo.svg'\r\nimport './index.css'\r\n\r\ntype IProps = RouteComponentProps & {}\r\n\r\ninterface IState {}\r\n\r\nclass Login extends React.Component<IProps, IState> {\r\n  form: React.ReactElement<FormProps> | undefined\r\n\r\n  handleSubmit = (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n    this.form &&\r\n      this.form.props.form.validateFields(async (err, values) => {\r\n        if (!err) {\r\n          const password = md5(values.password)\r\n          await Http.post(`/account/login`, { ...values, password })\r\n            .then(res => {\r\n              if (res.data.status === '00000000') {\r\n                sessionStorage.setItem('userId', res.data.data.id)\r\n                setTimeout(() => {\r\n                  this.props.history.push('/main')\r\n                }, 300)\r\n              } else {\r\n                this.form &&\r\n                  this.form.props.form.setFields({\r\n                    password: {\r\n                      value: values.password,\r\n                      errors: [new Error(res.data.message)]\r\n                    }\r\n                  })\r\n              }\r\n            })\r\n            .catch(err => {\r\n              message.error('服务器异常')\r\n            })\r\n        }\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"login\">\r\n        <img className=\"login-img\" src={img} alt=\"\" />\r\n        <div className=\"login-form\">\r\n          <div className=\"login-form-top\">\r\n            <div className=\"logo\">\r\n              <a href=\"/\">\r\n                <img className=\"logo-img\" src={Logo} alt=\"logo\" />\r\n                <span className=\"logo-text\">Contract MS</span>\r\n              </a>\r\n            </div>\r\n            <div className=\"logo-desc\">欢迎登录合同管理系统</div>\r\n          </div>\r\n          <WrappedNormalLoginForm\r\n            wrappedComponentRef={(form: React.ReactElement<FormProps>) => {\r\n              this.form = form\r\n            }}\r\n          />\r\n          <Button\r\n            className=\"login-form-item\"\r\n            type=\"primary\"\r\n            onClick={this.handleSubmit}\r\n          >\r\n            登录\r\n          </Button>\r\n        </div>\r\n        <div className=\"copyright\"></div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Login)\r\n\r\ninterface FormProps extends FormComponentProps {\r\n  username: string\r\n  password: string\r\n  onSubmit?: () => void\r\n}\r\n\r\nclass NormalLoginForm extends React.Component<FormProps, any> {\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form\r\n    return (\r\n      <Form layout={'vertical'}>\r\n        <Form.Item>\r\n          {getFieldDecorator('username', {\r\n            rules: [{ required: true, message: '请输入用户名' }]\r\n          })(\r\n            <Input\r\n              className=\"login-form-item\"\r\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              placeholder=\"用户名\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('password', {\r\n            rules: [{ required: true, message: '请输入密码' }]\r\n          })(\r\n            <Input\r\n              className=\"login-form-item\"\r\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              type=\"password\"\r\n              placeholder=\"密码\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create({\r\n  name: 'normal_login'\r\n})(NormalLoginForm)\r\n","import React, { PureComponent } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom'\r\nimport { LocaleProvider } from 'antd'\r\nimport Home from './home/index'\r\nimport Login from './login/index'\r\nimport zhCN from 'antd/es/locale-provider/zh_CN'\r\nimport PrivateRoute from './common/route'\r\nimport 'moment/locale/zh-cn' // 全局修改\r\nimport './index.css'\r\n\r\ninterface IProps {}\r\n\r\ninterface IState {}\r\n\r\nclass App extends PureComponent<IProps, IState> {\r\n  render() {\r\n    return (\r\n      <LocaleProvider locale={zhCN}>\r\n        <HashRouter>\r\n          <Switch>\r\n            <Redirect path={'/'} exact={true} to={'/main'} />\r\n            <Route path={'/login'} component={Login} />\r\n            <PrivateRoute path={'/main'} component={Home} />\r\n          </Switch>\r\n        </HashRouter>\r\n      </LocaleProvider>\r\n    )\r\n  }\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}