<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="indi.aby.docm.core.contract.ContractMapper">
    <resultMap id="ContractEntity" type="indi.aby.docm.core.contract.ContractEntity"
               extends="indi.rui.common.web.dao.IMapper.AbstractData">
        <result column="project_name" property="projectName"/>
        <result column="project_type" property="projectType"/>
        <result column="company" property="company"/>
        <result column="contract_num" property="contractNum"/>
        <result column="contract_time" property="contractTime"/>
        <result column="money" property="money"/>
        <result column="desc" property="desc"/>
        <association column="dept" property="dept" resultMap="indi.aby.docm.core.account.UserMapper.DeptVO"/>
        <collection notNullColumn="attachment_id" property="attachments" ofType="indi.aby.docm.core.contract.AttachmentVO"
                    resultMap="AttachmentVO"/>
        <collection notNullColumn="pay_item_id" property="payItems" ofType="indi.aby.docm.core.contract.PayItemEntity"
                    resultMap="PayItemEntity"/>
    </resultMap>
    <resultMap id="AttachmentVO" type="indi.aby.docm.core.contract.AttachmentVO"
               extends="indi.rui.common.web.dao.IMapper.AbstractData">
        <id column="attachment_id" property="id"/>
        <result column="docm_id" property="docmId"/>
        <result column="doc_path" property="docPath"/>
        <result column="doc_name" property="docName"/>
        <result column="type" property="type"/>
        <result column="size" property="size"/>
        <result column="md5" property="md5"/>
    </resultMap>
    <resultMap id="PayItemEntity" type="indi.aby.docm.core.contract.PayItemEntity"
               extends="indi.rui.common.web.dao.IMapper.AbstractData">
        <id column="pay_item_id" property="id"/>
        <result column="order" property="order"/>
        <result column="pay_item_money" property="money"/>
        <result column="credential_num" property="credentialNum"/>
        <result column="credential_time" property="credentialTime"/>
        <result column="contract_id" property="contractId"/>
        <result column="pay_item_desc" property="desc"/>
    </resultMap>

    <insert id="add">
        insert into t_docm (id, name, project_name, project_type, company, contract_num, contract_time, money, dept_id)
        values (#{id}, #{name}, #{projectName}, #{projectType}, #{company}, #{contractNum}, #{contractTime}, #{money}, #{dept.id})
    </insert>
    <update id="update">
        update t_docm
        <set>
            <if test="projectName != null || nullAbles.projectName">
                project_name = #{projectName},
            </if>
            <if test="projectType != null || nullAbles.projectType">
                project_type = #{projectType},
            </if>
            <if test="company != null || nullAbles.company">
                company = #{company},
            </if>
            <if test="contractNum != null || nullAbles.contractNum">
                contract_num = #{contractNum},
            </if>
            <if test="contractTime != null || nullAbles.contractTime">
                contract_time = #{contractTime},
            </if>
            <if test="money != null || nullAbles.money">
                money = #{money},
            </if>
            <choose>
                <when test="nullAbles.dept">
                    <choose>
                        <when test="dept != null">
                            dept_id = #{dept.id},
                        </when>
                        <otherwise>
                            dept_id = null,
                        </otherwise>
                    </choose>
                </when>
                <otherwise>
                    <if test="dept != null and dept.id != null">
                        dept_id = #{dept.id},
                    </if>
                </otherwise>
            </choose>
        </set>
        where id = #{id}
    </update>
    <select id="findTotalNum" resultType="java.lang.Integer">
        select count(docm.id)
        from t_docm docm
        left join t_dept dept on docm.dept_id = dept.id
        where docm.state = '1'
        <if test="conditions.keywords != null and conditions.keywords.size > 0">
            and(
            <foreach collection="conditions.keywords" open="(" close=")" item="keyword" separator="and">
                docm.project_name like '%${keyword}%'
            </foreach>
            ||
            <foreach collection="conditions.keywords" open="(" close=")" item="keyword" separator="and">
                docm.company like '%${keyword}%'
            </foreach>
            )
        </if>
        <if test="conditions.projectType != null">
            and docm.project_type = #{conditions.projectType}
        </if>
        <if test="conditions.dept != null and conditions.dept.id != null">
            and docm.dept_id = #{conditions.dept.id}
        </if>
    </select>
    <select id="findAll" resultMap="ContractEntity">
        select sub.*, attachment.*, attachment.id attachment_id, pi.*, pi.id pay_item_id
        from (
            select docm.*, dept.name dept_name
            from t_docm docm
            left join t_dept dept on docm.dept_id = dept.id
            where docm.state = '1'
            <if test="conditions.keywords != null and conditions.keywords.size > 0">
                and(
                <foreach collection="conditions.keywords" open="(" close=")" item="keyword" separator="and">
                    docm.project_name like '%${keyword}%'
                </foreach>
                ||
                <foreach collection="conditions.keywords" open="(" close=")" item="keyword" separator="and">
                    docm.company like '%${keyword}%'
                </foreach>
                ||
                <foreach collection="conditions.keywords" open="(" close=")" item="keyword" separator="and">
                    docm.money like '%${keyword}%'
                </foreach>
                )
            </if>
            <if test="conditions.projectType != null">
                and docm.project_type = #{conditions.projectType}
            </if>
            <if test="conditions.dept != null and conditions.dept.id != null">
                and docm.dept_id = #{conditions.dept.id}
            </if>
            order by
            <choose>
                <when test="sorters.size > 0">
                    <foreach collection="sorters.entrySet()" index="key" item="value">
                        docm.${key} ${value}
                    </foreach>
                </when>
                <otherwise>
                    docm.create_time desc
                </otherwise>
            </choose>
            limit #{offset}, #{pageSize}) as sub
        left join t_attachment attachment on sub.id = attachment.docm_id
        left join t_pay_item pi on pi.contract_id = sub.id
        order by
        <choose>
            <when test="sorters.size > 0">
                <foreach collection="sorters.entrySet()" index="key" item="value">
                    sub.${key} ${value}
                </foreach>
            </when>
            <otherwise>
                sub.create_time desc
            </otherwise>
        </choose>
    </select>
    <select id="findById" resultMap="ContractEntity">
        select docm.*, dept.id dept_id, dept.name dept_name, attachment.*, attachment.id attachment_id,
        pi.id pay_item_id, pi.order, pi.money pay_item_money, pi.desc pay_item_desc
        from t_docm docm
        left join t_dept dept on docm.dept_id = dept.id
        left join t_attachment attachment on attachment.docm_id = docm.id
        left join t_pay_item pi on pi.contract_id = docm.id
        where docm.id = #{id}
        order by pi.order
    </select>
    <select id="findAllType" resultType="java.lang.String">
        select project_type from t_docm where project_type is not null group by project_type
    </select>
    <delete id="delete">
        delete from t_docm where id = #{id}
    </delete>
</mapper>