<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="indi.aby.docm.api.operlog.OperLogMapper">
    <resultMap id="OperLogEntity" type="indi.aby.docm.api.operlog.entity.OperLogEntity">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="module" property="module"/>
        <result column="result" property="result"/>
        <result column="operator" property="operator"/>
        <result column="user_agent" property="userAgent"/>
        <result column="ip" property="ip"/>
        <result column="method" property="method"/>
        <result column="url" property="url"/>
        <result column="status" property="status"/>
        <result column="state" property="state"/>
        <result column="create_time" property="createTime" typeHandler="indi.rui.common.web.mybatis.DateTypeHandler"/>
        <result column="last_modify_time" property="lastModifyTime" typeHandler="indi.rui.common.web.mybatis.DateTypeHandler"/>
    </resultMap>
    <insert id="add">
        insert into t_oper_log (id, name, module, result, operator, user_agent, ip, method, url, content)
        values (#{id}, #{name}, #{module}, #{result}, #{operator}, #{userAgent}, #{ip}, #{method},  #{url}, #{content})
    </insert>
    <update id="update">
        update t_oper_log
        <set>
            <if test="module != null || nullAbles.module">
                module = #{module},
            </if>
            <if test="result != null || nullAbles.result">
                result = #{result},
            </if>
            <if test="ip != null || nullAbles.ip">
                ip = #{ip},
            </if>
            <if test="operator != null || nullAbles.operator">
                operator = #{operator},
            </if>
            <if test="userAgent != null || nullAbles.userAgent">
                user_agent = #{userAgent},
            </if>
            <if test="url != null || nullAbles.url">
                url = #{url},
            </if>
            <if test="status != null || nullAbles.status">
                status = #{status},
            </if>
            <if test="method != null || nullAbles.method">
                method = #{method},
            </if>
        </set>
        where id = #{id}
    </update>
    <select id="findTotalNum" resultType="java.lang.Integer">
        select count(id) from t_oper_log
        where state = '1'
        <if test="conditions.keywords != null and conditions.keywords.size > 0">
            and(
            <foreach collection="conditions.keywords" open="(" close=")" item="keyword" separator="and">
                module like '%${keyword}%'
            </foreach>
            ||
            <foreach collection="conditions.keywords" open="(" close=")" item="keyword" separator="and">
                name like '%${keyword}%'
            </foreach>
            )
        </if>
        <if test="conditions.name != null">
            and name = #{conditions.name}
        </if>
        <if test="conditions.module != null">
            and module = #{conditions.module}
        </if>
        <if test="conditions.result != null">
            and result = #{conditions.result}
        </if>
        <if test="conditions.operator != null">
            and operator = #{conditions.operator}
        </if>
        <if test="conditions.method != null">
            and method = #{conditions.method}
        </if>
        <if test="conditions.status != null">
            and status = #{conditions.status}
        </if>
    </select>
    <select id="findAll" resultMap="OperLogEntity">
        select * from t_oper_log
        where state = '1'
        <if test="conditions.keywords != null and conditions.keywords.size > 0">
            and(
            <foreach collection="conditions.keywords" open="(" close=")" item="keyword" separator="and">
                module like '%${keyword}%'
            </foreach>
            ||
            <foreach collection="conditions.keywords" open="(" close=")" item="keyword" separator="and">
                name like '%${keyword}%'
            </foreach>
            )
        </if>
        <if test="conditions.name != null">
            and name = #{conditions.name}
        </if>
        <if test="conditions.module != null">
            and module = #{conditions.module}
        </if>
        <if test="conditions.result != null">
            and result = #{conditions.result}
        </if>
        <if test="conditions.operator != null">
            and operator = #{conditions.operator}
        </if>
        <if test="conditions.method != null">
            and method = #{conditions.method}
        </if>
        <if test="conditions.status != null">
            and status = #{conditions.status}
        </if>
        order by
        <choose>
            <when test="sorters.size > 0">
                <foreach collection="sorters.entrySet()" index="key" item="value">
                    ${key} ${value}
                </foreach>
            </when>
            <otherwise>
                create_time desc
            </otherwise>
        </choose>
        limit #{offset}, #{pageSize}
    </select>
    <select id="findById" resultMap="OperLogEntity">
        select * from t_oper_log where id = #{id}
    </select>
    <delete id="delete">
        delete from t_oper_log where id = #{id}
    </delete>
</mapper>