<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="indi.aby.docm.core.dao.DocmMapper">
    <resultMap id="DocmEntity" type="indi.aby.docm.core.entity.DocmEntity">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="project_name" property="projectName"/>
        <result column="project_type" property="projectType"/>
        <result column="company" property="company"/>
        <result column="contract_num" property="contractNum"/>
        <result column="contract_time" property="contractTime"/>
        <result column="credential_num" property="credentialNum"/>
        <result column="credential_time" property="credentialTime"/>
        <result column="money" property="money"/>
        <result column="state" property="state"/>
        <result column="create_time" property="createTime" typeHandler="indi.rui.common.web.mybatis.DateTypeHandler"/>
        <result column="last_modify_time" property="lastModifyTime" typeHandler="indi.rui.common.web.mybatis.DateTypeHandler"/>
    </resultMap>

    <insert id="add">
        insert into t_docm (id, name, project_name,
        project_type, company, contract_num,
        contract_time, credential_num, credential_time,
        money)
        values (#{id}, #{name}, #{projectName},
        #{projectType}, #{company}, #{contractNum},
        #{contractTime}, #{credentialNum}, #{credentialTime},
        #{money})
    </insert>

    <update id="update">
        update t_docm
        <set>
            <if test="projectName != null || nullAbles.projectName">
                project_name = #{projectName},
            </if>
            <if test="projectName != null || nullAbles.projectName">
                project_name = #{projectName},
            </if>
            <if test="company != null || nullAbles.company">
                company = #{company},
            </if>
            <if test="contractNum != null || nullAbles.contractNum">
                contract_num = #{contractNum},
            </if>
            <if test="contractTime != null || nullAbles.contractTime">
                contract_time = #{contractTime},
            </if>
            <if test="credentialNum != null || nullAbles.credentialNum">
                credential_num = #{credentialNum},
            </if>
            <if test="credentialTime != null || nullAbles.credentialTime">
                credential_time = #{credentialTime},
            </if>
            <if test="money != null || nullAbles.money">
                money = #{money},
            </if>
        </set>
        where id = #{id}
    </update>

    <select id="findTotalNum" resultType="java.lang.Integer">
        select count(id) from t_docm
        where state = '1'
        <if test="conditions.keywords != null and conditions.keywords.size > 0">
            and(
            <foreach collection="conditions.keywords" open="(" close=")" item="keyword" separator="and">
                project_name like '%${keyword}%'
            </foreach>
            ||
            <foreach collection="conditions.keywords" open="(" close=")" item="keyword" separator="and">
                company like '%${keyword}%'
            </foreach>
            )
        </if>
        <if test="conditions.projectType != null">
            and project_type = #{conditions.projectType}
        </if>
    </select>

    <select id="findAll" resultMap="DocmEntity">
        select * from t_docm
        where state = '1'
        <if test="conditions.keywords != null and conditions.keywords.size > 0">
            and(
            <foreach collection="conditions.keywords" open="(" close=")" item="keyword" separator="and">
                project_name like '%${keyword}%'
            </foreach>
            ||
            <foreach collection="conditions.keywords" open="(" close=")" item="keyword" separator="and">
                company like '%${keyword}%'
            </foreach>
            )
        </if>
        <if test="conditions.projectType != null">
            and project_type = #{conditions.projectType}
        </if>
        order by
        <choose>
            <when test="sorters.size > 0">
                <foreach collection="sorters.entrySet()" index="key" item="value">
                    ${key} ${value}
                </foreach>
            </when>
            <otherwise>
                create_time desc
            </otherwise>
        </choose>
        limit #{offset}, #{pageSize}
    </select>

    <select id="findById" resultMap="DocmEntity">
        select * from t_docm where id = #{id}
    </select>

    <delete id="delete">
        delete from t_docm where id = #{id}
    </delete>
</mapper>